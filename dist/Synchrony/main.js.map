{"version":3,"sources":["./src/app/core/services/crud.service.ts","./src/app/ui/student/student-home/student-home.component.ts","./src/app/ui/student/student-home/student-home.component.html","min-document (ignored)","./src/app/ui/admin/account-delete/account-delete.component.ts","./src/app/ui/admin/account-delete/account-delete.component.html","./src/app/ui/admin/freelance-wage/freelance-wage.component.ts","./src/app/ui/admin/freelance-wage/freelance-wage.component.html","./src/environments/environment.ts","./src/app/ui/admin/account-edit-form/account-edit-form.component.ts","./src/app/ui/admin/account-edit-form/account-edit-form.component.html","./src/app/ui/instructor/assignment-edit-individual/assignment-edit-individual.component.ts","./src/app/ui/instructor/assignment-edit-individual/assignment-edit-individual.component.html","./src/app/ui/instructor/instructor-home/instructor-home.component.ts","./src/app/ui/instructor/instructor-home/instructor-home.component.html","./src/app/shared/components/dialog-box/dialog-box.component.ts","./src/app/shared/components/dialog-box/dialog-box.component.html","./src/app/ui/home/update_password/update-password/update-password.component.ts","./src/app/ui/home/login/login.component.html","./src/app/ui/admin/account-edit/account-edit.component.ts","./src/app/ui/admin/account-edit/account-edit.component.html","./src/app/shared/components/input-select/input-select.component.ts","./src/app/shared/components/input-select/input-select.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/components/videojs-record/videojs-record.component.ts","./src/app/shared/components/videojs-record/videojs-record.component.html","./src/app/core/services/firestore.service.ts","./src/app/ui/instructor/assignment-edit/assignment-edit.component.ts","./src/app/ui/instructor/assignment-edit/assignment-edit.component.html","./src/app/ui/student/assignment-submit-individual/assignment-submit-individual.component.ts","./src/app/ui/student/assignment-submit-individual/assignment-submit-individual.component.html","./src/app/shared/components/table/table.component.ts","./src/app/shared/components/table/table.component.html","./src/app/core/models/account.ts","./src/app/app.module.ts","./src/app/ui/student/assignment-view/assignment-view.component.ts","./src/app/ui/student/assignment-view/assignment-view.component.html","./src/app/shared/components/header/header.component.html","./src/app/shared/components/header/header.component.ts","./src/environments/environment.prod.ts","./src/app/shared/components/confirm-modal/confirm-modal.component.ts","./src/app/shared/components/confirm-modal/confirm-modal.component.html","./src/app/ui/admin/admin-home/admin-home.component.ts","./src/app/ui/admin/admin-home/admin-home.component.html","./src/app/ui/admin/account-create/account-create.component.ts","./src/app/ui/admin/account-create/account-create.component.html","./src/app/shared/components/cards/cards.component.ts","./src/app/shared/components/cards/cards.component.html","./src/app/shared/components/dropzone/dropzone.component.ts","./src/app/shared/components/dropzone/dropzone.component.html","./src/app/ui/instructor/assignment-mark-individual/assignment-mark-individual.component.ts","./src/app/ui/instructor/assignment-mark-individual/assignment-mark-individual.component.html","./src/app/ui/student/assignment-feedback-individual/assignment-feedback-individual.component.ts","./src/app/ui/student/assignment-feedback-individual/assignment-feedback-individual.component.html","./src/app/ui/instructor/assignment-create/assignment-create.component.ts","./src/app/ui/instructor/assignment-create/assignment-create.component.html","./src/app/app-routing.module.ts","./src/app/shared/components/input-dropdown-select/input-dropdown-select.component.ts","./src/app/shared/components/input-dropdown-select/input-dropdown-select.component.html","./src/app/ui/instructor/assignment-mark/assignment-mark.component.ts","./src/app/ui/instructor/assignment-mark/assignment-mark.component.html","./src/main.ts","./src/app/ui/home/login/login.component.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {FirestoreService} from './firestore.service';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CrudService {\r\n\r\n  constructor(\r\n    private fs: FirestoreService\r\n  ) {\r\n  }\r\n  create(collection: string, data: any): Promise<string> {\r\n    return this.fs.add(collection, data);\r\n  }\r\n  update(collection: string, docId: string| undefined, data: any): Promise<void> {\r\n    return this.fs.update(collection + '/' + docId, data);\r\n  }\r\n\r\n  delete(collection: string, docId: string | undefined): Promise<void> {\r\n    return this.fs.delete(collection + '/' + docId);\r\n  }\r\n  readByDocId(collection: string, docId: string| undefined): Observable<any> {\r\n    return this.fs.doc$(collection + '/' + docId);\r\n  }\r\n  read(collection: string, filterName1: string = '', filterOp1: any = '', filterValue1: any = '',\r\n       filterName2: string = '', filterOp2: any = '', filterValue2: any = '',\r\n       filterName3: string = '', filterOp3: any = '', filterValue3: any = '',\r\n       filterName4: string = '', filterOp4: any = '', filterValue4: any = '',\r\n       sortColumn = '', isAsc = false): Observable<any[]> {\r\n    // Cannot use === as filterValue1 etc can be a number\r\n    // tslint:disable-next-line:triple-equals\r\n    // console.log(filterValue1 + ',' + filterValue2 + ',' + filterValue3 + ',' + filterValue4 + ',');\r\n    // tslint:disable-next-line:triple-equals\r\n    if (filterValue1 == '' && filterValue2 == '' && filterValue3 == '' && filterValue4 == '') {\r\n      return this.fs.col$(collection, ref => {\r\n        return ref;\r\n        // .orderBy('createdDatetime', 'desc');\r\n      });\r\n    }\r\n    // @ts-ignore\r\n    return this.fs.col$(collection, ref => {\r\n      let result;\r\n      if (filterValue1 !== '') {result = ref.where(filterName1, filterOp1, filterValue1); }\r\n      // else if (filterValue2 !== '') {result = ref.where(filterName2, filterOp2, filterValue2); }\r\n      // else if (filterValue3 !== '') {result = ref.where(filterName3, filterOp3, filterValue3); }\r\n      // else if (filterValue4 !== '') {result = ref.where(filterName4, filterOp4, filterValue4); }\r\n      for (let i = 2; i <= 4; i++) {\r\n        switch (i) {\r\n          // case 1:\r\n          //   if (filterValue1 !== '') {\r\n          //     console.log('First filter op only');\r\n          //     result = result?.where(filterName1, filterOp1, filterValue1); }\r\n          //   break;\r\n          case 2:\r\n            if (filterValue2 !== '') {\r\n              result = result?.where(filterName2, filterOp2, filterValue2); }\r\n            break;\r\n          case 3:\r\n            if (filterValue3 !== '') {result = result?.where(filterName3, filterOp3, filterValue3); }\r\n            break;\r\n          case 4:\r\n            if (filterValue4 !== '') {result = result?.where(filterName4, filterOp4, filterValue4); }\r\n            break;\r\n        }\r\n      }\r\n      return result; // ?.orderBy('school', 'asc');\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-student-home',\r\n  templateUrl: './student-home.component.html',\r\n  styleUrls: ['./student-home.component.scss']\r\n})\r\nexport class StudentHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<p>student-home works!</p>\r\n","/* (ignored) */","import { Component, OnInit, AfterViewInit, ViewChild, Input } from '@angular/core';\r\nimport { CrudService } from 'src/app/core/services/crud.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { TableComponent } from 'src/app/shared/components/table/table.component';\r\nimport { Account } from '../../../core/models/account';\r\nimport { first } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-account-delete',\r\n  templateUrl: './account-delete.component.html',\r\n  styleUrls: ['./account-delete.component.scss']\r\n})\r\nexport class AccountDeleteComponent implements OnInit, AfterViewInit {\r\n\r\n  accounts:Account[] = [];\r\n  accountDetail!:Account;\r\n  accountUsername!:string;\r\n  // set table data\r\n  dataSource!:any;\r\n  displayedColumns:string[] = ['username','first_name','last_name','role', 'school_instrument_level', 'action'];\r\n  actionType:string = \"accountDelete\";\r\n\r\n  // === set filter data === //\r\n  //schools:string[] = [];\r\n  school_instrument_levels:string[] = [];\r\n  //groups:string[] = [];\r\n  //instruments:string[] = [];\r\n  //levels:string[] = [];\r\n  roles:string[] = [\"admin\",\"instructor\",\"student\"];\r\n\r\n  sub_schools:string[] = [];\r\n  sub_instrument:string[] = [];\r\n  sub_levels:string[] = [];\r\n\r\n  sub_display_instrument:boolean = false\r\n  sub_display_levels:boolean = false\r\n\r\n  // === set filter name === //\r\n  nameSchool:string = \"School\"\r\n  //nameGroup:string = \"Group\"\r\n  nameRole:string = \"Role\"\r\n  nameSchoolInstrumentLevels = \"School Instrument Levels\"\r\n  nameInstrument:string = \"Instrument\"\r\n  nameLevels:string = \"Levels\"\r\n\r\n  // === get filter data === //\r\n  selectRoles:string[] = [];\r\n  selectSchools:string[] = [];\r\n  //selectGroups:string[] = [];\r\n  selectGroups:string[] = [];\r\n  //selectSchoolInstrumentLevels:string[] = [];\r\n  select_Combine_SchoolInstrumentLevels:string[] = [];\r\n  selectSubSchools:string[] = [];\r\n  selectSubInstruments:string[] = [];\r\n  selectSubLevels:string[] = [];\r\n\r\n  constructor(\r\n    private crudservice:CrudService,\r\n    \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieve_all_accounts();\r\n    this.accountDetail = JSON.parse(sessionStorage.getItem(\"account\")!);\r\n    this.accountUsername = this.accountDetail.username\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    // empty\r\n  }\r\n\r\n  async retrieve_all_accounts(){\r\n    const data = await this.crudservice.read('accounts').pipe(first()).toPromise();\r\n    if(data!=undefined||data!=null){\r\n      //this.dataSource = data\r\n      for(var ele of data){\r\n        try{\r\n          this.create_account(ele)\r\n          var school_instrument_level = ele[\"school_instrument_level\"]\r\n          this.set_distint_school_instrument_level(school_instrument_level);\r\n        } catch(e){\r\n          // console.log(\"something wrong with the data! check the database!\")\r\n        }\r\n      }\r\n      //console.log(this.accounts.length)\r\n      this.dataSource = this.accounts\r\n    }\r\n  }\r\n\r\n  create_account(data:any){\r\n    if(data.school[0] == \"-\"){\r\n      data.school[0] = \"NA\";\r\n    }\r\n    if(data.school_instrument_level[0] == \"-\"){\r\n      data.school_instrument_level[0] = \"NA\";\r\n    }\r\n    if(!data.is_delete){\r\n      var account: Account = {\r\n        docId: data.docId,\r\n        username: data.username,\r\n        role: data.role,\r\n        school: data.school,\r\n        school_instrument_level: data.school_instrument_level,\r\n        first_name: data.first_name,\r\n        last_name: data.last_name,\r\n        password: data.password,\r\n        first_login: data.first_login,\r\n        is_delete: data.is_delete\r\n      };\r\n      this.accounts.push(account);\r\n    }\r\n  }\r\n\r\n  // Method:\r\n  set_distint_school_instrument_level(data:string[]){\r\n    for(var dataSchoolInstrumentLevel of data){\r\n      if(dataSchoolInstrumentLevel!=\"NA\"){\r\n        var sub_query = dataSchoolInstrumentLevel.split(\"_\")\r\n        var school = sub_query[0];\r\n        var instrument = sub_query[1];\r\n        var level = sub_query[2];\r\n        if(this.sub_schools.indexOf(school)==-1){\r\n          this.sub_schools.push(school)\r\n        }\r\n        if(this.sub_instrument.indexOf(instrument)==-1){\r\n          this.sub_instrument.push(instrument)\r\n        }\r\n        if(this.sub_levels.indexOf(level)==-1){\r\n          this.sub_levels.push(level)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // == get filter == //\r\n  get_query_data_roles($event:any):void{\r\n    this.selectRoles = $event.value\r\n    this.query_table_with_filter()\r\n  }\r\n\r\n  get_query_data_sub_schools($event:any):void{\r\n    this.selectSubSchools = $event.value\r\n    if(this.selectSubSchools.length == 0){\r\n      this.sub_display_instrument = false\r\n      this.sub_display_levels = false\r\n    } else {\r\n      this.sub_display_instrument = true\r\n      this.sub_display_levels = false\r\n    }\r\n  }\r\n  get_query_data_sub_instruments($event:any):void{\r\n    this.selectSubInstruments = $event.value\r\n    if(this.selectSubInstruments.length == 0){\r\n      this.sub_display_levels = false\r\n    } else {\r\n      this.sub_display_levels = true\r\n    }\r\n  }\r\n  get_query_data_sub_levels($event:any):void{\r\n    this.selectSubLevels = $event.value\r\n    this.combine_querry_search_data()\r\n    this.query_table_with_filter()\r\n  }\r\n\r\n  // Method: Combine all the permutation of the sub Strings of School, Instrument and levels\r\n  combine_querry_search_data(){\r\n    // console.log(this.selectSubSchools)\r\n    // console.log(this.selectSubInstruments)\r\n    // console.log(this.selectSubLevels)\r\n    this.select_Combine_SchoolInstrumentLevels = [];\r\n    for(var eleSchool of this.selectSubSchools){\r\n      // console.log(eleSchool)\r\n      for(var eleInstrument of this.selectSubInstruments){\r\n        for(var eleLevel of this.selectSubLevels){\r\n          var query = eleSchool + \"_\" + eleInstrument + \"_\" + eleLevel\r\n          // console.log(query);\r\n          if(this.select_Combine_SchoolInstrumentLevels.indexOf(query)==-1){\r\n            this.select_Combine_SchoolInstrumentLevels.push(query)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    //console.log(this.select_Combine_SchoolInstrumentLevels)\r\n  }\r\n\r\n  // Method:\r\n  query_table_with_filter(){\r\n    var result:Account[] = [];\r\n    result = this.accounts;\r\n    if(this.selectRoles.length!=0){\r\n      result = this.filtering_by_role(result, this.selectRoles)\r\n    }\r\n    if(this.select_Combine_SchoolInstrumentLevels.length!=0){\r\n      result = this.filtering_by_school_instrument_levels(result, this.select_Combine_SchoolInstrumentLevels)\r\n    }\r\n    if(this.selectRoles.length == 0 && this.select_Combine_SchoolInstrumentLevels.length == 0){\r\n      result = this.accounts;\r\n    }\r\n    this.dataSource = [];\r\n    this.dataSource = result\r\n  }\r\n\r\n  filtering_by_role(result:Account[], filter:string[]):Account[]{\r\n    var filterResult:Account[] = [];\r\n    var exist:boolean = false;\r\n    for(var ele of result){\r\n      for(var role of filter){\r\n        if(ele.role == role){\r\n          for(var eleResult of filterResult){\r\n            if(eleResult.docId == ele.docId){\r\n              exist = true\r\n            }\r\n          }\r\n          if(!exist){\r\n            filterResult.push(ele)\r\n            exist = false\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return filterResult\r\n  }\r\n\r\n  // Brute force method\r\n  filtering_by_school_instrument_levels(result:Account[], filter:string[]):Account[]{\r\n    var filterResult:Account[] = [];\r\n    var exist:boolean = false;\r\n    for(var ele of result){\r\n      var school_instrument_levels = ele.school_instrument_level\r\n      for(var query of filter){\r\n        for(var school_instrument_level of school_instrument_levels){\r\n          if(school_instrument_level == query){\r\n            for(var eleResult of filterResult){\r\n              if(eleResult.docId == ele.docId){\r\n                exist = true\r\n              }\r\n            }\r\n            if(!exist){\r\n              filterResult.push(ele)\r\n              exist = false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return filterResult\r\n  }\r\n\r\n\r\n  delete_doc_id($event:any):void{\r\n    if($event!=\"\"||$event!=null){\r\n      // console.log($event)\r\n      this.crudservice.delete(\"accounts\",$event)\r\n      var result:Account[] = []\r\n      for(var ele of this.dataSource){\r\n        if(ele.docId != $event){\r\n          result.push(ele)\r\n        }\r\n      }\r\n      this.dataSource = result;\r\n    } else {\r\n      // console.log(\"There is no account to delete!\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"account-create-wrapper wrapper-padding\">\r\n  <h1 class=\"mb-3\">Delete Account</h1>\r\n \r\n  <app-input-dropdown-select [inputDataList]=\"roles\" [name]=\"nameRole\"  (outputData)=\"get_query_data_roles($event)\"></app-input-dropdown-select>\r\n  <br>\r\n  <ng-container><app-input-dropdown-select [inputDataList]=\"sub_schools\" [name]=\"nameSchool\" (outputData)=\"get_query_data_sub_schools($event)\"></app-input-dropdown-select></ng-container>\r\n  <ng-container *ngIf=\"sub_display_instrument\"><app-input-dropdown-select [inputDataList]=\"sub_instrument\" [name]=\"nameInstrument\" (outputData)=\"get_query_data_sub_instruments($event)\"></app-input-dropdown-select></ng-container>\r\n  <ng-container *ngIf=\"sub_display_levels\"><app-input-dropdown-select [inputDataList]=\"sub_levels\" [name]=\"nameLevels\" (outputData)=\"get_query_data_sub_levels($event)\"></app-input-dropdown-select></ng-container>\r\n  <br>\r\n  <!-- <app-table [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\" [actionType]=\"actionType\" [accountUsername]=\"accountUsername\" (outputData)=\"delete_doc_id($event)\"></app-table>-->\r\n  <app-table [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\" [actionType]=\"actionType\" [accountUsername]=\"accountUsername\"></app-table>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, AfterViewInit, ViewChild, Input } from '@angular/core';\r\nimport { CrudService } from 'src/app/core/services/crud.service';\r\nimport { Account } from '../../../core/models/account';\r\nimport { Wages } from '../../../core/models/wages';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-freelance-wage',\r\n  templateUrl: './freelance-wage.component.html',\r\n  styleUrls: ['./freelance-wage.component.scss']\r\n})\r\nexport class FreelanceWageComponent implements OnInit {\r\n\r\n  wages:any[] = [];\r\n  dataSource!:any;\r\n  displayedColumns:string[] = ['first_name', 'last_name' ,'month', 'number_of_minutes', 'school_abbreviation', 'year'];\r\n  //displayedColumns:string[] = ['month', 'number_of_minutes', 'school_abbreviation', 'year'];\r\n  actionType:string = \"wage\";\r\n  // set filter data\r\n  schools:string[] = [];\r\n  // set filter name\r\n  nameSchool:string = \"School\"\r\n  // selected schools \r\n  selectedSchools:string[] = [];\r\n\r\n  /*\r\n  accounts:Account[] = [];\r\n  // set table data\r\n  dataSource!:any;\r\n  displayedColumns:string[] = ['username', 'role', 'school', 'school_instrument_level', 'action'];\r\n  actionType:string = \"wage\";\r\n\r\n  // set filter data\r\n  school_instrument_levels:string[] = [];\r\n  sub_schools:string[] = [];\r\n  sub_instrument:string[] = [];\r\n  sub_levels:string[] = [];\r\n  sub_display_instrument:boolean = false\r\n  sub_display_levels:boolean = false\r\n\r\n  // set filter name\r\n  nameSchool:string = \"School\"\r\n  nameInstrument:string = \"Instrument\"\r\n  nameLevels:string = \"Levels\"\r\n\r\n  // get filter data\r\n  select_Combine_SchoolInstrumentLevels:string[] = [];\r\n  selectSubSchools:string[] = [];\r\n  selectSubInstruments:string[] = [];\r\n  selectSubLevels:string[] = [];\r\n  */\r\n  constructor(\r\n    private crudservice:CrudService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    //this.retrieve_all_accounts();\r\n    this.retrieve_all_wages();\r\n  }\r\n\r\n  async retrieve_all_wages(){\r\n    this.dataSource = [];\r\n    this.wages = [];\r\n    const data = await this.crudservice.read('wages').pipe(first()).toPromise();\r\n    for(var ele of data){\r\n      // console.log(ele)\r\n      const instructorData = await this.crudservice.readByDocId('accounts',ele.account_doc_id).pipe(first()).toPromise();\r\n      this.create_wage(ele, instructorData)\r\n      this.set_distint_school(ele.school_abbreviation)\r\n    }\r\n    this.dataSource = this.wages\r\n    // console.log(this.dataSource);\r\n  }\r\n\r\n  create_wage(data:any, instructorData:any){\r\n    //const instructor = await this.crudservice.readByDocId('accounts',data.account_doc_id).pipe(first()).toPromise();\r\n    //console.log(instructor)\r\n    var wage:any = {\r\n      docId: data.docId,\r\n      first_name: instructorData.first_name,\r\n      last_name: instructorData.last_name,\r\n      account_doc_id: data.account_doc_id,\r\n      month: data.month,\r\n      number_of_minutes: data.number_of_minutes,\r\n      school_abbreviation: data.school_abbreviation,\r\n      year: data.year\r\n    }\r\n    this.wages.push(wage);\r\n  }\r\n\r\n  set_distint_school(data:string){\r\n    if(this.schools.indexOf(data)==-1){\r\n      this.schools.push(data)\r\n    }\r\n  }\r\n\r\n  get_query_data_sub_schools($event:any):void{\r\n    this.selectedSchools = $event.value\r\n    // console.log(this.selectedSchools)\r\n    if(this.selectedSchools.length==0){\r\n      this.retrieve_all_wages();\r\n    } else{\r\n      this.filter_wages_by_selected_school();\r\n    }\r\n  }\r\n\r\n  async filter_wages_by_selected_school(){\r\n    this.dataSource = [];\r\n    this.wages = [];\r\n    const data = await this.crudservice.read('wages','school_abbreviation','in',this.selectedSchools).pipe(first()).toPromise();\r\n    // console.log(data)\r\n    for(var ele of data){\r\n      // console.log(ele)\r\n      const instructorData = await this.crudservice.readByDocId('accounts',ele.account_doc_id).pipe(first()).toPromise();\r\n      this.create_wage(ele, instructorData)\r\n    }\r\n    this.dataSource = this.wages\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  async retrieve_all_accounts(){\r\n    const data = await this.crudservice.read('accounts','role','==','instructor').pipe(first()).toPromise();\r\n    if(data!=undefined||data!=null){\r\n      //this.dataSource = data\r\n      for(var ele of data){\r\n        try{\r\n          this.create_account(ele)\r\n          var school_instrument_level = ele[\"school_instrument_level\"]\r\n          this.set_distint_school_instrument_level(school_instrument_level);\r\n        } catch(e){\r\n          console.log(\"something wrong with the data! check the database!\")\r\n        }\r\n      }\r\n      this.dataSource = this.accounts\r\n    }\r\n  }\r\n\r\n  create_account(data:any){\r\n    var account: Account = {\r\n      docId: data.docId,\r\n      username: data.username,\r\n      role: data.role,\r\n      school: data.school,\r\n      school_instrument_level: data.school_instrument_level,\r\n      first_name: data.first_name,\r\n      last_name: data.last_name,\r\n      password: data.password,\r\n      first_login: data.first_login\r\n    };\r\n    this.accounts.push(account);\r\n  }\r\n\r\n  // == set filter results == //\r\n   // Method:\r\n   set_distint_school_instrument_level(data:string[]){\r\n    for(var dataSchoolInstrumentLevel of data){\r\n      var sub_query = dataSchoolInstrumentLevel.split(\"_\")\r\n      var school = sub_query[0];\r\n      var instrument = sub_query[1];\r\n      var level = sub_query[2];\r\n      if(this.sub_schools.indexOf(school)==-1){\r\n        this.sub_schools.push(school)\r\n      }\r\n      if(this.sub_instrument.indexOf(instrument)==-1){\r\n        this.sub_instrument.push(instrument)\r\n      }\r\n      if(this.sub_levels.indexOf(level)==-1){\r\n        this.sub_levels.push(level)\r\n      }\r\n    }\r\n  }\r\n\r\n  // == get filter == //\r\n  get_query_data_sub_schools($event:any):void{\r\n    this.selectSubSchools = $event.value\r\n    if(this.selectSubSchools.length == 0){\r\n      this.sub_display_instrument = false\r\n      this.sub_display_levels = false\r\n    } else {\r\n      this.sub_display_instrument = true\r\n      this.sub_display_levels = false\r\n    }\r\n  }\r\n\r\n  get_query_data_sub_instruments($event:any):void{\r\n    this.selectSubInstruments = $event.value\r\n    if(this.selectSubInstruments.length == 0){\r\n      this.sub_display_levels = false\r\n    } else {\r\n      this.sub_display_levels = true\r\n    }\r\n  }\r\n\r\n  get_query_data_sub_levels($event:any):void{\r\n    this.selectSubLevels = $event.value\r\n    this.combine_querry_search_data()\r\n    this.query_table_with_filter()\r\n  }\r\n\r\n  combine_querry_search_data(){\r\n    console.log(this.selectSubSchools)\r\n    console.log(this.selectSubInstruments)\r\n    console.log(this.selectSubLevels)\r\n    this.select_Combine_SchoolInstrumentLevels = [];\r\n    for(var eleSchool of this.selectSubSchools){\r\n      console.log(eleSchool)\r\n      for(var eleInstrument of this.selectSubInstruments){\r\n        for(var eleLevel of this.selectSubLevels){\r\n          var query = eleSchool + \"_\" + eleInstrument + \"_\" + eleLevel\r\n          console.log(query);\r\n          if(this.select_Combine_SchoolInstrumentLevels.indexOf(query)==-1){\r\n            this.select_Combine_SchoolInstrumentLevels.push(query)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(this.select_Combine_SchoolInstrumentLevels)\r\n  }\r\n\r\n  // Method:\r\n  query_table_with_filter(){\r\n    var result:Account[] = [];\r\n    result = this.accounts;\r\n    if(this.select_Combine_SchoolInstrumentLevels.length!=0){\r\n      result = this.filtering_by_school_instrument_levels(result, this.select_Combine_SchoolInstrumentLevels)\r\n    }\r\n    if(this.select_Combine_SchoolInstrumentLevels.length == 0){\r\n      result = this.accounts;\r\n    }\r\n    this.dataSource = result\r\n  }\r\n\r\n  filtering_by_school_instrument_levels(result:Account[], filter:string[]):Account[]{\r\n    var filterResult:Account[] = [];\r\n    var exist:boolean = false;\r\n    for(var ele of result){\r\n      var school_instrument_levels = ele.school_instrument_level\r\n      for(var query of filter){\r\n        for(var school_instrument_level of school_instrument_levels){\r\n          if(school_instrument_level == query){\r\n            for(var eleResult of filterResult){\r\n              if(eleResult.docId == ele.docId){\r\n                exist = true\r\n              }\r\n            }\r\n            if(!exist){\r\n              filterResult.push(ele)\r\n              exist = false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return filterResult\r\n  }\r\n\r\n  edit_doc_id($event:any){\r\n    console.log($event);\r\n  } */\r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"account-create-wrapper wrapper-padding\">\r\n  <h1 class=\"mb-3\"> Calculate Wages </h1>\r\n  \r\n  <ng-container><app-input-dropdown-select [inputDataList]=\"schools\" [name]=\"nameSchool\" (outputData)=\"get_query_data_sub_schools($event)\"></app-input-dropdown-select></ng-container>\r\n  <!-- <ng-container *ngIf=\"sub_display_instrument\"><app-input-dropdown-select [inputDataList]=\"sub_instrument\" [name]=\"nameInstrument\" (outputData)=\"get_query_data_sub_instruments($event)\"></app-input-dropdown-select></ng-container>\r\n  <ng-container *ngIf=\"sub_display_levels\"><app-input-dropdown-select [inputDataList]=\"sub_levels\" [name]=\"nameLevels\" (outputData)=\"get_query_data_sub_levels($event)\"></app-input-dropdown-select></ng-container> -->\r\n  <br>\r\n  <app-table [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\" [actionType]=\"actionType\"></app-table>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: \"AIzaSyA_bzSe5zt66gNGTqOGjXNhtf7IIfgjTUE\",\r\n    authDomain: \"synchrony-581ed.firebaseapp.com\",\r\n    projectId: \"synchrony-581ed\",\r\n    storageBucket: \"synchrony-581ed.appspot.com\",\r\n    messagingSenderId: \"457246691317\",\r\n    appId: \"1:457246691317:web:ad586375c8b8ee8d101abc\",\r\n    measurementId: \"G-YGYD6JY9D2\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CrudService } from 'src/app/core/services/crud.service';\r\nimport { Router } from \"@angular/router\";\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-account-edit-form',\r\n  templateUrl: './account-edit-form.component.html',\r\n  styleUrls: ['./account-edit-form.component.scss']\r\n})\r\nexport class AccountEditFormComponent implements OnInit {\r\n\r\n  docId: string;\r\n  username: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  role: string;\r\n  school: string;\r\n  school_instrument_level: string;\r\n  selectedItem: string;\r\n\r\n  editForm!: FormGroup;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private crudservice: CrudService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ){}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      let data = params;\r\n      this.docId = data.docId;\r\n      this.username = data.username;\r\n      this.first_name = data.first_name;\r\n      this.last_name = data.last_name;\r\n      this.role = data.role;\r\n      this.school = data.school;\r\n      this.school_instrument_level = data.school_instrument_level\r\n      this.selectedItem = data.role;\r\n    })\r\n    this.initForm();\r\n  }\r\n\r\n  initForm(): void {\r\n    this.editForm = this.formBuilder.group({\r\n      username:[\"\"],\r\n      first_name:[\"\"],\r\n      last_name: [\"\"],\r\n      role: [\"\"],\r\n      school: [\"\"],\r\n      school_instrument_level: [\"\"]\r\n    });\r\n  }\r\n\r\n  // get new_username(): FormControl{\r\n  //   return this.editForm.get('username') as FormControl;\r\n  // }\r\n\r\n  // get new_first_name(): FormControl{\r\n  //   return this.editForm.get('first_name') as FormControl;\r\n  // }\r\n\r\n  // get new_last_name(): FormControl{\r\n  //   return this.editForm.get('last_name') as FormControl;\r\n  // }\r\n\r\n  // get new_role(): FormControl{\r\n  //   return this.editForm.get('role') as FormControl;\r\n  // }\r\n\r\n  // get new_school(): FormControl{\r\n  //   return this.editForm.get('school') as FormControl;\r\n  // }\r\n\r\n  // get new_school_instrument_level(): FormControl{\r\n  //   return this.editForm.get('school_instrument_level') as FormControl;\r\n  // }\r\n\r\n  async edit() {\r\n    // let username = this.editForm.value.username;\r\n    let firstName = this.editForm.value.first_name;\r\n    let lastName = this.editForm.value.last_name;\r\n    let role = this.editForm.value.role;\r\n    let school = this.editForm.value.school;\r\n    let schoolInstrumentLevel = this.editForm.value.school_instrument_level;\r\n\r\n    try {\r\n      // username shouldnt be allowed to be editable!!\r\n      // if(username!='') {\r\n      //   this.crudservice.update(\"accounts\", this.docId, {\"username\": username});\r\n      // }\r\n\r\n      if(firstName!='') {\r\n        this.crudservice.update(\"accounts\", this.docId, {\"first_name\": firstName});\r\n      }\r\n\r\n      if(lastName!='') {\r\n        this.crudservice.update(\"accounts\", this.docId, {\"last_name\": lastName});\r\n      }\r\n\r\n      if(role!='') {\r\n        this.crudservice.update(\"accounts\", this.docId, {\"role\": role});\r\n      }\r\n\r\n\r\n      if(school!='') {\r\n        this.crudservice.update(\"accounts\", this.docId, {\"school\": school});\r\n      }\r\n\r\n      if(schoolInstrumentLevel!='') {\r\n        let delimit = schoolInstrumentLevel.split(\",\"); // it's an array\r\n        this.crudservice.update(\"accounts\", this.docId, {\"school_instrument_level\": delimit});\r\n        // check if the entry follows the sch_inst_lvl format!\r\n      }\r\n\r\n      this.router.navigate(['/admin/account/edit']);\r\n\r\n    } catch(e) {\r\n      // console.log(e);\r\n    }\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n\r\n<div class=\"account_edit_wrapper\">\r\n    <div class=\"container\">\r\n        <br>\r\n        <h1>Edit Account & Grouping</h1>\r\n        <br>\r\n        <form [formGroup]=\"editForm\">\r\n                <label for=\"username\">Username:</label>\r\n                    <b>{{username}}</b> <br>\r\n\r\n                <label for=\"first_name\">First Name:</label>\r\n                    <input type=\"text\" [ngModel]=\"first_name\" formControlName=\"first_name\">\r\n                    <br>\r\n\r\n                <label for=\"last_name\">Surname:</label>\r\n                    <input type=\"text\" [ngModel]=\"last_name\" formControlName=\"last_name\">\r\n                    <br>\r\n\r\n                <label for=\"role\">Role:</label>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-select [ngModel]=\"selectedItem\" formControlName=\"role\">\r\n                            <mat-option value='student'>Student</mat-option>\r\n                            <mat-option value='instructor'>Instructor</mat-option>\r\n                            <mat-option value='admin'>Admin</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <br>\r\n\r\n                <label for=\"school\">School:</label>\r\n                    <input type=\"text\" [ngModel]=\"school\" formControlName=\"school\">\r\n                    <br>\r\n\r\n                <label for=\"school_instrument_level\">School-Instrument-Level:</label>\r\n                    <input type=\"text\" size=50 [ngModel]=\"school_instrument_level\" formControlName=\"school_instrument_level\">\r\n                    <br>\r\n\r\n                <button name=\"Submit\" value=\"Submit\" (click)=\"edit()\">Submit</button>\r\n                <!-- <button type=\"button\" value=\"Return\" routerLink=\"/admin/account/edit\">Return</button> -->\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, AfterViewInit, ViewChild, Input } from '@angular/core';\r\nimport { CrudService } from 'src/app/core/services/crud.service';\r\nimport { TableComponent } from 'src/app/shared/components/table/table.component';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport { Account } from '../../../core/models/account';\r\nimport { Assignment } from '../../../core/models/assignment'\r\nimport { first } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from \"../../../../environments/environment.prod\";\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { FormControl } from '@angular/forms';\r\nimport firebase from 'firebase';\r\nimport Timestamp = firebase.firestore.Timestamp;\r\nimport { validateBasis } from '@angular/flex-layout';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-assignment-edit-individual',\r\n  templateUrl: './assignment-edit-individual.component.html',\r\n  styleUrls: ['./assignment-edit-individual.component.scss']\r\n})\r\nexport class AssignmentEditIndividualComponent implements OnInit {\r\n\r\n  actionType:string = \"instructorEditIndividual\";\r\n  // Instrustor\r\n  account!:Account;\r\n  accountDocId!:string;\r\n  instructorSchools:string[]=[];\r\n  // Assignment\r\n  assignment!:Assignment;\r\n  assignmentDocId!:string;\r\n  assignmentDescription!:string;\r\n  assignmentDueDateTime!:any;\r\n  assignmentDueDate!:any;\r\n  assignmentDueTime!:string;\r\n  assignmentName!:string;\r\n  assignmentSchool:string[]=[];\r\n  assignmentSchoolInstrumentLevel:string[]=[];\r\n  assignmentFileNames:string[]=[];\r\n\r\n  nameSchool:string = \"School\"\r\n  nameInstrument:string = \"Instrument\"\r\n  nameLevels:string = \"Levels\"\r\n\r\n  schools:string[] = []\r\n  instruments:string[] = []\r\n  levels:string[] = []\r\n  queriedInstruments:string[] = []\r\n  queriedLevels:string[] = []\r\n\r\n  displaySchool = false;\r\n  displayInstruments = false;\r\n  displayLevels = false;\r\n\r\n  selectedSchool!:string\r\n  selectedInstrument!:string\r\n  selectedLevel!:string\r\n\r\n  toAddSchoolInstrumentLevel!:string\r\n\r\n  acceptMultipleFiles:boolean = true\r\n  acceptedFileTypes:string = \".pdf,.mp3,.mp4\"\r\n  newFiles: File[] = []; // Contains the new files as object to upload, retrive from dropzone.\r\n  newFilesNames: string[] = []; // Contains the new files names to upload to chck for duplicates.\r\n  filesToBeDeleted: string[] = []; // contains the list of files to be deleted\r\n\r\n  // Assignment's files and storage\r\n  fileLocationPath!:string; // contains the path for assignments folder\r\n  files:string[] = []; // contains all the files\r\n  storage_bucket = \"gs://\" + environment.firebase.storageBucket;\r\n\r\n  // validation, will be true when on load.\r\n  isFileAcceptable:boolean = true;\r\n  isNameAcceptable:boolean = true;\r\n  isDescriptionAcceptable:boolean = true;\r\n  isDueDateTimeAcceptable:boolean = true;\r\n  isSchoolInstrumentLevelAcceptable:boolean = true;\r\n\r\n  // forms\r\n  updateAssignmentForm!: FormGroup;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private crudservice:CrudService,\r\n    private storage: AngularFireStorage,\r\n    //private afStorage: AngularFireStorage,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.get_account_information();\r\n    this.get_assignment_information();\r\n  }\r\n\r\n  // Get the account information\r\n  get_account_information(): void {\r\n    if(sessionStorage.getItem('account') != null){\r\n      this.account = JSON.parse(sessionStorage.getItem('account'));\r\n      this.accountDocId = this.account.docId;\r\n      this.instructorSchools = this.account.school;\r\n      this.get_instructor_assign_school_insturment_level(this.account.school_instrument_level)\r\n    }\r\n  }\r\n\r\n  // Get the assignment information\r\n  async get_assignment_information() {\r\n    const assignmentid = this.route.snapshot.paramMap.get('docId');\r\n    this.assignmentDocId = assignmentid;\r\n    const data = await this.crudservice.readByDocId('assignments', assignmentid).pipe(first()).toPromise();\r\n    this.assignment = data\r\n    this.assignmentDescription = this.assignment.description;\r\n    this.convert_date_time(this.assignment.due_datetime)\r\n    this.assignmentName = this.assignment.name;\r\n    this.assignmentSchool = this.assignment.school;\r\n    this.assignmentSchoolInstrumentLevel = this.assignment.school_instrument_level;\r\n    //this.assignmentFileNames = this.assignment.file_names;\r\n\r\n    this.get_assignment_files(assignmentid)\r\n  }\r\n\r\n  // === === //\r\n  // === INSTRUCTOR SCHOOL INSTRUMENT AND LEVEL === //\r\n  // === === //\r\n\r\n  get_instructor_assign_school_insturment_level(data:string[]){\r\n\r\n    this.schools = [];\r\n    this.instruments = [];\r\n    this.levels = [];\r\n\r\n    this.displayInstruments = false;\r\n    this.displayLevels = false;\r\n\r\n    this.schools.push(\"none\")\r\n    for (var ele of data){\r\n      var tempsSchool = ele.split(\"_\")[0]\r\n      var tempInsturment = ele.split(\"_\")[1]\r\n      // ensure distinct values\r\n      if(this.schools.indexOf(tempsSchool)==-1){\r\n        this.schools.push(tempsSchool)\r\n      }\r\n      if(this.instruments.indexOf(tempsSchool+\"_\"+tempInsturment)==-1){\r\n        this.instruments.push(tempsSchool+\"_\"+tempInsturment)\r\n      }\r\n      if(this.levels.indexOf(ele)==-1){\r\n        this.levels.push(ele)\r\n      }\r\n    }\r\n\r\n    this.displaySchool = true\r\n  }\r\n\r\n  get_query_data_school($event:any):void{\r\n    // change in school will refresh the instruments and levels\r\n    if(this.selectedSchool!=$event.value){\r\n      this.queriedInstruments = []\r\n      this.queriedLevels = []\r\n      this.selectedInstrument = \"\";\r\n      this.selectedLevel = \"\";\r\n    }\r\n    this.queriedInstruments = []\r\n    this.selectedSchool = $event.value\r\n    if(this.selectedSchool.length == 0 || this.selectedSchool == \"none\"){\r\n      this.displayInstruments = false\r\n      this.displayLevels = false\r\n    } else {\r\n      this.displayInstruments = true\r\n      this.displayLevels = false\r\n      this.queriedInstruments.push(\"none\")\r\n      for(var ele of this.instruments){\r\n        var tempSchool = ele.split(\"_\")[0]\r\n        if(tempSchool == this.selectedSchool){\r\n          this.queriedInstruments.push(ele.split(\"_\")[1])\r\n        }\r\n      }\r\n      // console.log(this.queriedInstruments)\r\n    }\r\n  }\r\n\r\n  get_query_data_instrument($event:any):void{\r\n    this.queriedLevels = []\r\n    this.selectedInstrument = $event.value\r\n    if(this.selectedInstrument.length == 0 || this.selectedInstrument == \"none\"){\r\n      this.displayInstruments = true\r\n      this.displayLevels = false\r\n    } else {\r\n      this.queriedLevels.push(\"none\")\r\n      this.displayInstruments = true\r\n      this.displayLevels = true\r\n      for(var ele of this.levels){\r\n        var tempSchoolInstrument = ele.split(\"_\")[0] + \"_\" + ele.split(\"_\")[1]\r\n        var selectedSchoolInstrument = this.selectedSchool + \"_\" + this.selectedInstrument\r\n        if(tempSchoolInstrument == selectedSchoolInstrument){\r\n          this.queriedLevels.push(ele.split(\"_\")[2])\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  get_query_data_level($event:any):void{\r\n    this.selectedLevel = $event.value\r\n    this.toAddSchoolInstrumentLevel = this.selectedSchool + \"_\" + this.selectedInstrument + \"_\" + this.selectedLevel\r\n  }\r\n\r\n  add(){\r\n    if(this.selectedSchool == \"none\" || this.selectedInstrument == \"none\" || this.selectedLevel == \"none\"){\r\n      this.toastr.error( 'Please ensure that you have selected and input!', '', {positionClass: 'toast-top-center'});\r\n    } else {\r\n      if(!this.assignmentSchoolInstrumentLevel.includes(this.toAddSchoolInstrumentLevel)){\r\n        this.assignmentSchoolInstrumentLevel.push(this.toAddSchoolInstrumentLevel);\r\n      } else {\r\n        this.toastr.error( 'Group has been added already!', '', {positionClass: 'toast-top-center'});\r\n      }\r\n    }\r\n\r\n\r\n\r\n    this.displaySchool = false\r\n    this.get_instructor_assign_school_insturment_level(this.account.school_instrument_level)\r\n  }\r\n\r\n  // === === //\r\n  // === TIME AND DATE === //\r\n  // === === //\r\n\r\n  convert_date_time(data:Timestamp){\r\n    //var month = data.toDate().getMonth()\r\n    //var day = data.toDate().getDay()\r\n    this.assignmentDueDateTime = data.toDate().toString().split(\" \");\r\n    this.assignmentDueDate = this.assignmentDueDateTime[3] + \"-\" + this.convert_date_abbreviation_to_number(this.assignmentDueDateTime[1]) + \"-\" + this.assignmentDueDateTime[2]\r\n    this.assignmentDueTime = this.assignmentDueDateTime[4].split(\":\")[0] + \":\" + this.assignmentDueDateTime[4].split(\":\")[1]\r\n    //var dueDate = this.assignmentDueDateTime[3] + \"-\" + (month+1) + \"-\" + day\r\n    //data.toDate().getMonth;\r\n    //this.assignmentDueDate = dueDate;\r\n    //this.assignmentDueDate = data.toDate().getFullYear() + \"-\" + data.toDate().getMonth() + \"-\" + data.toDate().getDay()\r\n\r\n  }\r\n\r\n  // Method: Convert date_abbreviation \"Jan\" or \"January\" to a number\r\n  private convert_date_abbreviation_to_number(data:string){\r\n    var num = \"January___February__March_____April_____May_______June______July______August____September_October___November__December__\".indexOf(data) / 10 + 1\r\n    var strNum = num.toString()\r\n    if(strNum.length==1){\r\n      strNum = \"0\"+strNum;\r\n    }\r\n    return strNum\r\n  }\r\n\r\n  // === === //\r\n  // === FILES == //\r\n  // === === //\r\n\r\n  // Get assignment files\r\n  get_assignment_files(docid:string){\r\n    // console.log(docid)\r\n    this.fileLocationPath = \"/assignment/\" + docid + \"/\";\r\n    // console.log(this.assignment[\"file_names\"])\r\n    for(var ele of this.assignment[\"file_names\"]){\r\n      this.assignmentFileNames.push(ele);\r\n    }\r\n  }\r\n\r\n  // Method: Remove the file from the array, will not remove if request is canceled\r\n  delete_file(data:string){\r\n    var index = this.assignmentFileNames.indexOf(data)\r\n    this.filesToBeDeleted.push(this.assignmentFileNames[index]);\r\n    this.assignmentFileNames.splice(index,1)\r\n    // Remove the file from S3 Stroge.\r\n    //this.storage.storage.refFromURL(this.storage_bucket + this.fileLocationPath + data).delete();\r\n\r\n    // Set updated data into new object\r\n    //var updateData = this.update_data_assignment()\r\n\r\n    // Update the assignment.\r\n    //this.crudservice.update(\"assignments\",this.assignmentDocId,updateData)\r\n  }\r\n\r\n  // Method: Remove the file from firestorge Stroge.\r\n  delete_files_from_database(){\r\n    if(this.filesToBeDeleted.length!=0){\r\n      // console.log(\"Deleteing \")\r\n      for(var file of this.filesToBeDeleted){\r\n        // console.log(file)\r\n        this.storage.storage.refFromURL(this.storage_bucket + this.fileLocationPath + file).delete();\r\n      }\r\n    }\r\n  }\r\n\r\n  addFiles($event:any){\r\n    for(var file of $event){\r\n      //if(!this.check_file_naming_convention(file[\"name\"])){\r\n        if(this.assignmentFileNames.indexOf(file[\"name\"])==-1){\r\n          this.newFiles.push(file)\r\n        } else {\r\n          this.showMessageError(file['name'] + \" is already included in this assignment\")\r\n          this.isFileAcceptable = false\r\n        }\r\n      /*} else {\r\n        this.showMessageError(file['name'] + \" has special characters, please remove this file\")\r\n        this.isFileAcceptable = false\r\n      }*/\r\n    }\r\n    this.isFileAcceptable = true\r\n  }\r\n\r\n  private check_file_naming_convention(filename:string):boolean{\r\n    var format = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,<>\\/?]+/;\r\n    // return true is there is special characters\r\n    if(format.test(filename)){\r\n      return true\r\n    }\r\n    // return false if no special characters\r\n    return false\r\n  }\r\n\r\n  add_files_to_database(){\r\n    if(this.newFiles.length!=0){\r\n      for(var file of this.newFiles){\r\n        var location: string = 'assignment/' + this.assignmentDocId + \"/\" + file['name']\r\n        //console.log(location + file[\"name\"])\r\n        if(this.assignmentFileNames.indexOf(file['name'])==-1){\r\n          this.assignmentFileNames.push(file['name']);\r\n          this.storage.upload(location, file);\r\n          this.showMessageSuccess(\"file Uploaded\")\r\n        } else {\r\n          this.showMessageError(file['name'] + \" is already included\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // remove school instrument level\r\n  removeButton(i: number){\r\n    this.assignmentSchoolInstrumentLevel.splice(i,1)\r\n  }\r\n\r\n  onSubmit(){\r\n\r\n    this.validate_due_date_and_time()\r\n    this.validate_name()\r\n    this.validate_school_instrument_level()\r\n    this.validate_description()\r\n\r\n    if(this.isFileAcceptable && this.isNameAcceptable &&\r\n      this.isSchoolInstrumentLevelAcceptable && this.isDueDateTimeAcceptable &&\r\n      this.isDescriptionAcceptable){\r\n        var updateAssignmentDueDateandTime:Timestamp = firebase.firestore.Timestamp.fromDate(new Date(this.assignmentDueDate + \" \" + this.assignmentDueTime))\r\n        this.delete_files_from_database()\r\n        this.add_files_to_database()\r\n        let updateData = {\r\n          //instructor_account_doc_id: this.assignment.instructor_account_doc_id,\r\n          //created_datetime: this.assignment.created_datetime,\r\n          description: this.assignmentDescription,\r\n          due_datetime: updateAssignmentDueDateandTime,\r\n          name: this.assignmentName,\r\n          school_instrument_level: this.assignmentSchoolInstrumentLevel,\r\n          file_names: this.assignmentFileNames\r\n        }\r\n        // Update the assignment.\r\n        this.crudservice.update(\"assignments\", this.assignmentDocId, updateData)\r\n        this.router.navigate(['/instructor/assignment/edit']);\r\n        this.showMessageSuccess(this.assignmentName + \" has been updated!\")\r\n      } else {\r\n        this.showMessageError(this.assignmentName + \" attributes do not meet the requirements\")\r\n      }\r\n  }\r\n\r\n  back(){\r\n    this.router.navigate(['/instructor/assignment/edit']);\r\n  }\r\n\r\n  private validate_description(){\r\n    if(this.assignmentDescription.length==0 || this.assignmentDescription==\"\"){\r\n      this.isDescriptionAcceptable = false\r\n      this.showMessageError(this.assignmentName + \" description is empty, plase give context to the assignment\")\r\n    } else {\r\n      this.isDescriptionAcceptable = true\r\n    }\r\n  }\r\n\r\n  private validate_school_instrument_level(){\r\n    if(this.assignmentSchoolInstrumentLevel.length==0){\r\n      this.isSchoolInstrumentLevelAcceptable = false\r\n      this.showMessageError(this.assignmentName + \" needs to have groups to be attached to this assignment.\")\r\n    } else {\r\n      this.isSchoolInstrumentLevelAcceptable = true\r\n    }\r\n  }\r\n\r\n  private validate_name(){\r\n    if(this.assignmentName.length==0 || this.assignmentName==\"\"){\r\n      this.isNameAcceptable = false\r\n      this.showMessageError(this.assignmentName + \" name is empty, plase give it a title\")\r\n    } else {\r\n      this.isNameAcceptable = true\r\n    }\r\n  }\r\n\r\n  private validate_due_date_and_time(){\r\n    var updateAssignmentDueDateandTime:Timestamp = firebase.firestore.Timestamp.fromDate(new Date(this.assignmentDueDate + \" \" + this.assignmentDueTime))\r\n    var currentDateAndTime:Timestamp  = firebase.firestore.Timestamp.fromDate(new Date());\r\n    if(currentDateAndTime > updateAssignmentDueDateandTime){\r\n      this.isDueDateTimeAcceptable = false\r\n      this.showMessageError(this.assignmentName + \" due date & time has already pass\")\r\n    } else{\r\n      this.isDueDateTimeAcceptable = true\r\n    }\r\n  }\r\n\r\n  private showMessageSuccess(message:string) {\r\n    if(message==null||message==\"\"){\r\n      message = \"Success!\";\r\n    }\r\n    this.toastr.success(message)\r\n  }\r\n\r\n  private showMessageError(message:string) {\r\n    if(message==null||message==\"\"){\r\n      message = \"Error!\";\r\n    }\r\n    this.toastr.error(message)\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"account-create-wrapper wrapper-padding\">\r\n    \r\n    <!-- <h1 class=\"mb-3\"> Edit Assignments </h1> -->\r\n    <div class=\"container\">\r\n        <!-- Segment 1: Title & Due Date -->\r\n        <h2> Title: </h2>\r\n        <!-- ROW -->\r\n        <div class=\"row\">\r\n            <div class=\"form-outline col-8\">\r\n                <span> Title: </span> \r\n                <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Title\" [(ngModel)]=\"assignmentName\"/>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <!-- Segment 2: Due Date and time  -->\r\n        <h2> Due Date and Time:  </h2>\r\n        <!-- <p> {{assignmentDueDate}} {{assignmentDueTime}} {{tempdate}} {{temptime}} </p> -->\r\n        <!-- ROW -->\r\n        <div class=\"row\">\r\n            <div class=\"form-outline col-4\">\r\n                <span> Due Date: </span>\r\n                <input type=\"date\" class=\"form-control form-control-lg\" [(ngModel)]='assignmentDueDate'/>\r\n            </div>\r\n            <div class=\"form-outline col-4\">\r\n                <span> Due Time: </span>\r\n                <input type=\"time\" class=\"form-control form-control-lg\" [(ngModel)]='assignmentDueTime'/>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <!-- Segment 3: Assignment School Instrument Level  -->\r\n        <h2> School / Instrument / Level: </h2>\r\n        <!-- ROW -->\r\n        <div class=\"row\">\r\n            <div class=\"form-outline col-3\" *ngIf=\"displaySchool\">\r\n                <app-input-select id=\"testSchool\" [inputDataList]=\"schools\" [name]=\"nameSchool\" (outputData)=\"get_query_data_school($event)\"></app-input-select>\r\n            </div>\r\n            <div class=\"form-outline col-3\" *ngIf=\"displayInstruments\">\r\n                <app-input-select [inputDataList]=\"queriedInstruments\" [name]=\"nameInstrument\" (outputData)=\"get_query_data_instrument($event)\"></app-input-select>\r\n            </div>\r\n            <div class=\"form-outline col-3\" *ngIf=\"displayLevels\">\r\n                <app-input-select [inputDataList]=\"queriedLevels\" [name]=\"nameLevels\" (outputData)=\"get_query_data_level($event)\"></app-input-select>\r\n            </div>\r\n            <div class=\"form-outline col-3\" *ngIf=\"displayLevels\">\r\n                <button type=\"button\" mdbBtn color=\"success\" mdbWavesEffect (click)=\"add()\"> Add </button>\r\n            </div>\r\n        </div>\r\n        <!-- ROW -->\r\n        <div class=\"row\">\r\n            <div class=\"form-outline col-12\">\r\n                <span> Selected: </span> <br>\r\n                <button type=\"button\" class=\"btn btn-primary\" *ngFor=\"let buttonText of assignmentSchoolInstrumentLevel; let i = index;\" (click)=\"removeButton(i)\"> {{buttonText}} <span class=\"badge bg-danger ms-2\"> X </span> </button>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <!-- Segment 4: Assignment School Instrument Level  -->\r\n        <div class=\"row\">\r\n            <h2> Description: </h2>\r\n            <div class=\"col-12\">\r\n                <textarea rows=\"4\" cols=\"80\" [(ngModel)]=\"assignmentDescription\"></textarea>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <!-- Segment 5: Assignment School Instrument Level  -->\r\n        <div class=\"row\">\r\n            <h2> Files: </h2>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!-- Column 1-->\r\n            <div class=\"col-6\">\r\n                <h2> Current Files: </h2>\r\n                <table class=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\"> #</th> <th scope=\"col\"> File Name</th> <th scope=\"col\"> View </th> <th scope=\"col\"> Remove </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    \r\n                    <tr *ngFor=\"let ele of assignmentFileNames; let i = index\">\r\n                        <th scope=\"row\"> {{i+1}}</th>\r\n                        <td> <h4> {{ele}} </h4> </td>\r\n                        <td> <app-dialog-box [actionType]=\"actionType\" [fileLocationPath]=\"fileLocationPath\" [fileName]=\"ele\"></app-dialog-box></td>\r\n                        <td> <button type=\"button\" mdbBtn color=\"danger\" mdbWavesEffect (click)=\"delete_file(ele)\"> Remove </button> </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <!-- Column 2-->\r\n            <div class=\"col-6\">\r\n                <h2> Upload New Files: </h2>\r\n                <app-dropzone [acceptMultipleFiles]=\"acceptMultipleFiles\" [acceptedFileTypes]=\"acceptedFileTypes\" (fileEmit)=\"addFiles($event)\"></app-dropzone>\r\n            </div>\r\n        <div> <!-- End of row -->\r\n        <!-- Segment 6: Assignment School Instrument Level  -->\r\n        <div class=\"row\">\r\n            <div class=\"float-end\"> \r\n                <button type=\"button\" mdbBtn color=\"danger\" (click)=\"back()\" mdbWavesEffect> Cancel </button> \r\n                <button type=\"button\" mdbBtn color=\"success\" (click)=\"onSubmit()\" mdbWavesEffect> Update </button> \r\n            </div>\r\n        </div>\r\n    <div> <!-- End of Container -->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-instructor-home',\r\n  templateUrl: './instructor-home.component.html',\r\n  styleUrls: ['./instructor-home.component.scss']\r\n})\r\nexport class InstructorHomeComponent implements OnInit {\r\n\r\n  newTitle: string = \"New Assignment\";\r\n  editTitle: string = \"Edit Assignment\";\r\n  markTitle: string = \"Mark Assignment\";\r\n\r\n  newDescription: string = \"Create new assignments for students to complete.\";\r\n  editDescription: string = \"Edit created assignments' deadline, attachments and more.\";\r\n  markDescription: string = \"Mark or re-mark assignment submissions by students.\";\r\n\r\n  newLink: string = \"instructor/assignment/create\";\r\n  editLink: string = \"instructor/assignment/edit\";\r\n  markLink: string = \"instructor/assignment/mark\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n\r\n<br>\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <app-cards [title]=\"newTitle\" [description]=\"newDescription\" [href]=\"newLink\"></app-cards>\r\n        </div>\r\n        <div class=\"col\">\r\n            <app-cards [title]=\"editTitle\" [description]=\"editDescription\" [href]=\"editLink\"></app-cards>\r\n        </div>\r\n        <div class=\"col\">\r\n            <app-cards [title]=\"markTitle\" [description]=\"markDescription\" [href]=\"markLink\"></app-cards>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, AfterViewInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CrudService } from 'src/app/core/services/crud.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { TableComponent } from 'src/app/shared/components/table/table.component';\r\nimport { Account } from '../../../core/models/account';\r\nimport { Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\r\nimport { environment } from '../../../../environments/environment.prod';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-box',\r\n  templateUrl: './dialog-box.component.html',\r\n  styleUrls: ['./dialog-box.component.scss']\r\n})\r\nexport class DialogBoxComponent implements OnInit {\r\n\r\n  @Input('actionType') public actionType: any;\r\n  @Input('docid') public docid!: any;\r\n  @Input('username') public username!: any;\r\n  // Instructor edit assignment component\r\n  @Input('assignmentName') public assignmentName!: any;\r\n  // Instructor edit individual assignment component\r\n  @Input('fileLocationPath') public fileLocationPath!: any;\r\n  @Input('fileName') public fileName!: any;\r\n\r\n  storage_bucket = 'gs://' + environment.firebase.storageBucket;\r\n  fileType!: string;\r\n  pdfUrl!: any;\r\n  pdfSafeUrl: SafeResourceUrl;\r\n  videoUrl!: any;\r\n\r\n  @Output() editEvent = new EventEmitter<string>();\r\n  @Output() triggerUpdate = new EventEmitter<string>();\r\n  @Input() contenteditable = new Boolean;\r\n\r\n  constructor(\r\n    private crudservice: CrudService,\r\n    private router: Router,\r\n    private storage: AngularFireStorage,\r\n    private ds: DomSanitizer,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  // Modal //\r\n  onOpen(event: any): void {\r\n    console.log(event);\r\n  }\r\n\r\n  click_to_delete_account(){\r\n    console.log('User ' + this.username + ' has be hidden!');\r\n    const data = {\r\n      is_delete: true,\r\n      password: this.genPassword()\r\n    };\r\n    this.crudservice.update('accounts', this.docid, data);\r\n    this.showMessageSuccess('The following user: ' + this.username + ' account has been successfully deleted');\r\n    this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate(['/admin/account/delete']);\r\n  });\r\n  }\r\n\r\n  click_to_delete_assignment(){\r\n    console.log('Assignment deleted!');\r\n    console.log(this.docid);\r\n    this.crudservice.delete('assignments', this.docid);\r\n    this.showMessageSuccess('The following assignment, title: ' + this.assignmentName + ' has been successfully deleted');\r\n    this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate(['/instructor/assignment/edit']);\r\n  });\r\n  }\r\n\r\n  acquire_file(){\r\n    const arr = this.fileName.split('.');\r\n    this.fileType = arr[arr.length - 1];\r\n    console.log(this.fileType);\r\n    if (this.fileType === 'pdf'){\r\n      this.getPDF();\r\n    }\r\n    if (this.fileType === 'mp4'){\r\n      this.getVideo();\r\n    }\r\n  }\r\n\r\n  async getPDF(): Promise<any> {\r\n    const pdf = this.storage_bucket + this.fileLocationPath + this.fileName;\r\n    const ref = this.storage.refFromURL(pdf);\r\n    // return this.pdfUrl = ref.getDownloadURL().subscribe(data => {this.pdfUrl = data})\r\n    this.pdfUrl = await ref.getDownloadURL().subscribe(data => {\r\n      this.pdfUrl = data;\r\n    });\r\n    this.pdfSafeUrl = this.ds.bypassSecurityTrustResourceUrl(this.pdfUrl);\r\n    console.log(this.pdfSafeUrl);\r\n    return this.pdfSafeUrl;\r\n  }\r\n\r\n  getVideo(): any{\r\n    const video = this.storage_bucket + this.fileLocationPath + this.fileName;\r\n    const ref = this.storage.refFromURL(video);\r\n    ref.getDownloadURL().subscribe(data => {this.videoUrl = data})\r\n    return this.videoUrl = ref.getDownloadURL().subscribe(data => {this.videoUrl = data; });\r\n    // console.log(ref.getDownloadURL().subscribe(data => {this.videoUrl = data}))\r\n    // console.log(this.videoUrl)\r\n  }\r\n\r\n  returnSafeURL(){\r\n    return this.ds.bypassSecurityTrustResourceUrl(this.pdfUrl);\r\n  }\r\n\r\n  click_to_view(){\r\n    console.log('View');\r\n  }\r\n\r\n  send_to_parent(value: string) {\r\n    this.editEvent.emit(value);\r\n  }\r\n\r\n  make_true($event) {\r\n    this.triggerUpdate.emit($event);\r\n    this.send_to_parent($event);\r\n  }\r\n\r\n  make_false($event) {\r\n    this.send_to_parent($event);\r\n  }\r\n\r\n  // Method: auto generate a radnom password\r\n  private genPassword(): string{\r\n    const CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let password = '';\r\n    for (let i = 0; i < 20; i++) {\r\n      password += CHARS.charAt(\r\n        Math.floor(Math.random() * CHARS.length)\r\n      );\r\n    }\r\n    return password;\r\n  }\r\n\r\n  private showMessageSuccess(message: string) {\r\n    if (message == null || message == ''){\r\n      message = 'Success!';\r\n    }\r\n    this.toastr.success(message);\r\n  }\r\n\r\n  private showMessageError(message: string) {\r\n    if (message == null || message == ''){\r\n      message = 'Error!';\r\n    }\r\n    this.toastr.error(message);\r\n  }\r\n\r\n}\r\n","\r\n<button *ngIf=\"actionType=='accountDelete'\" type=\"button\" mdbBtn color=\"danger\" rounded=\"true\" data-toggle=\"modal\" data-target=\"#basicExample\" (click)=\"frame.show()\"  mdbWavesEffect> Delete </button>\r\n\r\n<button *ngIf=\"actionType=='accountEdit' && contenteditable == false\" type=\"button\" mdbBtn color=\"primary\" rounded=\"true\" data-toggle=\"modal\" data-target=\"#basicExample\" (click)=\"send_to_parent($event)\"  mdbWavesEffect> Edit </button>\r\n<!-- <button *ngIf=\"actionType=='accountEdit' && contenteditable == true\" type=\"button\" mdbBtn color=\"success\" rounded=\"true\" data-toggle=\"modal\" data-target=\"#basicExample\" (click)=\"make_true($event)\" mdbWavesEffect> Confirm </button>\r\n<button *ngIf=\"actionType=='accountEdit' && contenteditable == true\" type=\"button\" mdbBtn color=\"danger\" rounded=\"true\" data-toggle=\"modal\" data-target=\"#basicExample\" (click)=\"make_false($event)\" mdbWavesEffect> Cancel </button> -->\r\n\r\n<button *ngIf=\"actionType=='wage'\" type=\"button\" mdbBtn color=\"info\" rounded=\"true\" data-toggle=\"modal\" data-target=\"#basicExample\" (click)=\"frame.show()\" mdbWavesEffect> View </button>\r\n\r\n<button *ngIf=\"actionType=='instructorAssignmentEdit'\" type=\"button\" mdbBtn color=\"danger\" rounded=\"true\" data-toggle=\"modal\" data-target=\"#basicExample\" (click)=\"frame.show()\" mdbWavesEffect> Delete </button>\r\n\r\n<button *ngIf=\"actionType=='instructorEditIndividual'\" type=\"button\" mdbBtn color=\"primary\" rounded=\"true\" data-toggle=\"modal\" data-target=\"#basicExample\" (click)=\"acquire_file()\" (click)=\"frame.show()\" mdbWavesEffect> View </button>\r\n\r\n<div mdbModal #frame=\"mdbModal\" class=\"modal fade\" id=\"frameModalTop\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" (open)=\"onOpen($event)\">\r\n    \r\n    <!-- DELETE MODAL ACCOUNT -->\r\n    <div *ngIf=\"actionType=='accountDelete'\" class=\"modal-dialog modal-notify modal-danger\" role=\"document\">\r\n\r\n        <div  class=\"modal-content\">\r\n\r\n            <div class=\"modal-header\">\r\n                <p class=\"heading lead\"> Delete User ? </p>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"frame.hide()\">\r\n                    <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n                <div class=\"text-center\">\r\n                    <mdb-icon fas icon=\"user-alt-slash\" size=\"4x\" class=\"mb-3 animated rotateIn\"></mdb-icon>\r\n                    <p>Are you sure you would want to delete this user \"<b>{{username}}</b>\"?<br> <b>This action cannot be undone.</b></p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"modal-footer justify-content-center\">\r\n            <a type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" (click)=\"click_to_delete_account()\" (click)=\"frame.hide()\" mdbWavesEffect> Delete\r\n                <!-- <mdb-icon far icon=\"times-circle\" class=\"ml-1\"></mdb-icon> -->\r\n            </a>\r\n            <a type=\"button\" mdbBtn color=\"primary\" outline=\"true\" class=\"waves-effect\" mdbWavesEffect (click)=\"frame.hide()\"\r\n                data-dismiss=\"modal\"> Cancel </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- DELETE OF MODAL ACCOUNT -->\r\n\r\n    <!-- EDIT MODAL -->\r\n    <div *ngIf=\"actionType=='accountEdit'\" class=\"modal-dialog modal-notify modal-danger\" role=\"document\">\r\n\r\n        <div  class=\"modal-content\">\r\n\r\n            <div class=\"modal-header\">\r\n                <p class=\"heading lead\"> Edit User ? </p>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"frame.hide()\">\r\n                    <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n                <div class=\"text-center\">\r\n                    <mdb-icon fas icon=\"user-alt-slash\" size=\"4x\" class=\"mb-3 animated rotateIn\"></mdb-icon>\r\n                    <p>Are you sure you would want to modify this user <b> {{username}} </b> <br> ? this action cannot be undo </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"modal-footer justify-content-center\">\r\n            <a type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" (click)=\"click_to_delete_assignment()\" mdbWavesEffect> Confirm\r\n                <mdb-icon far icon=\"times-circle\" class=\"ml-1\"></mdb-icon>\r\n            </a>\r\n            <a type=\"button\" mdbBtn color=\"primary\" outline=\"true\" class=\"waves-effect\" mdbWavesEffect (click)=\"frame.hide()\"\r\n                data-dismiss=\"modal\"> Cancel </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- EDIT MODAL -->\r\n\r\n    <!-- ACCOUNT WAGE -->\r\n    <div *ngIf=\"actionType=='wage'\" class=\"modal-dialog modal-notify modal-info\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n\r\n            <div class=\"modal-header\">\r\n                <p class=\"heading lead\"> view instructor wages </p>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"frame.hide()\">\r\n                    <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n\r\n            <div class=\"modal-body\">\r\n                <div class=\"text-center\">\r\n                    <mdb-icon fas icon=\"user-alt-slash\" size=\"4x\" class=\"mb-3 animated rotateIn\"></mdb-icon>\r\n                    <p> Would you like to pay the instructor ? </p>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"modal-footer justify-content-center\">\r\n            <a type=\"button\" mdbBtn color=\"info\" class=\"waves-light\" (click)=\"click_to_view()\" mdbWavesEffect> Pay Now\r\n                <mdb-icon far icon=\"times-circle\" class=\"ml-1\"></mdb-icon>\r\n            </a>\r\n            <a type=\"button\" mdbBtn color=\"success\" outline=\"true\" class=\"waves-effect\" mdbWavesEffect (click)=\"frame.hide()\"\r\n                data-dismiss=\"modal\"> No </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- END OF ACCOUNT WAGE -->\r\n\r\n    <!-- DELETE ASSIGNMENT ACCOUNT -->\r\n    <div *ngIf=\"actionType=='instructorAssignmentEdit'\" class=\"modal-dialog modal-notify modal-danger\" role=\"document\">\r\n\r\n        <div  class=\"modal-content\">\r\n\r\n            <div class=\"modal-header\">\r\n                <p class=\"heading lead\"> Delete Assignment ? </p>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"frame.hide()\">\r\n                    <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n                <div class=\"text-center\">\r\n                    <mdb-icon fas icon=\"comment-slash\" size=\"4x\" class=\"mb-3 animated rotateIn\"></mdb-icon>\r\n                    <p> Are you sure you would want to delete this assignment titled \"<b>{{assignmentName}}</b>\"? <br><b>This action cannot be undone.</b></p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"modal-footer justify-content-center\">\r\n            <a type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" (click)=\"click_to_delete_assignment()\" mdbWavesEffect> Delete\r\n                <mdb-icon far icon=\"times-circle\" class=\"ml-1\"></mdb-icon>\r\n            </a>\r\n            <a type=\"button\" mdbBtn color=\"primary\" outline=\"true\" class=\"waves-effect\" mdbWavesEffect (click)=\"frame.hide()\"\r\n                data-dismiss=\"modal\"> Cancel </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- END OF DELETE ASSIGNMENT ACCOUNT -->\r\n\r\n    <!-- INSTRUCTOR ASSIGNMENT ACCOUNT -->\r\n    <div *ngIf=\"actionType=='instructorEditIndividual'\" class=\"modal-dialog modal-notify modal-primary\" role=\"document\">\r\n\r\n        <div  class=\"modal-content\">\r\n\r\n            <div class=\"modal-header\">\r\n                <p class=\"heading lead\"> View File </p>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"frame.hide()\">\r\n                    <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n                <div class=\"text-center\">\r\n                    <!-- PDF -->\r\n                    <div *ngIf=\"fileType=='pdf'\">\r\n                        <embed [src]=\"returnSafeURL()\" style=\"width:100%; height: 300px\" type=\"application/pdf\">\r\n                    </div>\r\n                    <!-- video -->\r\n                    <div *ngIf=\"fileType=='mp4'\">\r\n                        <div class=\"embed-responsive embed-responsive-16by9\">\r\n                            <video width=\"320\" height=\"240\" controls src=\"{{videoUrl}}\" type=\"video/mp4\"></video>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"modal-footer justify-content-center\">\r\n            <a type=\"button\" mdbBtn color=\"primary\" outline=\"true\" class=\"waves-effect\" mdbWavesEffect (click)=\"frame.hide()\"\r\n                data-dismiss=\"modal\"> Close </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- DELETE ASSIGNMENT ACCOUNT -->\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { CrudService } from 'src/app/core/services/crud.service';\r\nimport { Router } from '@angular/router';\r\nimport { ValidatorFn } from '@angular/forms';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { ValidationErrors } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { FormGroupDirective } from '@angular/forms';\r\nimport { NgForm } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-update-password',\r\n  templateUrl: '../../login/login.component.html',\r\n  styleUrls: ['../../login/login.component.scss']\r\n})\r\nexport class UpdatePasswordComponent implements OnInit {\r\n\r\n  loginPage = false;\r\n  updatePasswordPage = true;\r\n  loginForm!: FormGroup;\r\n  isSubmitClicked = false;\r\n  isValidUsernamePasswordCombi = true;\r\n  passwordMatch = false;\r\n  role!: String;\r\n  matcher = new MyErrorStateMatcher();\r\n  account: any;\r\n  firstTime = true;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private crudservice: CrudService,\r\n    private router:Router\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize formbuilder\r\n    this.initForm();\r\n  }\r\n\r\n  initForm(): void{\r\n    this.loginForm = this.fb.group({\r\n      username:[\"\",Validators.required],\r\n      password:[\"\",Validators.required],\r\n      newPassword:[\"\",[Validators.required,Validators.minLength(5)]],\r\n      confirmPassword:[\"\",Validators.required]\r\n    }, { validators: this.checkPasswords });\r\n    // console.log(this.loginForm);\r\n  }\r\n\r\n  // Retrieve username\r\n  get username(): FormControl{\r\n    return this.loginForm.get('username') as FormControl;\r\n  }\r\n\r\n  // Retrieve password\r\n  get password(): FormControl{\r\n    return this.loginForm.get('password') as FormControl;\r\n  }\r\n\r\n  get newPassword(): FormControl{\r\n    return this.loginForm.get('newPassword') as FormControl;\r\n  }\r\n\r\n  get confirmPassword(): FormControl{\r\n    return this.loginForm.get('confirmPassword') as FormControl;\r\n  }\r\n\r\n  // Custom Validator for password matching\r\n  checkPasswords: ValidatorFn = (group: AbstractControl):  ValidationErrors | null => {\r\n    let pass = group.get('newPassword')!.value;\r\n    let confirmPass = group.get('confirmPassword')!.value\r\n    return pass === confirmPass ? null : { notSame: true }\r\n  }\r\n\r\n  onSubmit(){\r\n\r\n     // Submit was clicked. Form validation will take place\r\n     this.isSubmitClicked = true;\r\n\r\n     // Validate account and password match\r\n    if (this.loginForm.valid) {\r\n      // Form validation complete. Update password\r\n      // console.log(\"Form Validated \");\r\n\r\n      // Login Validation only happens once\r\n      if (this.firstTime){\r\n        // console.log(\"Login Validation triggered!\");\r\n        this.firstTime = false;\r\n        // Validate login\r\n        this.crudservice.read(\"accounts\",\"username\",\"==\",this.loginForm.value.username,\"password\",\"==\",this.loginForm.value.password).pipe(first()).subscribe(async (account:any) => {\r\n        // console.log(account);\r\n\r\n        if (account.length==0){\r\n          // username and password does not exist on the database\r\n          // console.log(\"Login denied\");\r\n          this.isValidUsernamePasswordCombi = false;\r\n        } else {\r\n          // Login is successful\r\n          // console.log(\"Login successful\");\r\n          this.isValidUsernamePasswordCombi = true;\r\n          this.account = account[0];\r\n\r\n          if (account[0].is_delete){\r\n            alert(\"Account has been deactivated. Please seek the admin to reset your account\");\r\n            this.router.navigate([\"/login\"]);\r\n            return;\r\n          }\r\n\r\n          // Update password\r\n          this.account.password = this.loginForm.value.newPassword;\r\n          this.account.first_login = false;\r\n          // console.log(this.account);\r\n          this.crudservice.update(\"accounts\",this.account.docId, this.account);\r\n          alert(\"Update successful! Please login again\");\r\n          this.router.navigate([\"/login\"]);\r\n          return;\r\n        }\r\n      })\r\n    } else {\r\n      // console.log(\"Update rejected\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const invalidCtrl = !!(control?.invalid && control?.parent?.dirty);\r\n    const invalidParent = !!(control?.parent?.invalid && control?.parent?.dirty);\r\n\r\n    return invalidCtrl || invalidParent;\r\n  }\r\n}\r\n","<div class = \"account-create-wrapper\">\r\n    <img src=\"../../../../assets/images/Logo.png\" width = \"400\" height = \"400\" class=\"center\">\r\n\r\n    <h1 *ngIf=\"loginPage\"> Synchrony Login Page </h1>\r\n\r\n    <h1 *ngIf=\"updatePasswordPage\">Update Password Page</h1>\r\n\r\n    <div class=\"container\">\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n            <label for=\"username\"> Username: </label>\r\n            <input type=\"text\" formControlName=\"username\"/>\r\n\r\n            <mat-error *ngIf=\"isSubmitClicked && username.errors?.required\">\r\n              Username cannot be blank!\r\n            </mat-error>\r\n\r\n            <br/>\r\n\r\n            <label for=\"password\"> Password: </label>\r\n            <input type=\"password\" formControlName=\"password\"/>\r\n\r\n            <mat-error *ngIf=\"isSubmitClicked && password.errors?.required\">\r\n              Password cannot be blank!\r\n              <br/>\r\n            </mat-error>\r\n\r\n            <mat-error *ngIf=\"isSubmitClicked && !isValidUsernamePasswordCombi\">\r\n              Incorrect Username or Password!\r\n            </mat-error>\r\n\r\n            <div *ngIf=\"updatePasswordPage\">\r\n              <label for=\"newPassword\">New Password: </label>\r\n              <input type=\"password\" formControlName=\"newPassword\"/>\r\n              <mat-error *ngIf=\"isSubmitClicked && newPassword.errors?.minlength\">\r\n                New Password must be at least 5 characters long!\r\n              </mat-error>\r\n\r\n              <mat-error *ngIf=\"isSubmitClicked && newPassword.errors?.required\">\r\n                New Password cannot be blank!\r\n              </mat-error>\r\n\r\n              <br/>\r\n                <label for=\"confirmPassword\">Confirm Password:</label>\r\n                <input type=\"password\" formControlName=\"confirmPassword\"/>\r\n            </div>\r\n\r\n            <mat-error *ngIf=\"isSubmitClicked && loginForm.hasError('notSame')\">\r\n              Passwords do not match!\r\n            </mat-error>\r\n\r\n            <div *ngIf=\"updatePasswordPage\">\r\n              <button type=\"submit\">Update Password</button>\r\n            </div>\r\n\r\n            <div *ngIf=\"loginPage\">\r\n              <button type=\"submit\"> Login </button>\r\n            </div>\r\n\r\n            <!-- <p>Form Value: {{ loginForm.value | json }}</p>\r\n            <p>Form status: {{ loginForm.status | json }}</p> -->\r\n\r\n        </form>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit, AfterViewInit, ViewChild, Input } from '@angular/core';\r\nimport { CrudService } from 'src/app/core/services/crud.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { TableComponent } from 'src/app/shared/components/table/table.component';\r\nimport { Account } from '../../../core/models/account';\r\nimport { first } from 'rxjs/operators';\r\nimport { StringMap } from '@angular/compiler/src/compiler_facade_interface';\r\n\r\n@Component({\r\n  selector: 'app-account-edit',\r\n  templateUrl: './account-edit.component.html',\r\n  styleUrls: ['./account-edit.component.scss']\r\n})\r\nexport class AccountEditComponent implements OnInit, AfterViewInit {\r\n\r\n  accounts:Account[] = [];\r\n  accountDetail!:Account;\r\n  accountUsername!:string;\r\n  // set table data\r\n  dataSource!:any;\r\n  displayedColumns:string[] = ['username', 'first_name', 'last_name', 'role', 'school', 'school_instrument_level', 'action'];\r\n  actionType:string = \"accountEdit\";\r\n\r\n  // === set filter data === //\r\n  //schools:string[] = [];\r\n  school_instrument_levels:string[] = [];\r\n  //groups:string[] = [];\r\n  //instruments:string[] = [];\r\n  //levels:string[] = [];\r\n  roles:string[] = [\"admin\",\"instructor\",\"student\"];\r\n\r\n  sub_schools:string[] = [];\r\n  sub_instrument:string[] = [];\r\n  sub_levels:string[] = [];\r\n\r\n  sub_display_instrument:boolean = false\r\n  sub_display_levels:boolean = false\r\n\r\n  // === set filter name === //\r\n  nameSchool:string = \"School\"\r\n  //nameGroup:string = \"Group\"\r\n  nameRole:string = \"Role\"\r\n  nameSchoolInstrumentLevels = \"School Instrument Levels\"\r\n  nameInstrument:string = \"Instrument\"\r\n  nameLevels:string = \"Levels\"\r\n\r\n  // === get filter data === //\r\n  selectRoles:string[] = [];\r\n  selectSchools:string[] = [];\r\n  //selectGroups:string[] = [];\r\n  selectGroups:string[] = [];\r\n  //selectSchoolInstrumentLevels:string[] = [];\r\n  select_Combine_SchoolInstrumentLevels:string[] = [];\r\n  selectSubSchools:string[] = [];\r\n  selectSubInstruments:string[] = [];\r\n  selectSubLevels:string[] = [];\r\n\r\n  constructor(\r\n    private crudservice:CrudService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieve_all_accounts();\r\n    this.accountDetail = JSON.parse(sessionStorage.getItem(\"account\")!);\r\n    this.accountUsername = this.accountDetail.username\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    // empty\r\n  }\r\n\r\n  async retrieve_all_accounts(){\r\n    const data = await this.crudservice.read('accounts').pipe(first()).toPromise();\r\n    if(data!=undefined||data!=null){\r\n      this.dataSource = data\r\n      for(var ele of data){\r\n        try{\r\n          this.create_account(ele)\r\n          //var schoolgrp = ele[\"school_group\"].split(\",\")\r\n          //var school = ele[\"school\"].split(\",\")\r\n          //var school = ele[\"school\"]\r\n          var school_instrument_level = ele[\"school_instrument_level\"]\r\n          //this.set_distint_school_levels(ele[\"levels\"])\r\n          //this.set_distint_school_instruments(ele[\"instruments\"])\r\n          // get distint school groups\r\n          //this.set_distint_school_group(schoolgrp);\r\n          // get distint school\r\n          //this.set_distint_school(school);\r\n          this.set_distint_school_instrument_level(school_instrument_level);\r\n        } catch(e){\r\n          // console.log(\"something wrong with the data! check the database!\")\r\n        }\r\n      }\r\n      this.dataSource = this.accounts\r\n    }\r\n  }\r\n\r\n  create_account(data:any){\r\n    if(data.school[0] == \"-\"){\r\n      data.school[0] = \"NA\";\r\n    }\r\n    if(data.school_instrument_level[0] == \"-\"){\r\n      data.school_instrument_level[0] = \"NA\";\r\n    }\r\n    var account: Account = {\r\n      docId: data.docId,\r\n      username: data.username,\r\n      role: data.role,\r\n      school: data.school,\r\n      school_instrument_level: data.school_instrument_level,\r\n      first_name: data.first_name,\r\n      last_name: data.last_name,\r\n      password: data.password,\r\n      first_login: data.first_login,\r\n      is_delete: data.is_delete\r\n    };\r\n    this.accounts.push(account);\r\n  }\r\n\r\n   // Method:\r\n   set_distint_school_instrument_level(data:string[]){\r\n    for(var dataSchoolInstrumentLevel of data){\r\n      var sub_query = dataSchoolInstrumentLevel.split(\"_\")\r\n      var school = sub_query[0];\r\n      var instrument = sub_query[1];\r\n      var level = sub_query[2];\r\n      if(this.sub_schools.indexOf(school)==-1){\r\n        this.sub_schools.push(school)\r\n      }\r\n      if(this.sub_instrument.indexOf(instrument)==-1){\r\n        this.sub_instrument.push(instrument)\r\n      }\r\n      if(this.sub_levels.indexOf(level)==-1){\r\n        this.sub_levels.push(level)\r\n      }\r\n    }\r\n  }\r\n\r\n  // == get filter == //\r\n  get_query_data_roles($event:any):void{\r\n    this.selectRoles = $event.value\r\n    this.query_table_with_filter()\r\n  }\r\n  /*\r\n  get_query_data_schools($event:any):void{\r\n    this.selectSchools = $event.value\r\n    this.query_table_with_filter()\r\n  } */\r\n  /*\r\n  get_query_data_groups($event:any):void{\r\n    this.selectGroups = $event.value\r\n    this.query_table_with_filter()\r\n  } */\r\n  /*\r\n  get_query_data_school_instrument_level($event:any):void{\r\n    this.selectSchools = $event.value\r\n    this.query_table_with_filter()\r\n  } */\r\n\r\n  get_query_data_sub_schools($event:any):void{\r\n    this.selectSubSchools = $event.value\r\n    if(this.selectSubSchools.length == 0){\r\n      this.sub_display_instrument = false\r\n      this.sub_display_levels = false\r\n    } else {\r\n      this.sub_display_instrument = true\r\n      this.sub_display_levels = false\r\n    }\r\n  }\r\n  get_query_data_sub_instruments($event:any):void{\r\n    this.selectSubInstruments = $event.value\r\n    if(this.selectSubInstruments.length == 0){\r\n      this.sub_display_levels = false\r\n    } else {\r\n      this.sub_display_levels = true\r\n    }\r\n  }\r\n  get_query_data_sub_levels($event:any):void{\r\n    this.selectSubLevels = $event.value\r\n    this.combine_querry_search_data()\r\n    this.query_table_with_filter()\r\n  }\r\n\r\n  // Method: Combine all the permutation of the sub Strings of School, Instrument and levels\r\n  combine_querry_search_data(){\r\n    // console.log(this.selectSubSchools)\r\n    // console.log(this.selectSubInstruments)\r\n    // console.log(this.selectSubLevels)\r\n    this.select_Combine_SchoolInstrumentLevels = [];\r\n    for(var eleSchool of this.selectSubSchools){\r\n      // console.log(eleSchool)\r\n      for(var eleInstrument of this.selectSubInstruments){\r\n        for(var eleLevel of this.selectSubLevels){\r\n          var query = eleSchool + \"_\" + eleInstrument + \"_\" + eleLevel\r\n          // console.log(query);\r\n          if(this.select_Combine_SchoolInstrumentLevels.indexOf(query)==-1){\r\n            this.select_Combine_SchoolInstrumentLevels.push(query)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    //console.log(this.select_Combine_SchoolInstrumentLevels)\r\n  }\r\n\r\n  // Method:\r\n  query_table_with_filter(){\r\n    var result:Account[] = [];\r\n    result = this.accounts;\r\n    if(this.selectRoles.length!=0){\r\n      result = this.filtering_by_role(result, this.selectRoles)\r\n    }\r\n    if(this.select_Combine_SchoolInstrumentLevels.length!=0){\r\n      result = this.filtering_by_school_instrument_levels(result, this.select_Combine_SchoolInstrumentLevels)\r\n    }\r\n    /*\r\n    if(this.selectSchools.length!=0){\r\n      result = this.filtering_by_school(result, this.selectSchools)\r\n    } */\r\n\r\n    //console.log(result)\r\n    /*\r\n    if(this.selectSchoolInstrumentLevels.length!=0){\r\n      result = this.filtering(result, this.selectSchoolInstrumentLevels)\r\n    } */\r\n    /*\r\n    if(this.selectGroups.length!=0){\r\n      result = this.filtering(result, this.selectGroups)\r\n    } */\r\n    /*\r\n    if(this.selectRoles.length ==0 && this.selectSchools.length ==0 && this.selectGroups.length ==0){\r\n      result = this.accounts;\r\n    }\r\n    */\r\n    if(this.selectRoles.length == 0 && this.select_Combine_SchoolInstrumentLevels.length == 0){\r\n      result = this.accounts;\r\n    }\r\n    this.dataSource = result\r\n\r\n    /*\r\n    const data = await this.crudservice.read('accounts',\"role\",\"in\",this.selectRoles).pipe(first()).toPromise();\r\n    */\r\n    /*\r\n    this.crudservice.read(\"accounts\",\r\n      \"role\",\"in\",this.selectRoles,\r\n      \"school\",\"array-contains-any\",this.selectSchools,\r\n      \"school_group\",\"array-contains-any\",this.selectGroups).subscribe(async (data:any) => {\r\n      this.dataSource = data\r\n    }) */\r\n  }\r\n\r\n  filtering_by_role(result:Account[], filter:string[]):Account[]{\r\n    var filterResult:Account[] = [];\r\n    var exist:boolean = false;\r\n    for(var ele of result){\r\n      for(var role of filter){\r\n        if(ele.role == role){\r\n          for(var eleResult of filterResult){\r\n            if(eleResult.docId == ele.docId){\r\n              exist = true\r\n            }\r\n          }\r\n          if(!exist){\r\n            filterResult.push(ele)\r\n            exist = false\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return filterResult\r\n  }\r\n\r\n   // Brute force method\r\n   filtering_by_school_instrument_levels(result:Account[], filter:string[]):Account[]{\r\n    var filterResult:Account[] = [];\r\n    var exist:boolean = false;\r\n    for(var ele of result){\r\n      var school_instrument_levels = ele.school_instrument_level\r\n      for(var query of filter){\r\n        for(var school_instrument_level of school_instrument_levels){\r\n          if(school_instrument_level == query){\r\n            for(var eleResult of filterResult){\r\n              if(eleResult.docId == ele.docId){\r\n                exist = true\r\n              }\r\n            }\r\n            if(!exist){\r\n              filterResult.push(ele)\r\n              exist = false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return filterResult\r\n  }\r\n\r\n  edit_doc_id($event:any):any{\r\n    // console.log(\"edit_doc_id activated\");\r\n    // [0] = username, [1] = first_name, [2] = last_name, [3] = role\r\n    // check if any of these are null before passing through crudservice.update\r\n    // if all are null, crudservice.update does not take place and return a message\r\n\r\n    // Creating data object\r\n    let data = {};\r\n\r\n    for(let i=0; i<$event.length; i++) {\r\n      if($event[i] != undefined) {\r\n        // use switch() function to create the data object\r\n        switch(i) {\r\n          case 0:\r\n            data['username'] = $event[i];\r\n            break;\r\n          \r\n          case 1:\r\n            data['first_name'] = $event[i];\r\n            break;\r\n\r\n          case 2:\r\n            data['last_name'] = $event[i];\r\n            break;\r\n\r\n          case 3:\r\n            data['role'] = $event[i];\r\n            break;\r\n        }\r\n      } else {\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if(data == {}) {\r\n      // console.log(\"No changes were made\");\r\n    } else {\r\n\r\n      try {\r\n        this.crudservice.update(\"accounts\", this.accounts[0].docId, data);\r\n  \r\n        var result:Account[] = []\r\n        \r\n        for(var ele of this.dataSource){\r\n          result.push(ele);\r\n        }\r\n        this.dataSource = result;\r\n        // console.log(\"Update is successful!\");\r\n\r\n        // send request back to dialog-box component to return to edit form\r\n  \r\n      } catch (error) {\r\n        // console.log(error);\r\n      }\r\n\r\n    }\r\n\r\n    // turn contenteditable off!!!!\r\n  }\r\n\r\n}","<app-header></app-header>\r\n<div class=\"account-create-wrapper wrapper-padding\">\r\n    <h1 class=\"mb-3\">Edit Account & Grouping</h1>\r\n    \r\n    <app-input-dropdown-select [inputDataList]=\"roles\" [name]=\"nameRole\"  (outputData)=\"get_query_data_roles($event)\"></app-input-dropdown-select>\r\n    <ng-container><app-input-dropdown-select [inputDataList]=\"sub_schools\" [name]=\"nameSchool\" (outputData)=\"get_query_data_sub_schools($event)\"></app-input-dropdown-select></ng-container>\r\n    <ng-container *ngIf=\"sub_display_instrument\"><app-input-dropdown-select [inputDataList]=\"sub_instrument\" [name]=\"nameInstrument\" (outputData)=\"get_query_data_sub_instruments($event)\"></app-input-dropdown-select></ng-container>\r\n    <ng-container *ngIf=\"sub_display_levels\"><app-input-dropdown-select [inputDataList]=\"sub_levels\" [name]=\"nameLevels\" (outputData)=\"get_query_data_sub_levels($event)\"></app-input-dropdown-select></ng-container>\r\n    <br>\r\n\r\n    <app-table [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\" [actionType]=\"actionType\" [accountUsername]=\"accountUsername\" (triggerUpdate)=\"edit_doc_id($event)\"></app-table>\r\n\r\n</div>\r\n","import { Component, OnInit, Input, Output ,EventEmitter } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material/select';\r\n\r\n@Component({\r\n  selector: 'app-input-select',\r\n  templateUrl: './input-select.component.html',\r\n  styleUrls: ['./input-select.component.scss']\r\n})\r\nexport class InputSelectComponent implements OnInit {\r\n\r\n  @Input('inputDataList') public inputDataList!:any;\r\n  @Input('name') public name!:any;\r\n\r\n  selectedData!:any;\r\n\r\n  @Output() public outputData = new EventEmitter<any>()\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    //empty\r\n  }\r\n\r\n  // Method: get the dropdown list values and prepare to sent to parent\r\n  selected_value(event: MatSelectChange):void {\r\n    this.selectedData = {\r\n      value: event.value,\r\n      //text: event.source.triggerValue\r\n    };\r\n    this.sentToParent()\r\n  }\r\n\r\n  // Method: sent data to the parent \r\n  public sentToParent():void{\r\n    this.outputData.emit(this.selectedData)\r\n  }\r\n\r\n}\r\n","<mat-form-field appearance=\"fill\">\r\n    <mat-label> {{name}} </mat-label>\r\n    <mat-select (selectionChange)=\"selected_value($event)\" placeholder=\"inputDataList\" clearButton>\r\n        <mat-option *ngFor=\"let ele of inputDataList\" [value]=\"ele\">{{ele}}</mat-option>\r\n    </mat-select>\r\n</mat-form-field>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Synchrony';\r\n}\r\n","<ng-container>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <router-outlet></router-outlet>\r\n</ng-container>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ElementRef, Output, EventEmitter, AfterViewInit, ViewChild, Input\r\n} from '@angular/core';\r\n\r\nimport videojs, {VideoJsPlayer} from 'video.js';\r\nimport * as adapter from 'webrtc-adapter/out/adapter_no_global.js';\r\nimport * as RecordRTC from 'recordrtc';\r\n\r\n\r\n// Required imports when recording audio-only using the videojs-wavesurfer plugin\r\nimport * as WaveSurfer from 'wavesurfer.js';\r\n\r\nimport * as MicrophonePlugin from 'wavesurfer.js/dist/plugin/wavesurfer.microphone.js';\r\nWaveSurfer.microphone = MicrophonePlugin;\r\n\r\n// Register videojs-wavesurfer plugin\r\nimport * as Wavesurfer from 'videojs-wavesurfer/dist/videojs.wavesurfer.js';\r\n\r\n\r\n// register videojs-record plugin with this import\r\nimport * as Record from 'videojs-record/dist/videojs.record.js';\r\nimport 'videojs-record/dist/plugins/videojs.record.ts-ebml.js';\r\ndeclare var require: any;\r\n// import * as WaveSurfer from 'wavesurfer.js';\r\nimport * as WaveSurferRegions from 'wavesurfer.js/dist/plugin/wavesurfer.regions.js';\r\nimport {ConfirmModalComponent} from \"../confirm-modal/confirm-modal.component\";\r\n@Component({\r\n  selector: 'app-videojs-record',\r\n  templateUrl: './videojs-record.component.html',\r\n  styleUrls: ['./videojs-record.component.scss']\r\n})\r\nexport class VideojsRecordComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  private WaveSurfer = require('wavesurfer.js');\r\n  // reference to the element itself: used to access events and methods\r\n  // private _elementRef: ElementRef;\r\n  @Output() startedRecordingEmit: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() recordingEmit: EventEmitter<Blob> = new EventEmitter<Blob>();\r\n  @Output() feedbackEmit: EventEmitter<any> = new EventEmitter<any>();\r\n  // index to create unique ID for component\r\n  idx = 'clip1';\r\n\r\n  private config: any;\r\n  player: any;\r\n  private plugin: any;\r\n  isRecording = false;\r\n  isPaused = false;\r\n  isRecorded = false;\r\n  @Input() selectedRecordingOption;\r\n  // constructor initializes our declared vars\r\n  constructor(elementRef: ElementRef) {\r\n    this.player = false;\r\n\r\n    // save reference to plugin (so it initializes)\r\n    this.plugin = Record;\r\n    // const ws  = WaveSurfer.create( {\r\n    //     container: this.player,\r\n    //     backend: 'WebAudio',\r\n    //     waveColor: '#36393b',\r\n    //     progressColor: 'black',\r\n    //     debug: true,\r\n    //     cursorWidth: 1,\r\n    //     displayMilliseconds: true,\r\n    //     hideScrollbar: true,\r\n    //     plugins: [\r\n    //       // enable microphone plugin\r\n    //       WaveSurfer.microphone.create({\r\n    //         bufferSize: 4096,\r\n    //         numberOfInputChannels: 1,\r\n    //         numberOfOutputChannels: 1,\r\n    //         constraints: {\r\n    //           video: false,\r\n    //           audio: true\r\n    //         }\r\n    //       })\r\n    //     ]\r\n    //   });\r\n\r\n      // video.js configuration\r\n    this.config = {\r\n      controls: true,\r\n      // autoplay: false,\r\n      fluid: false,\r\n      // fill: true,\r\n      // loop: false,\r\n      width: 410,\r\n      height: 240,\r\n      bigPlayButton: false,\r\n      controlBar: {\r\n        volumePanel: true,\r\n        fullscreenToggle: false,\r\n        bigPlayButton: false\r\n      },\r\n      plugins: {\r\n        // wavesurfer section is only needed when recording audio-only\r\n        // configure videojs-record plugin\r\n        // wavesurfer: ws,\r\n        record: {\r\n          audio: true,\r\n          debug: true,\r\n          displayMilliseconds: false,\r\n          maxLength: 600,\r\n          convertEngine: 'ts-ebml'\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  // use ngAfterViewInit to make sure we initialize the videojs element\r\n  // after the component template itself has been rendered\r\n  ngAfterViewInit(): void {\r\n    // ID with which to access the template's video element\r\n    const el = 'video_' + this.idx;\r\n    // setup the player via the unique element ID\r\n    this.config.plugins.record.screen = this.selectedRecordingOption !== 'Camera Recording';\r\n    this.config.plugins.record.video = this.selectedRecordingOption === 'Camera Recording';\r\n    this.player = videojs(document.getElementById(el), this.config, () => {\r\n      console.log('player ready! id:', el);\r\n      // print version information at startup\r\n      const msg = 'Using video.js ' + videojs.VERSION +\r\n        ' with videojs-record ' + videojs.getPluginVersion('record') +\r\n        ' and recordrtc ' + RecordRTC.version;\r\n      videojs.log(msg);\r\n    });\r\n    // this.player.fill(true);\r\n    // device is ready\r\n    this.player.on('deviceReady', () => {\r\n      console.log('device is ready!');\r\n      this.player.record().start();\r\n    });\r\n\r\n    // user clicked the record button and started recording\r\n    this.player.on('startRecord', () => {\r\n      console.log('started recording!');\r\n      this.isRecording = true;\r\n      this.startedRecordingEmit.emit();\r\n    });\r\n\r\n    // user completed recording and stream is available\r\n    this.player.on('finishRecord', () => {\r\n      // recordedData is a blob object containing the recorded data that\r\n      // can be downloaded by the user, stored on server etc.\r\n      console.log('finished recording: ', this.player.recordedData);\r\n      // const recordedDataMp4 = this.player.record().saveAs({video: 'my-video-file-name.mp4'}, 'convert');\r\n      // console.log(recordedDataMp4);\r\n      // this.recordingEmit.emit(recordedDataMp4);\r\n      this.recordingEmit.emit(this.player.recordedData);\r\n    });\r\n\r\n    // error handling\r\n    this.player.on('error', (element, error) => {\r\n      console.warn(error);\r\n    });\r\n\r\n    this.player.on('deviceError', () => {\r\n      console.error('device error:', this.player.deviceErrorCode);\r\n    });\r\n  }\r\n\r\n  // use ngOnDestroy to detach event handlers and remove the player\r\n  ngOnDestroy(): void {\r\n    if (this.player) {\r\n      this.player.dispose();\r\n      this.player = false;\r\n    }\r\n  }\r\n\r\n  startRecording(): void {\r\n    this.player.record().getDevice();\r\n    this.player.record().start();\r\n    this.isRecording = true;\r\n  }\r\n\r\n  startRerecording(): void {\r\n    this.player.record().start();\r\n    this.isRecording = true;\r\n  }\r\n  pauseRecording(): void {\r\n    this.isPaused = true;\r\n    this.player.record().pause();\r\n  }\r\n  resumeRecording(): void {\r\n    this.isPaused = false;\r\n    this.player.record().resume();\r\n  }\r\n  stopRecording(): void {\r\n    this.player.record().stop();\r\n    this.isPaused = false;\r\n    this.isRecording = false;\r\n    this.isRecorded = true;\r\n  }\r\n  submitFeedback(): void {\r\n    this.feedbackEmit.emit();\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"w-100 mb-2\">\r\n<!--  <button *ngIf=\"!isRecording\" type=\"button\" mdbBtn color=\"success\"-->\r\n<!--          (click)=\"startRecording()\">-->\r\n<!--    {{isRecorded ? 'Record again' : 'Record'}}-->\r\n<!--  </button>-->\r\n<!--  <button *ngIf=\"isRecording && !isPaused\" type=\"button\" mdbBtn color=\"warning\"-->\r\n<!--          (click)=\"pauseRecording()\">Pause</button>-->\r\n<!--  <button *ngIf=\"isRecording && isPaused\" type=\"button\" mdbBtn color=\"success\"-->\r\n<!--          (click)=\"resumeRecording()\">Resume</button>-->\r\n<!--  <button *ngIf=\"isRecording && !isPaused\" type=\"button\" mdbBtn color=\"danger\"-->\r\n<!--          (click)=\"stopRecording()\">Stop</button>-->\r\n\r\n<!--  <div fxLayout=\"row\" fxLayoutAlign=\"center\">-->\r\n<!--    <button *ngIf=\"!isRecording && isRecorded\" type=\"button\" mdbBtn color=\"info\" rounded=\"true\" (click)=\"submitFeedback()\" mdbWavesEffect>-->\r\n<!--      Submit Feedback</button>-->\r\n<!--  </div>-->\r\n\r\n</div>\r\n<div *ngIf=\"isRecording && (selectedRecordingOption !== 'Camera Recording')\" fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"w-100\">\r\n  Time elapsed: {{player.record().streamCurrentTime | number: '1.1-1'}}s\r\n</div>\r\n<div [ngClass] = \"((isRecording || !isRecorded) && (selectedRecordingOption !== 'Camera Recording')) ? 'invisible' : ''\">\r\n<!--  <h3 class=\"text-center\"> Recording Preview</h3>-->\r\n  <video id=\"video_{{idx}}\" class=\"video-js vjs-default-skin\" playsinline></video>\r\n</div>\r\n","import { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Action, AngularFirestore, AngularFirestoreCollection, AngularFirestoreCollectionGroup,\r\n  AngularFirestoreDocument, DocumentChangeAction, DocumentSnapshotDoesNotExist,\r\n  DocumentSnapshotExists, QueryFn, QueryGroupFn\r\n} from '@angular/fire/firestore';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\ntype CollectionPredicate<T> = string | AngularFirestoreCollection<T>;\r\ntype DocPredicate<T> = string | AngularFirestoreDocument<T>;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirestoreService {\r\n\r\n  constructor(private afs: AngularFirestore) {\r\n  }\r\n\r\n  createId(): string {\r\n    return this.afs.createId();\r\n  }\r\n\r\n  col<T>(ref: CollectionPredicate<T>, queryFn?: QueryFn): AngularFirestoreCollection<T> {\r\n    return typeof ref === 'string' ? this.afs.collection<T>(ref, queryFn) : ref;\r\n  }\r\n\r\n  colGroup<T>(collectionId: string, queryGroupFn?: QueryGroupFn<T>): AngularFirestoreCollectionGroup<T> {\r\n    return this.afs.collectionGroup<T>(collectionId, queryGroupFn);\r\n  }\r\n\r\n  doc<T>(ref: DocPredicate<T>): AngularFirestoreDocument<T> {\r\n    return typeof ref === 'string' ? this.afs.doc<T>(ref) : ref;\r\n  }\r\n\r\n  doc$<T>(ref: DocPredicate<T>): Observable<T> {\r\n    // @ts-ignore\r\n    return this.doc(ref)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((doc: Action<DocumentSnapshotDoesNotExist | DocumentSnapshotExists<T>>) => {\r\n          if (doc.payload.data()) {\r\n            // @ts-ignore\r\n            return {...doc.payload.data(), docId: doc.payload.id} as T;\r\n          }\r\n          return null;\r\n        }),\r\n      );\r\n  }\r\n\r\n  col$<T>(ref: CollectionPredicate<T>, queryFn?: QueryFn): Observable<any[]> {\r\n    return this.col(ref, queryFn)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((docs: DocumentChangeAction<T>[]) => {\r\n          return docs.map((a: DocumentChangeAction<T>) => {\r\n            const data = a.payload.doc.data() as T;\r\n            const docId = a.payload.doc.id;\r\n            return {...data, docId};\r\n          }) as T[];\r\n        }),\r\n      );\r\n  }\r\n\r\n  // colGroup$<T>(collectionId: string, queryGroupFn?: QueryGroupFn): Observable<T[]> {\r\n  //   // @ts-ignore\r\n  //   return this.colGroup(collectionId, queryGroupFn)\r\n  //     .snapshotChanges()\r\n  //     .pipe(\r\n  //       map((docs: DocumentChangeAction<T>[]) => {\r\n  //         return docs.map((a: DocumentChangeAction<T>) => {\r\n  //           const data = a.payload.doc.data() as T;\r\n  //           const docId = a.payload.doc.id;\r\n  //           return {...data, docId};\r\n  //         }) as T[];\r\n  //       }),\r\n  //     );\r\n  // }\r\n\r\n  get timestamp() {\r\n    return firebase.firestore.FieldValue.serverTimestamp();\r\n  }\r\n\r\n  async set<T>(ref: DocPredicate<T>, data: any, options?: { merge: boolean }): Promise<void> {\r\n    const _merge: boolean = options?.merge ?? false;\r\n    await this.doc(ref).set(data, {merge: _merge});\r\n  }\r\n\r\n  async update<T>(ref: DocPredicate<T>, data: any): Promise<void> {\r\n    await this.doc(ref).update(data);\r\n  }\r\n\r\n  async delete<T>(ref: DocPredicate<T>): Promise<void> {\r\n    await this.doc(ref).delete();\r\n  }\r\n\r\n  add<T>(ref: CollectionPredicate<T>, data: any): Promise<string> {\r\n    return new Promise((resolve, reject) => {\r\n      this.col(ref).add(data).then((docRef) => {\r\n        return resolve(docRef.id);\r\n      }).catch(reject);\r\n    });\r\n  }\r\n\r\n  setOrAdd(path: string, data: any): Promise<any> {\r\n    const segments = path.split('/').filter(v => v);\r\n    if (segments.length % 2) {\r\n      // Odd is always a collection\r\n      return this.col(path).add(data);\r\n    } else {\r\n      // Even is always document\r\n      return this.doc(path).set(data);\r\n    }\r\n  }\r\n\r\n  upsert<T>(ref: DocPredicate<T>, data: any): Promise<void> {\r\n    const doc = this.doc(ref)\r\n      .snapshotChanges()\r\n      .pipe(take(1))\r\n      .toPromise();\r\n\r\n    return doc.then((snap: Action<DocumentSnapshotDoesNotExist | DocumentSnapshotExists<T>>) => {\r\n      return snap.payload.exists ? this.update(ref, data) : this.set(ref, data);\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, AfterViewInit, ViewChild, Input } from '@angular/core';\r\nimport { CrudService } from 'src/app/core/services/crud.service';\r\nimport { TableComponent } from 'src/app/shared/components/table/table.component';\r\nimport { Account } from '../../../core/models/account';\r\nimport { Assignment } from '../../../core/models/assignment'\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-assignment-edit',\r\n  templateUrl: './assignment-edit.component.html',\r\n  styleUrls: ['./assignment-edit.component.scss']\r\n})\r\nexport class AssignmentEditComponent implements OnInit {\r\n\r\n  account!:Account;\r\n  accountDocId!:string;\r\n  instructorSchools:string[]=[];\r\n  sub_schools:string[]=[]\r\n  sub_instrument:string[]=[];\r\n  sub_levels:string[]=[];\r\n  \r\n  sub_display_instrument:boolean = false\r\n  sub_display_levels:boolean = false\r\n\r\n  // set filter name\r\n  nameSchool:string = \"School\"\r\n  nameInstrument:string = \"Instrument\"\r\n  nameLevels:string = \"Levels\"\r\n  \r\n  // get filter data\r\n  select_Combine_SchoolInstrumentLevels:string[] = [];\r\n  selectSubSchools:string[] = [];\r\n  selectSubInstruments:string[] = [];\r\n  selectSubLevels:string[] = [];\r\n\r\n  // Mat Table\r\n  dataSource!:any;\r\n  displayedColumns:string[] = ['name', 'due_datetime', 'school_instrument_level', 'action'];\r\n  actionType:string = \"instructorAssignmentEdit\";\r\n  // Assignment\r\n  assignments:any[]=[];\r\n\r\n  constructor(\r\n    private crudservice:CrudService) \r\n    { }\r\n\r\n  ngOnInit(): void {\r\n    this.get_account_information();\r\n  }\r\n\r\n  // Get the account doc Id\r\n  get_account_information(): void {\r\n    if(sessionStorage.getItem('account') != null){\r\n      this.account = JSON.parse(sessionStorage.getItem('account'));\r\n      this.accountDocId = this.account.docId;\r\n      this.instructorSchools = this.account.school;\r\n      //console.log(this.accountDocId);\r\n      this.get_all_instructor_assignments()\r\n      this.set_distint_school_instrument_level(this.account.school_instrument_level)\r\n    }\r\n  }\r\n\r\n  async get_all_instructor_assignments(){\r\n    this.dataSource = [];\r\n    this.assignments = [];\r\n    const data = await this.crudservice.read(\"assignments\",\"instructor_account_doc_id\",\"==\",this.accountDocId).pipe(first()).toPromise()\r\n    // console.log(data)\r\n    for(var ele of data){\r\n      this.create_assignment(ele)\r\n    }\r\n    this.dataSource = this.assignments;\r\n  }\r\n\r\n  create_assignment(data:any){\r\n    // Change the date and time formate\r\n    var edit_due_datetime = data.due_datetime.toDate()\r\n    edit_due_datetime = edit_due_datetime.toString().split(\"GMT\")[0].split(\" \");\r\n    var edit_due_date = edit_due_datetime[0] + \", \" + edit_due_datetime[2] + \" \" + edit_due_datetime[1] + \" \" + edit_due_datetime[3] + \", \"\r\n    var edit_due_time = edit_due_datetime[4]\r\n    var assignment: any = {\r\n      docId: data.docId,\r\n      instructor_account_doc_id: data.instructor_account_doc_id,\r\n      created_datetime: data.created_datetime,\r\n      description: data.description,\r\n      due_datetime: edit_due_date + edit_due_time,\r\n      name: data.name,\r\n      school: data.school,\r\n      school_instrument_level: data.school_instrument_level,\r\n      file_names: data.file_names\r\n    }\r\n    this.assignments.push(assignment)\r\n  }\r\n\r\n  // split the school_instrument_level into arrays of there own.\r\n  set_distint_school_instrument_level(data:string[]){\r\n    for(var dataSchoolInstrumentLevel of data){\r\n      var sub_query = dataSchoolInstrumentLevel.split(\"_\")\r\n      var school = sub_query[0];\r\n      var instrument = sub_query[1];\r\n      var level = sub_query[2];\r\n      if(this.sub_schools.indexOf(school)==-1){\r\n        this.sub_schools.push(school)\r\n      }\r\n      if(this.sub_instrument.indexOf(instrument)==-1){\r\n        this.sub_instrument.push(instrument)\r\n      }\r\n      if(this.sub_levels.indexOf(level)==-1){\r\n        this.sub_levels.push(level)\r\n      }\r\n    }\r\n  } \r\n\r\n    // == get filter == //\r\n    get_query_data_sub_schools($event:any):void{\r\n      this.selectSubSchools = $event.value\r\n      if(this.selectSubSchools.length == 0){\r\n        this.sub_display_instrument = false\r\n        this.sub_display_levels = false\r\n      } else {\r\n        this.sub_display_instrument = true\r\n        this.sub_display_levels = false\r\n      }\r\n      if(this.sub_display_instrument == false && this.sub_display_levels == false){\r\n        this.get_all_instructor_assignments();\r\n      }\r\n    }\r\n  \r\n    get_query_data_sub_instruments($event:any):void{\r\n      this.selectSubInstruments = $event.value\r\n      if(this.selectSubInstruments.length == 0){\r\n        this.sub_display_levels = false\r\n      } else {\r\n        this.sub_display_levels = true\r\n      }\r\n    }\r\n  \r\n  get_query_data_sub_levels($event:any):void{\r\n    this.selectSubLevels = $event.value\r\n    this.combine_querry_search_data()\r\n    this.query_table_with_filter()\r\n  }\r\n\r\n  // Method: \r\n  combine_querry_search_data(){\r\n    this.select_Combine_SchoolInstrumentLevels = [];\r\n    if(this.sub_display_instrument != false && this.sub_display_levels != false){\r\n      this.select_Combine_SchoolInstrumentLevels = [];\r\n      for(var eleSchool of this.selectSubSchools){\r\n        for(var eleInstrument of this.selectSubInstruments){\r\n          for(var eleLevel of this.selectSubLevels){\r\n            var query = eleSchool + \"_\" + eleInstrument + \"_\" + eleLevel\r\n            if(this.select_Combine_SchoolInstrumentLevels.indexOf(query)==-1){\r\n              this.select_Combine_SchoolInstrumentLevels.push(query)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Method: \r\n  query_table_with_filter(){\r\n    var result:Account[] = [];\r\n    result = this.assignments;\r\n    if(this.select_Combine_SchoolInstrumentLevels.length!=0){\r\n      this.filtering_by_school_instrument_levels(this.select_Combine_SchoolInstrumentLevels)\r\n    }\r\n  }\r\n\r\n  // Method: \r\n  async filtering_by_school_instrument_levels(filter:string[]){\r\n    this.assignments = [];\r\n    const data = await this.crudservice.read(\"assignments\",\"instructor_account_doc_id\",\"==\",this.accountDocId,\"school_instrument_level\",\"array-contains-any\",filter).pipe(first()).toPromise()\r\n    for(var ele of data){\r\n      this.create_assignment(ele)\r\n    }\r\n    this.dataSource = this.assignments;\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"account-create-wrapper wrapper-padding\">\r\n    \r\n    <h1 class=\"mb-3\"> Edit Assignment </h1>\r\n\r\n    <br>\r\n\r\n    <ng-container><app-input-dropdown-select [inputDataList]=\"sub_schools\" [name]=\"nameSchool\" (outputData)=\"get_query_data_sub_schools($event)\"></app-input-dropdown-select></ng-container>\r\n    <ng-container *ngIf=\"sub_display_instrument\"><app-input-dropdown-select [inputDataList]=\"sub_instrument\" [name]=\"nameInstrument\" (outputData)=\"get_query_data_sub_instruments($event)\"></app-input-dropdown-select></ng-container>\r\n    <ng-container *ngIf=\"sub_display_levels\"><app-input-dropdown-select [inputDataList]=\"sub_levels\" [name]=\"nameLevels\" (outputData)=\"get_query_data_sub_levels($event)\"></app-input-dropdown-select></ng-container>\r\n    \r\n    <br>\r\n\r\n    <app-table [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\" [actionType]=\"actionType\"></app-table>\r\n    \r\n</div>","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Assignment} from '../../../core/models/assignment';\r\nimport {first} from 'rxjs/operators';\r\n// import {AssignmentService} from '../../../core/services/assignment.service';\r\n// import {ConfirmModalComponent} from '../../../shared/components/confirm-modal/confirm-modal.component';\r\n// import {AngularFireStorage} from '@angular/fire/storage';\r\n// import {Observable} from 'rxjs';\r\n// import {AssignmentSubmission} from '../../../core/models/assignment-submission';\r\n// import {Instructor} from '../../../core/models/instructor';\r\n// import {InstructorService} from '../../../core/services/instructor.service';\r\n// import {StudentService} from '../../../core/services/student.service';\r\n// import {Student} from '../../../core/models/student';\r\n// import {AssignmentSubmissionService} from '../../../core/services/assignment-submission.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Account} from '../../../core/models/account';\r\nimport {CrudService} from '../../../core/services/crud.service';\r\nimport {AssignmentSubmission} from '../../../core/models/assignment-submission';\r\nimport {AngularFireStorage} from '@angular/fire/storage';\r\nimport firebase from 'firebase';\r\nimport Timestamp = firebase.firestore.Timestamp;\r\n\r\n@Component({\r\n  selector: 'app-assignment-submit-individual',\r\n  templateUrl: './assignment-submit-individual.component.html',\r\n  styleUrls: ['./assignment-submit-individual.component.scss']\r\n})\r\nexport class AssignmentSubmitIndividualComponent implements OnInit {\r\n  loggedInAccount: Account;\r\n  assignmentDocId: string;\r\n  assignment: Assignment;\r\n  assignmentSubmission: AssignmentSubmission = null;\r\n  newAssignmentSubmission: AssignmentSubmission;\r\n  assignmentSubmissionDocId: string;\r\n  // @ViewChild(ConfirmModalComponent) confirmModalComponent: ConfirmModalComponent;\r\n  scoresheetFile: File;\r\n  recordingFile: File;\r\n  // progress: number;\r\n  isUploading: boolean;\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private crudService: CrudService,\r\n    private router: Router,\r\n    private toastrService: ToastrService,\r\n    private afStorage: AngularFireStorage,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInAccount = JSON.parse(sessionStorage.getItem('account'));\r\n    this.activatedRoute.queryParams.subscribe(async params => {\r\n      this.assignmentDocId = params.assignmentDocId;\r\n      this.assignment = await this.crudService.readByDocId('assignments', params.assignmentDocId)\r\n        .pipe(first())\r\n        .toPromise();\r\n      // this.assignment = await this.assignmentService.getAssignment(this.assignmentDocId)\r\n      //   .pipe(first())\r\n      //   .toPromise();\r\n      // const assignmentSubmission: Array<AssignmentSubmission> =\r\n      const data = await this.crudService.read('assignment_submissions',\r\n        'student_doc_id', '==', this.loggedInAccount.docId,\r\n        'assignment_doc_id', '==', this.assignment.docId).pipe(first()).toPromise();\r\n      if (data && data.length > 0) {\r\n        this.assignmentSubmission = data[0];\r\n      }\r\n      // this.assignmentSubmissionService.getAssignmentSubmissionsByStudentAndAssignment(\r\n      //   localStorage.getItem('activeDocId'), this.assignmentDocId)\r\n      //   .subscribe(async (assignmentSubmissions) => {\r\n      //   this.assignmentSubmission = assignmentSubmissions[assignmentSubmissions.length - 1];\r\n      // console.log(this.assignmentSubmission);\r\n      // });\r\n    });\r\n\r\n  }\r\n  onGoBackClick(assignment: Assignment): void {\r\n    this.router.navigate(['student/assignment/view']);\r\n  }\r\n  async onSubmitClick(): Promise<void> {\r\n    if (!this.scoresheetFile && !this.recordingFile) {\r\n      this.toastrService.error('Please upload a file!', '', {positionClass: 'toast-top-center'});\r\n    }\r\n    else {\r\n      // Students can have multiple school instrument levels, assignments can also have multiple school instrument level\r\n      // Hence, need to find a list of school instrument level(s) that both the currently logged in student\r\n      // and the selected assignment have! This also explains why assignmentSubmission can have multiple school instrument level\r\n      this.newAssignmentSubmission = {\r\n        assignment_doc_id: this.assignmentDocId,\r\n        instructor_doc_id: this.assignment.instructor_account_doc_id,\r\n        student_doc_id: this.loggedInAccount.docId,\r\n        school: [this.loggedInAccount.school[0]],\r\n        school_instrument_level: this.loggedInAccount.school_instrument_level.filter(\r\n          value => this.assignment.school_instrument_level.includes(value)),\r\n        submitted_datetime: Timestamp.fromDate(new Date()),\r\n        feedback: '',\r\n        instructor_feedback_attachment_name: '',\r\n        instructor_feedback_attachment: '',\r\n        feedback_datetime: null\r\n      };\r\n      // need to create the new assignment submission first to get its doc id, so we know where to store the files in firebase storage\r\n      if (this.assignmentSubmission == null) {\r\n        await this.crudService.create('assignment_submissions', this.newAssignmentSubmission).then((docId) => {\r\n          this.assignmentSubmissionDocId = docId;\r\n        });\r\n      }\r\n      else {\r\n        this.assignmentSubmissionDocId = this.assignmentSubmission.docId;\r\n      }\r\n      this.isUploading = true;\r\n      if (this.scoresheetFile) { await this.uploadFile(this.scoresheetFile, 'scoresheet'); }\r\n      if (this.recordingFile) { await this.uploadFile(this.recordingFile, 'recording'); }\r\n      if (this.assignmentSubmission == null) {\r\n        await this.crudService.update('assignment_submissions', this.assignmentSubmissionDocId, this.newAssignmentSubmission);\r\n        this.toastrService.success('Uploaded assignment submission successfully!', '', {positionClass: 'toast-top-center'});\r\n      } else {\r\n        await this.crudService.update('assignment_submissions', this.assignmentSubmissionDocId, this.assignmentSubmission);\r\n        this.toastrService.success('Updated assignment submission successfully!', '', {positionClass: 'toast-top-center'});\r\n      }\r\n      this.router.navigate(['student/assignment/view']);\r\n    }\r\n  }\r\n  async uploadFile(file: File, type): Promise<void> {\r\n    const path = 'assignment_submissions/' + this.assignmentSubmissionDocId + '/' + file.name;\r\n    // console.log(file);\r\n    const task = this.afStorage.upload(path, file);\r\n    await task.then(async (result) => {\r\n      await result.ref.getDownloadURL().then(\r\n        async (downloadUrl) => {\r\n          // console.log(downloadUrl);\r\n          if (this.assignmentSubmission == null) {\r\n            if (type === 'scoresheet') {\r\n              this.newAssignmentSubmission.student_attachment_scoresheet = downloadUrl;\r\n              this.newAssignmentSubmission.student_attachment_scoresheet_name = file.name;\r\n            } else if (type === 'recording') {\r\n              this.newAssignmentSubmission.student_attachment_recording = downloadUrl;\r\n              this.newAssignmentSubmission.student_attachment_recording_name = file.name;\r\n            }\r\n          }\r\n          else {\r\n            if (type === 'scoresheet') {\r\n              this.assignmentSubmission.student_attachment_scoresheet = downloadUrl;\r\n              this.assignmentSubmission.student_attachment_scoresheet_name = file.name;\r\n            } else if (type === 'recording') {\r\n              this.assignmentSubmission.student_attachment_recording = downloadUrl;\r\n              this.assignmentSubmission.student_attachment_recording_name = file.name;\r\n            }\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"assignment-submit-individual-wrapper wrapper-padding max-width-section\">\r\n  <h1 class=\"mb-3\" *ngIf=\"assignment\">{{assignment.name}} Submission</h1>\r\n  <h3 class=\"mb-3\">Assignment Description</h3>\r\n  <p class=\"mb-3\" *ngIf=\"assignment\">{{assignment.description}}</p>\r\n  <h3 class=\"mb-3\">Assignment Attachments</h3>\r\n  <div class=\"mb-2\" *ngIf=\"assignment && assignment.file_names\" >\r\n\r\n    <div *ngFor=\"let file_name of assignment.file_names\" class=\"mb-1\">\r\n      <mat-icon class=\"mr-2\">attachment</mat-icon>\r\n      <a class=\"attachment-name\" target=\"_blank\"\r\n         [href]= \"'https://firebasestorage.googleapis.com/v0/b/synchrony-581ed.appspot.com/o/assignment%2F' + assignment.docId + '%2F' + file_name + '?alt=media'\">\r\n        {{file_name}}</a>\r\n    </div>\r\n  </div>\r\n  <h3 class=\"mb-3\">Assignment Submission</h3>\r\n\r\n  <div class=\"form-group mb-3\">\r\n    <label>Attach Music Score Sheet</label>\r\n    <app-dropzone [label]=\"'Drop your music score sheet here (Accepted format: .pdf)'\"\r\n [acceptedFileTypes] = \"'.pdf'\"\r\n                  [acceptMultipleFiles]=false (fileEmit)=\"scoresheetFile = $event[0]\"></app-dropzone>\r\n<!--    <input #scoresheetFile type=\"file\" class=\"form-control\" accept=\"application/pdf\">-->\r\n    <div *ngIf=\"assignmentSubmission && assignmentSubmission.student_attachment_scoresheet\" class=\"form-text text-muted\" >\r\n      Previous Submission: <a [href]=\"assignmentSubmission.student_attachment_scoresheet\" target=\"_blank\">\r\n      {{assignmentSubmission.student_attachment_scoresheet_name}}</a>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"form-group mb-3\">\r\n    <label>Attach Recording</label>\r\n    <app-dropzone [label]=\"'Drop your video recording here (Accepted formats: .avi, .mov, .mpeg4, .mp4, .webm)'\"\r\n                  [acceptedFileTypes] = \"'.MOV, .MPEG4, .MP4, .AVI, .WEBM'\"\r\n                  [acceptMultipleFiles]=false (fileEmit)=\"recordingFile = $event[0]\"></app-dropzone>\r\n<!--    <input #recordingFile type=\"file\" class=\"form-control\" accept=\"video/*\">-->\r\n    <div *ngIf=\"assignmentSubmission && assignmentSubmission.student_attachment_recording\" class=\"form-text text-muted\" >\r\n      Previous Submission: <a [href]=\"assignmentSubmission.student_attachment_recording\" target=\"_blank\">\r\n      {{assignmentSubmission.student_attachment_recording_name}}</a>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"isUploading\">\r\n    Uploading in process: <mat-progress-bar id=\"progress-bar\" mode=\"indeterminate\" class=\"mt-3 mb-3\"></mat-progress-bar>\r\n  </div>\r\n  <div>\r\n    <span class=\"go-back-section\" (click)=\"onGoBackClick(assignment)\">\r\n      <mat-icon class=\"mr-1 mt-1\" >arrow_back</mat-icon>\r\n      <span class=\"go-back-text mr-3 mt-1\">Back</span>\r\n    </span>\r\n    <button *ngIf=\"assignment\" class=\"btn btn-info submit-btn\" (click)=\"onSubmitClick()\">Submit</button>\r\n  </div>\r\n\r\n<!--  <app-confirm-modal></app-confirm-modal>-->\r\n</div>\r\n","import {Component, OnInit, ViewChild, Input, Output, EventEmitter, OnChanges, ComponentFactoryResolver} from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport {Router} from \"@angular/router\";\r\nimport {CrudService} from \"../../../core/services/crud.service\";\r\nimport {Account} from \"../../../core/models/account\";\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss']\r\n})\r\n\r\nexport class TableComponent implements OnInit, OnChanges {\r\n\r\n  @Input('dataSource') public dataSource: any;\r\n  @Input('displayedColumns') public displayedColumns: any;\r\n  @Input('actionType') public actionType: any;\r\n  @Input('accountUsername') public accountUsername: any; // for admin to not allow to delete his/her own account\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  matTableDataSource: any;\r\n  deleteDataDocId!: string;\r\n  editDataDocId!: string;\r\n\r\n  contenteditable:boolean = false;\r\n\r\n  @Output() public outputData = new EventEmitter<any>();\r\n  @Output() triggerUpdate = new EventEmitter<any>();\r\n\r\n  @Input(\"username\") username: string;\r\n  @Input(\"first_name\") first_name: string;\r\n  @Input(\"last_name\") last_name: string;\r\n  @Input(\"role\") role: string;\r\n  updateArray = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private crudService: CrudService,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    this.populateTable();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.populateTable();\r\n  }\r\n\r\n  populateTable(): void{\r\n    // console.log(this.dataSource);\r\n    this.matTableDataSource = new MatTableDataSource(this.dataSource);\r\n    this.matTableDataSource.paginator = this.paginator;\r\n    this.matTableDataSource.sort = this.sort;\r\n    // console.log(this.matTableDataSource);\r\n  }\r\n\r\n  applyFilter(event: Event): void {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.matTableDataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.matTableDataSource.paginator) {\r\n      this.matTableDataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  deleteDocId(data: string): void{\r\n    this.deleteDataDocId = data;\r\n    this.sentToParent();\r\n  }\r\n\r\n  editDocId(data: string): void{\r\n    this.editDataDocId = data;\r\n    this.sentToParent();\r\n  }\r\n\r\n  // Method: sent data to the parent\r\n  sentToParent(): void{\r\n    if (this.deleteDataDocId != null){\r\n      this.outputData.emit(this.deleteDataDocId);\r\n    }\r\n    if (this.editDataDocId != null){\r\n      this.outputData.emit(this.editDataDocId);\r\n    }\r\n  }\r\n\r\n  // Modal //\r\n  onOpen(event: any): void {\r\n    console.log(event);\r\n  }\r\n\r\n\r\n  onSubmitClick(assignmentDocId: string): void {\r\n    this.router.navigate(['student/assignment/submit'], { queryParams: { assignmentDocId }});\r\n  }\r\n  onFeedbackClick(assignmentSubmissionDocId: string): void {\r\n    this.router.navigate(['student/assignment/feedback'], { queryParams: { assignmentSubmissionDocId }});\r\n  }\r\n  onMarkClick(assignmentSubmissionDocId: string): void {\r\n    this.router.navigate(['instructor/assignment/mark'], { queryParams: { assignmentSubmissionDocId }});\r\n  }\r\n\r\n  // editTable($event) {\r\n  //   if(this.contenteditable == true) {\r\n  //     this.contenteditable = false;\r\n  //   } else {\r\n  //     this.contenteditable = true;\r\n  //   }\r\n  // }\r\n\r\n  // sendToTable($event) {\r\n  //   console.log(\"sentToTable activated\");\r\n  //   this.updateArray.push(this.username);\r\n  //   this.updateArray.push(this.first_name);\r\n  //   this.updateArray.push(this.last_name);\r\n  //   this.updateArray.push(this.role);\r\n  //   this.triggerUpdate.emit(this.updateArray);\r\n  //   this.updateArray = [];\r\n  // }\r\n\r\n  test(element) {\r\n    console.log(element);\r\n    // console.log(this.dataSource);\r\n    this.router.navigate(['/admin/account/edit/form'], {queryParams: element});\r\n  }\r\n}\r\n","<div class=\"table-wrapper\">\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\" Search by e.g school, name \" #input>\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"matTableDataSource\" striped=\"true\" matSort>\r\n    <!------ Start of Admin's Account Delete Page -------->\r\n    <ng-container matColumnDef=\"username\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Username </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"first_name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.first_name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"last_name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Surname </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.last_name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"role\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Role </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.role}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"school\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> School </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <ng-container *ngFor=\"let tag of element.school; let i = index\">\r\n          <span *ngIf=\"tag =='NA'\">\r\n            {{tag}}\r\n          </span>\r\n            <span *ngIf=\"tag!='NA'\">\r\n            ({{i+1}}) {{tag}}\r\n          </span>\r\n          </ng-container>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"school_instrument_level\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> school_instrument_level </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <ng-container *ngFor=\"let tag of element.school_instrument_level; let i = index\">\r\n          <span *ngIf=\"tag =='NA'\" [contentEditable]=\"contenteditable\">\r\n            {{tag}}\r\n          </span>\r\n            <span *ngIf=\"tag!='NA'\" [contentEditable]=\"contenteditable\">\r\n            ({{i+1}}) {{tag}}\r\n          </span>\r\n        </ng-container>\r\n      </td>\r\n    </ng-container>\r\n    <!------ End of Admin's Account Delete Page -------->\r\n\r\n    <ng-container matColumnDef=\"month\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Month </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.month}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"number_of_minutes\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Number Of Minutes  </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.number_of_minutes}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"school_abbreviation\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> School </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.school_abbreviation}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"year\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Year </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.year}} </td>\r\n    </ng-container>\r\n\r\n\r\n    <!------ Instructor's Assignment edit Page -------->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Assignment Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"due_datetime\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Due Date </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.due_datetime}} </td>\r\n    </ng-container>\r\n\r\n    <!------ Start of Student's View Assignment Page -------->\r\n    <!-- Assignment name and submission status is reused for instructor's mark assignment -->\r\n    <ng-container matColumnDef=\"assignment_name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Assignment Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.assignment_name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"assignment_due_datetime\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Due Date </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.due_datetime.toDate() | date:'EEEE, MMMM d, y, h:mm:ss a'}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"assignment_submission_status\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Submission Status </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.submission_status}} </td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"assignment_instructor\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Instructor </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.instructor.first_name + \" \" + element.instructor.last_name | titlecase}} </td>\r\n    </ng-container>\r\n\r\n    <!------ End of Student's View Assignment Page -------->\r\n\r\n    <!------ Start of Instructor's Mark Assignment Page -------->\r\n    <ng-container matColumnDef=\"assignment_school\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> School </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.school}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"assignment_school_instrument_level\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> School_Instrument_Level </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.school_instrument_level}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"assignment_student_name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Student's Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.student_name}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"assignment_feedback_status\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Feedback Status </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.feedback_status}} </td>\r\n    </ng-container>\r\n    <!------ End of Instructor's Mark Assignment Page -------->\r\n\r\n    <!-- Action Buttons -->\r\n    <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n            <!-- <button type=\"button\" mdbBtn color=\"danger\" value=\"{{element.username}}\" (click)=\"delete(element.username)\" mdbWavesEffect> Delete </button> -->\r\n            <!-- <button type=\"button\" mdbBtn color=\"danger\" value=\"{{element.username}}\" rounded=\"true\" data-toggle=\"modal\" data-target=\"#basicExample\" (click)=\"frame.show()\" mdbWavesEffect> Delete </button> -->\r\n          <ng-container *ngIf=\"accountUsername!=element.username\">\r\n            <app-dialog-box *ngIf=\"actionType=='accountDelete'\" [actionType]=\"actionType\" [docid]=\"element.docId\" [username]=\"element.username\"></app-dialog-box>\r\n          </ng-container>\r\n\r\n          <ng-container>\r\n            <app-dialog-box *ngIf=\"actionType=='accountEdit'\" [actionType]=\"actionType\" [docid]=\"element.docId\" [username]=\"element.username\" (click)=\"test(element)\"></app-dialog-box>\r\n          </ng-container>\r\n\r\n          <app-dialog-box *ngIf=\"actionType=='wage'\" [actionType]=\"actionType\"></app-dialog-box>\r\n\r\n          <button *ngIf=\"actionType=='instructorAssignmentEdit'\" type=\"button\" mdbBtn color=\"info\" mdbWavesEffect routerLink=\"/instructor/assignment/edit/assignment/{{ element.docId }}\"> Edit </button>\r\n\r\n          <app-dialog-box *ngIf=\"actionType=='instructorAssignmentEdit'\" [actionType]=\"actionType\" [docid]=\"element.docId\" [assignmentName]=\"element.name\"></app-dialog-box>\r\n\r\n          <button *ngIf=\"actionType=='assignmentSubmit'\" type=\"button\" mdbBtn color=\"info\" rounded=\"true\" (click)=\"onSubmitClick(element.docId)\" mdbWavesEffect>\r\n            {{element.submission_status == 'Pending Submission' ? \"Submit\" : \"Resubmit\"}} </button>\r\n\r\n          <ng-container *ngIf=\"actionType=='assignmentView'\">\r\n            <button *ngIf=\"!element.isOverDueDate\" type=\"button\" mdbBtn color=\"info\" rounded=\"true\" (click)=\"onSubmitClick(element.docId)\" mdbWavesEffect>\r\n              {{element.submission_status == 'Pending Submission' ? \"Submit\" : \"Resubmit\"}} </button>\r\n            <button *ngIf=\"element.assignmentSubmission?.feedback_datetime != null\" type=\"button\" mdbBtn color=\"info\" rounded=\"true\" (click)=\"onFeedbackClick(element.assignmentSubmission.docId)\" mdbWavesEffect>\r\n              View Feedback </button>\r\n          </ng-container>\r\n\r\n          <button *ngIf=\"actionType=='assignmentMark'\" type=\"button\" mdbBtn color=\"info\" rounded=\"true\" (click)=\"onMarkClick(element.docId)\" mdbWavesEffect>\r\n            {{element.feedback_datetime == null ? \"Mark\" : \"Re-mark\"}} </button>\r\n\r\n        </td>\r\n      </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n<!--      <ng-container *ngIf=\"dataSource\">-->\r\n<!--        <tr class=\"mat-row text-center\" *matNoDataRow>-->\r\n<!--          <h3>No results</h3>-->\r\n<!--        </tr>-->\r\n<!--      </ng-container>-->\r\n    </table>\r\n    <div class=\"spinner-container\">\r\n      <mat-progress-spinner *ngIf=\"!dataSource\" class=\"mt-2 mb-2\" mode=\"indeterminate\" [diameter]=\"40\"></mat-progress-spinner>\r\n      <div *ngIf=\"dataSource && dataSource.length === 0\" class=\"no-results-message\">No search results</div>\r\n    </div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n\r\n\r\n\r\n\r\n  <!--\r\n  <div mdbModal #frame=\"mdbModal\" class=\"modal fade\" id=\"frameModalTop\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" (open)=\"onOpen($event)\">\r\n    <div class=\"modal-dialog modal-notify modal-danger\" role=\"document\">\r\n\r\n      <div class=\"modal-content\">\r\n\r\n        <div class=\"modal-header\">\r\n          <p class=\"heading lead\"> Delete User ? </p>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"frame.hide()\">\r\n            <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n          </button>\r\n        </div>\r\n\r\n\r\n        <div class=\"modal-body\">\r\n          <div class=\"text-center\">\r\n            <mdb-icon fas icon=\"user-alt-slash\" size=\"4x\" class=\"mb-3 animated rotateIn\"></mdb-icon>\r\n            <p>Are you sure you would want to delete this user ?</p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"modal-footer justify-content-center\">\r\n          <a type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect> Delete\r\n            <mdb-icon far icon=\"times-circle\" class=\"ml-1\"></mdb-icon>\r\n          </a>\r\n          <a type=\"button\" mdbBtn color=\"success\" outline=\"true\" class=\"waves-effect\" mdbWavesEffect (click)=\"frame.hide()\"\r\n            data-dismiss=\"modal\"> No </a>\r\n<div mdbModal #frame=\"mdbModal\" class=\"modal fade\" id=\"frameModalTop\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" (open)=\"onOpen($event)\">\r\n    <div class=\"modal-dialog modal-notify modal-danger\" role=\"document\">\r\n\r\n      <div class=\"modal-content\">\r\n\r\n        <div class=\"modal-header\">\r\n          <p class=\"heading lead\"> Delete User ? </p>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"frame.hide()\">\r\n            <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n          </button>\r\n        </div>\r\n\r\n\r\n        <div class=\"modal-body\">\r\n          <div class=\"text-center\">\r\n            <mdb-icon fas icon=\"user-alt-slash\" size=\"4x\" class=\"mb-3 animated rotateIn\"></mdb-icon>\r\n            <p>Are you sure you would want to delete this user ?</p>\r\n          </div>\r\n        </div>\r\n\r\n    </div>\r\n  </div>\r\n-->\r\n\r\n<!--</div>-->\r\n\r\n<!--        <div class=\"modal-footer justify-content-center\">-->\r\n<!--          <a type=\"button\" mdbBtn color=\"danger\" class=\"waves-light\" mdbWavesEffect> Delete-->\r\n<!--            <mdb-icon far icon=\"times-circle\" class=\"ml-1\"></mdb-icon>-->\r\n<!--          </a>-->\r\n<!--          <a type=\"button\" mdbBtn color=\"success\" outline=\"true\" class=\"waves-effect\" mdbWavesEffect-->\r\n<!--            data-dismiss=\"modal\"> No </a>-->\r\n<!--        </div>-->\r\n<!--      </div>-->\r\n\r\n<!--    </div>-->\r\n</div>\r\n\r\n\r\n","export interface Account {\r\n  docId?: string;\r\n  username: string;\r\n  password: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  school: string[];\r\n  school_instrument_level: string[];\r\n  role: Role;\r\n  first_login: boolean;\r\n  is_delete: boolean;\r\n}\r\nexport enum Role {\r\n  admin = 'admin',\r\n  student = 'student',\r\n  instructor = 'instructor',\r\n  invalid = ''\r\n  // freelancer = 'freelancer'\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Firebase, Firestore\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireStorageModule, BUCKET } from '@angular/fire/storage';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\n\r\n// Angular Material Components\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\n// MDB / NGD Bootstrap\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n// Shared Components\r\nimport { HeaderComponent} from './shared/components/header/header.component';\r\nimport { CardsComponent } from './shared/components/cards/cards.component';\r\nimport { UpdatePasswordComponent } from './ui/home/update_password/update-password/update-password.component';\r\nimport { LoginComponent } from './ui/home/login/login.component';\r\n// Admin's Components\r\nimport { AccountCreateComponent} from './ui/admin/account-create/account-create.component';\r\nimport { AccountEditComponent } from './ui/admin/account-edit/account-edit.component';\r\nimport { AccountDeleteComponent } from './ui/admin/account-delete/account-delete.component';\r\nimport { AdminHomeComponent } from './ui/admin/admin-home/admin-home.component';\r\nimport { FreelanceWageComponent } from './ui/admin/freelance-wage/freelance-wage.component';\r\n// Form modules\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastrModule} from 'ngx-toastr';\r\nimport { NgxCsvParserModule } from 'ngx-csv-parser';\r\nimport { InstructorHomeComponent } from './ui/instructor/instructor-home/instructor-home.component';\r\nimport { AssignmentCreateComponent } from './ui/instructor/assignment-create/assignment-create.component';\r\nimport { AssignmentEditComponent } from './ui/instructor/assignment-edit/assignment-edit.component';\r\nimport { AssignmentMarkComponent } from './ui/instructor/assignment-mark/assignment-mark.component';\r\nimport { StudentHomeComponent } from './ui/student/student-home/student-home.component';\r\nimport { TableComponent } from './shared/components/table/table.component';\r\nimport { InputDropdownSelectComponent } from './shared/components/input-dropdown-select/input-dropdown-select.component';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { InputSelectComponent } from './shared/components/input-select/input-select.component';\r\nimport {AssignmentMarkIndividualComponent} from './ui/instructor/assignment-mark-individual/assignment-mark-individual.component';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {NgxExtendedPdfViewerModule} from 'ngx-extended-pdf-viewer';\r\nimport {VideojsRecordComponent} from './shared/components/videojs-record/videojs-record.component';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport {AssignmentViewComponent} from './ui/student/assignment-view/assignment-view.component';\r\nimport {TranslateModule} from '@ngx-translate/core';\r\nimport {AssignmentSubmitIndividualComponent} from './ui/student/assignment-submit-individual/assignment-submit-individual.component';\r\nimport {AssignmentFeedbackIndividualComponent} from './ui/student/assignment-feedback-individual/assignment-feedback-individual.component';\r\nimport {VgCoreModule} from '@videogular/ngx-videogular/core';\r\nimport {VgOverlayPlayModule} from '@videogular/ngx-videogular/overlay-play';\r\nimport {VgBufferingModule} from '@videogular/ngx-videogular/buffering';\r\nimport {VgControlsModule} from '@videogular/ngx-videogular/controls';\r\nimport { DialogBoxComponent } from './shared/components/dialog-box/dialog-box.component';\r\nimport {DropzoneComponent} from \"./shared/components/dropzone/dropzone.component\";\r\nimport { AssignmentEditIndividualComponent } from './ui/instructor/assignment-edit-individual/assignment-edit-individual.component';\r\nimport {ConfirmModalComponent} from './shared/components/confirm-modal/confirm-modal.component';\r\nimport { AccountEditFormComponent } from './ui/admin/account-edit-form/account-edit-form.component';\r\n// import {VideoPlayerComponent} from './shared/components/video-player/video-player.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    AccountCreateComponent,\r\n    CardsComponent,\r\n    LoginComponent,\r\n    AccountDeleteComponent,\r\n    UpdatePasswordComponent,\r\n    AdminHomeComponent,\r\n    FreelanceWageComponent,\r\n    InstructorHomeComponent,\r\n    AssignmentCreateComponent,\r\n    AssignmentEditComponent,\r\n    AssignmentMarkComponent,\r\n    AssignmentMarkIndividualComponent,\r\n    StudentHomeComponent,\r\n    TableComponent,\r\n    InputDropdownSelectComponent,\r\n    AccountEditComponent,\r\n    InputSelectComponent,\r\n    VideojsRecordComponent,\r\n    AssignmentViewComponent,\r\n    AssignmentSubmitIndividualComponent,\r\n    AssignmentFeedbackIndividualComponent,\r\n    DialogBoxComponent,\r\n    DropzoneComponent,\r\n    AssignmentEditIndividualComponent,\r\n    ConfirmModalComponent,\r\n    AccountEditFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgxDropzoneModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatNativeDateModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    AngularFireModule.initializeApp(environment.firebase, 'Synchrony'),\r\n    AngularFirestoreModule, // Only required for database features\r\n    AngularFireAuthModule, // Only required for auth features\r\n    AngularFireStorageModule,  // Only required for storage features\r\n    MDBBootstrapModule.forRoot(), // MDBootstrap\r\n    NgbModule, // Bootstrap\r\n    BrowserModule,\r\n    BrowserAnimationsModule, // required animations module\r\n    ToastrModule.forRoot({\r\n      timeOut: 3500,\r\n      positionClass: 'toast-top-center',\r\n      preventDuplicates: true,\r\n    }),\r\n    NgxCsvParserModule,\r\n    FlexLayoutModule,\r\n    NgxExtendedPdfViewerModule,\r\n    TranslateModule.forRoot(),\r\n    VgCoreModule,\r\n    VgControlsModule,\r\n    VgOverlayPlayModule,\r\n    VgBufferingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {first} from 'rxjs/operators';\r\nimport {Assignment} from '../../../core/models/assignment';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {CrudService} from '../../../core/services/crud.service';\r\nimport {AssignmentSubmission} from '../../../core/models/assignment-submission';\r\nimport {DatePipe} from '@angular/common';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-assignment-view',\r\n  templateUrl: './assignment-view.component.html',\r\n  styleUrls: ['./assignment-view.component.scss']\r\n})\r\nexport class AssignmentViewComponent implements OnInit {\r\n  assignments!: Array<Assignment>;\r\n  dataSource: Array<Assignment>;\r\n  displayedColumns: string[] = ['assignment_name',  'assignment_due_datetime', 'assignment_submission_status', 'assignment_instructor', 'action'];\r\n  actionType = 'assignmentView';\r\n  completionStatusOptions: string[] = ['Ongoing', 'Completed'];\r\n  submissionStatusOptions: string[] = ['Pending Submission', 'Submitted'];\r\n  selectedCompletionStatusOptions: string[] = [];\r\n  selectedSubmissionStatusOptions: string[] = [];\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private crudservice: CrudService,\r\n    private translateService: TranslateService,\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    const loggedInAccount = JSON.parse(sessionStorage.getItem('account'));\r\n    // console.log(loggedInAccount);\r\n    this.assignments = await this.crudservice.read('assignments',\r\n    'school_instrument_level', 'array-contains-any', loggedInAccount.school_instrument_level).pipe(first()).toPromise();\r\n    this.translateService.use('en');\r\n    const datePipe = new DatePipe(this.translateService.currentLang);\r\n    for (const assignment of this.assignments) {\r\n      assignment.assignment_name = assignment.name;\r\n      assignment.instructor =  await this.crudservice.readByDocId(\r\n        'accounts', assignment.instructor_account_doc_id).pipe(first()).toPromise();\r\n      assignment.submission_status = 'Pending Submission';\r\n      const assignmentSubmission: Array<AssignmentSubmission> =\r\n        await this.crudservice.read('assignment_submissions',\r\n          'student_doc_id', '==', loggedInAccount.docId,\r\n          'assignment_doc_id', '==', assignment.docId).pipe(first()).toPromise();\r\n      // console.log(assignmentSubmission);\r\n      assignment.isOverDueDate = new Date() > assignment.due_datetime.toDate();\r\n      if (assignmentSubmission.length > 0) {\r\n        assignment.submission_status = 'Last submitted on ' + datePipe.transform(assignmentSubmission[0].submitted_datetime.toDate(), 'EEEE, MMMM d, y, h:mm:ss a');\r\n        // TODO: Get the latest assignment submission\r\n        assignment.assignmentSubmission = assignmentSubmission[0];\r\n      }\r\n      else {\r\n        assignment.submission_status = assignment.isOverDueDate ? 'Missing Submission' : 'Pending Submission';\r\n      }\r\n    }\r\n    this.dataSource = this.assignments;\r\n  }\r\n\r\n  filterData($event: any, type: string): void {\r\n    // console.log($event.value);\r\n    switch (type) {\r\n      case 'Completion Status':\r\n        this.selectedCompletionStatusOptions = $event.value;\r\n        break;\r\n      case 'Submission Status':\r\n        this.selectedSubmissionStatusOptions = $event.value;\r\n        break;\r\n    }\r\n    const filteredAssignments: Array<Assignment> = [];\r\n    for (const assignment of this.assignments) {\r\n      if (\r\n        (this.selectedCompletionStatusOptions.length === 0 ||\r\n          (this.selectedCompletionStatusOptions.includes('Ongoing') && !assignment.isOverDueDate) ||\r\n          (this.selectedCompletionStatusOptions.includes('Completed') && assignment.isOverDueDate)) &&\r\n        (this.selectedSubmissionStatusOptions.length === 0 ||\r\n          (this.selectedSubmissionStatusOptions.includes('Pending Submission') && assignment.submission_status === 'Pending Submission') ||\r\n          (this.selectedSubmissionStatusOptions.includes('Submitted') && assignment.submission_status !== 'Pending Submission'))\r\n        ) {\r\n        filteredAssignments.push(assignment);\r\n      }\r\n    }\r\n    this.dataSource = filteredAssignments;\r\n    // const filteredAssignmentSubmissions: Array<AssignmentSubmission> = [];\r\n    // for (const assignmentSubmission of this.assignmentSubmissions) {\r\n    //   for (const schoolInstrumentLevel of assignmentSubmission.school_instrument_level) {\r\n    //     const schoolInstrumentLevelArr = schoolInstrumentLevel.split('_');\r\n    //     const school = schoolInstrumentLevelArr[0];\r\n    //     const instrument = schoolInstrumentLevelArr[1];\r\n    //     const level = schoolInstrumentLevelArr[2];\r\n    //     if (\r\n    // (this.selectedSchoolOptions.length === 0 || this.selectedSchoolOptions.includes(school)) &&\r\n    // (this.selectedInstrumentOptions.length === 0 || this.selectedInstrumentOptions.includes(instrument)) &&\r\n    // (this.selectedLevelOptions.length === 0 ||this.selectedLevelOptions.includes(level))\r\n    //     ) {\r\n    //       filteredAssignmentSubmissions.push(assignmentSubmission);\r\n    //     }\r\n    //   }\r\n    //   this.dataSource = filteredAssignmentSubmissions;\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<div class=\"assignment-view-wrapper wrapper-padding max-width-section\">\r\n  <h1 class=\"mb-3\">My Assignments</h1>\r\n  <app-input-dropdown-select [inputDataList]=\"completionStatusOptions\" [name]=\"'Completion Status'\"  (outputData)=\"filterData($event, 'Completion Status')\"></app-input-dropdown-select>\r\n  <app-input-dropdown-select [inputDataList]=\"submissionStatusOptions\" [name]=\"'Submission Status'\"  (outputData)=\"filterData($event, 'Submission Status')\"></app-input-dropdown-select>\r\n  <app-table [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\" [actionType]=\"actionType\"></app-table>\r\n<!--  <app-search-filter [filterActions] = \"filterActions\"></app-search-filter>-->\r\n<!--  <app-common-table [tableActions]=\"tableActions\" [tableColumns]=\"tableColumns\" [assignments]=\"assignments\"></app-common-table>-->\r\n</div>\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark indigo\">\r\n\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand>\r\n        <a class=\"navbar-brand\" *ngIf=\"userRole=='admin'\">\r\n            <img src=\"../../../../../assets/images/Logo.png\" routerLink=\"/admin/home\" height=\"40\" alt=\"\">\r\n        </a>\r\n        <a class=\"navbar-brand\" *ngIf=\"userRole=='instructor'\">\r\n            <img src=\"../../../../../assets/images/Logo.png\" routerLink=\"/instructor/home\" height=\"40\" alt=\"\">\r\n        </a>\r\n        <a class=\"navbar-brand\" *ngIf=\"userRole=='student'\">\r\n            <img src=\"../../../../../assets/images/Logo.png\" routerLink=\"/student/assignment/view\" height=\"40\" alt=\"\">\r\n        </a>\r\n    </mdb-navbar-brand>\r\n\r\n    <!-- Collapsible content -->\r\n    <links>\r\n\r\n    <!--\r\n    <li class=\"nav-item active\" [ngClass]=\"{'active': url == '/my-task'}\">\r\n        <a class=\"nav-link waves-light\" routerLink=\"/my-task\" mdbWavesEffect> Account & Grouping Creation </a>\r\n    </li>\r\n    -->\r\n\r\n        <!-- ADMIN -->\r\n        <ul class=\"navbar-nav mr-auto\" *ngIf=\"userRole=='admin'\">\r\n            <li class=\"nav-item\" [ngClass]=\"{'active': url == '/admin/account/create'}\">\r\n                <a class=\"nav-link waves-light\"  routerLink=\"/admin/account/create\" mdbWavesEffect> Account & Grouping Creation </a>\r\n            </li>\r\n            <li class=\"nav-item\" [ngClass]=\"{'active': url == '/admin/account/edit'}\">\r\n                <a class=\"nav-link waves-light\" routerLink=\"/admin/account/edit\" mdbWavesEffect> Edit Account & Grouping </a>\r\n            </li>\r\n            <li class=\"nav-item\" [ngClass]=\"{'active': url == '/admin/account/delete'}\">\r\n                <a class=\"nav-link waves-light\" routerLink=\"/admin/account/delete\" mdbWavesEffect> Delete Account </a>\r\n            </li>\r\n            <li class=\"nav-item\" [ngClass]=\"{'active': url == '/admin/freelance'}\">\r\n                <a class=\"nav-link waves-light\" routerLink=\"/admin/freelance\" mdbWavesEffect> Calculate Wages </a>\r\n            </li>\r\n        </ul>\r\n        <!-- END OF ADMIN -->\r\n\r\n        <!-- INSTRUCTOR -->\r\n        <ul class=\"navbar-nav mr-auto\" *ngIf=\"userRole=='instructor'\">\r\n\r\n            <li class=\"nav-item active\" [ngClass]=\"{'active': url == '/instructor/assignment/create'}\">\r\n                <a class=\"nav-link waves-light\" routerLink=\"/instructor/assignment/create\" mdbWavesEffect> New Assignment </a>\r\n            </li>\r\n            <li class=\"nav-item\" [ngClass]=\"{'active': url == '/instructor/assignment/edit'}\">\r\n                <a class=\"nav-link waves-light\" routerLink=\"/instructor/assignment/edit\" mdbWavesEffect> Edit Assignment </a>\r\n            </li>\r\n            <li class=\"nav-item\" [ngClass]=\"{'active': url == '/instructor/assignment/mark'}\">\r\n                <a class=\"nav-link waves-light\" routerLink=\"/instructor/assignment/mark\" mdbWavesEffect> Mark Assignment </a>\r\n            </li>\r\n\r\n        </ul>\r\n        <!-- END OF INSTRUCTOR -->\r\n\r\n        <!-- STUDENT -->\r\n        <ul class=\"navbar-nav mr-auto\" *ngIf=\"userRole=='student'\">\r\n          <li class=\"nav-item active\" [ngClass]=\"{'active': url == '/student/assignment/view'}\">\r\n            <a class=\"nav-link waves-light\" routerLink=\"/student/assignment/view\" mdbWavesEffect> My Assignments </a>\r\n          </li>\r\n        </ul>\r\n        <!-- END OF INSTRUCTOR -->\r\n\r\n        <ul class=\"navbar-nav ml-auto nav-flex-icons\">\r\n            <li class=\"nav-item dropdown\" dropdown>\r\n                <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\r\n                  <mdb-icon fas icon=\"user\"></mdb-icon> Profile<span class=\"caret\"></span></a>\r\n                <div *dropdownMenu class=\"dropdown-menu dropdown-menu-right dropdown dropdown-primary\" role=\"menu\">\r\n                  <!-- <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">My account</a> -->\r\n                  <a class=\"dropdown-item waves-light\" mdbWavesEffect routerLink=\"/login\">Log out</a>\r\n                </div>\r\n              </li>\r\n        </ul>\r\n    </links>\r\n    <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n<!--/.Navbar-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  url!: string;\r\n  userRole!: any;\r\n  accountDetail!:any;\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validate_session();\r\n    this.url = this.router.url;\r\n  }\r\n\r\n  validate_session(): void {\r\n    if(sessionStorage.getItem('account') != null){\r\n      this.accountDetail = JSON.parse(sessionStorage.getItem('account'));\r\n      this.userRole = this.accountDetail.role;\r\n      // console.log(this.accountDetail);\r\n    }else {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    /* // === to be deleted (KIV) === //\r\n    if(sessionStorage.getItem('role') != undefined || sessionStorage.getItem('role') != null){\r\n        this.userRole = sessionStorage.getItem('role')\r\n        console.log(this.userRole)\r\n    } else {\r\n        this.router.navigate(['/login'])\r\n    }\r\n    */\r\n  }\r\n\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  firebase: {\r\n    apiKey: \"AIzaSyA_bzSe5zt66gNGTqOGjXNhtf7IIfgjTUE\",\r\n    authDomain: \"synchrony-581ed.firebaseapp.com\",\r\n    projectId: \"synchrony-581ed\",\r\n    storageBucket: \"synchrony-581ed.appspot.com\",\r\n    messagingSenderId: \"457246691317\",\r\n    appId: \"1:457246691317:web:ad586375c8b8ee8d101abc\",\r\n    measurementId: \"G-YGYD6JY9D2\"\r\n  }\r\n};\r\n","import {AfterViewInit, Component, ElementRef, EventEmitter, OnInit, Output, TemplateRef, ViewChild} from '@angular/core';\r\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {Assignment} from '../../../core/models/assignment';\r\n// import {AssignmentService} from '../../../core/services/assignment.service';\r\nimport {AssignmentSubmission} from '../../../core/models/assignment-submission';\r\n// import {AccountService} from '../../../core/services/account.service';\r\nimport {Account} from '../../../core/models/account';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {first} from 'rxjs/operators';\r\nimport {CrudService} from '../../../core/services/crud.service';\r\n\r\n@Component({\r\n  selector: 'app-confirm-modal',\r\n  templateUrl: './confirm-modal.component.html',\r\n  styleUrls: ['./confirm-modal.component.scss']\r\n})\r\n\r\nexport class ConfirmModalComponent implements OnInit {\r\n  title = 'Confirm Modal';\r\n  description = '';\r\n  feedback = '';\r\n  buttons = [];\r\n  grade: number;\r\n  isGradeError = false;\r\n  assignmentSubmission: AssignmentSubmission;\r\n  @Output() feedbackEmit: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\r\n  @Output() responseEmit: EventEmitter<string> = new EventEmitter<string>();\r\n  @ViewChild('confirmModal') confirmModal: TemplateRef<any>;\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    // private assignmentService: AssignmentService,\r\n    // private accountService: AccountService,\r\n    private toastrService: ToastrService,\r\n    private crudService: CrudService,\r\n\r\n  ) {}\r\n  async open(title: string, description: string, buttons: Array<string>, assignment: Assignment = null,\r\n             assignmentSubmission: AssignmentSubmission = null, account: Account = null, assignmentDocId: string = ''): Promise<void> {\r\n    this.title = title;\r\n    this.description = description;\r\n    this.buttons = buttons;\r\n    this.assignmentSubmission = assignmentSubmission;\r\n    if (assignmentDocId !== '') {\r\n      assignment = await this.crudService.readByDocId('assignments', assignmentDocId)\r\n        .pipe(first())\r\n        .toPromise();\r\n      // assignment = await this.assignmentService.getAssignment(assignmentDocId)\r\n      //   .pipe(first())\r\n      //   .toPromise();\r\n    }\r\n    this.modalService.open(this.confirmModal, {ariaLabelledBy: 'modal-basic-title'}).result.then((response) => {\r\n      if (response === 'delete') {\r\n        // if (assignment) {\r\n        //   this.assignmentService.deleteAssignment(assignment.docId).then(r => {\r\n        //     this.toastrService.success('Deleted assignment successfully!', '', {positionClass: 'toast-top-center'});\r\n        //     console.log(r);\r\n        //   });\r\n        // }\r\n        // if (account) {\r\n        //   this.accountService.deleteAccount(account.docId).then(r => {\r\n        //     this.toastrService.success('Deleted account successfully!', '', {positionClass: 'toast-top-center'});\r\n        //     console.log(r);\r\n        //   });\r\n        // }\r\n      }\r\n      if (response === 'submit') {\r\n        if (!this.grade && this.grade !== 0) {\r\n          this.isGradeError = true;\r\n        }\r\n        else {\r\n          this.isGradeError = false;\r\n          this.feedbackEmit.emit([this.feedback, this.grade]);\r\n        }\r\n      }\r\n      this.responseEmit.emit(response);\r\n    }, (reason) => {\r\n      this.responseEmit.emit('close');\r\n    });\r\n  }\r\n  getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return  `with: ${reason}`;\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"confirm-modal-wrapper\">\r\n  <ng-template #confirmModal let-modal>\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">{{title}}</h4>\r\n      <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('cross')\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div  class=\"modal-body\">\r\n      {{description}}\r\n      <div *ngIf=\"title == 'Submit Feedback'\">\r\n        <h3>Score</h3>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n          <mat-label>Please input score (0 to 100)</mat-label>\r\n          <input matInput placeholder=\"\" value=\"\"\r\n                 type=\"number\" min=\"0\" max=\"100\" [(ngModel)]=\"grade\"\r\n                 (change)= \"grade < 0 ? grade = 0 : grade; grade > 100 ? grade = 100 : grade;\">\r\n        </mat-form-field>\r\n        <mat-error *ngIf=\"isGradeError && !grade\">\r\n          Score cannot be empty\r\n        </mat-error>\r\n        <h3>Feedback</h3>\r\n        <textarea class=\"modal-content form-control mt-3\" placeholder=\"Enter your feedback here (Optional)\" [(ngModel)]=\"feedback\"></textarea>\r\n        <small *ngIf=\"assignmentSubmission && assignmentSubmission.feedback\" class=\"form-text text-muted\" >\r\n          Previous Score: {{assignmentSubmission.grade}} &nbsp;\r\n          Previous Feedback: {{assignmentSubmission.feedback}}\r\n        </small>\r\n      </div>\r\n      <div *ngIf=\"title == 'Recording Instructions'\">\r\n        <h4> Recording Steps </h4>\r\n        <p> 1. Select the desired recording option. (Screen recording to record computer screen\r\n          / Camera recording to record camera) </p>\r\n        <p> 2. Click on the record button when you are ready to being recording </p>\r\n        <p> 3. Enable screen sharing/camera permissions </p>\r\n        <p> 4. The recording will begin. Pause when necessary. </p>\r\n        <p> 5. After recording, press stop and click submit feedback to send it to the respective student</p>\r\n        <hr>\r\n        <h4> Student attachments </h4>\r\n        <div class=\"form-text\" >\r\n          Scoresheet pdf:\r\n          <a #scoresheet target=\"_blank\" [href]=\"assignmentSubmission?.student_attachment_scoresheet\">\r\n            {{assignmentSubmission?.student_attachment_scoresheet_name}}\r\n          </a>\r\n        </div>\r\n        <div class=\"form-text\" >\r\n         Video recording :\r\n          <a #videoPlayer target=\"_blank\" [href]=\"assignmentSubmission?.student_attachment_recording\">\r\n            {{assignmentSubmission?.student_attachment_recording_name}}\r\n          </a>\r\n        </div>\r\n        <hr>\r\n        <ng-container *ngIf=\"assignmentSubmission && assignmentSubmission.feedback_datetime != null\">\r\n          <h4> Previously submitted instructor's feedback information</h4>\r\n          <div class=\"form-text\" >\r\n            <div> Score: {{assignmentSubmission.grade}}</div>\r\n            <div> Feedback: {{assignmentSubmission.feedback == '' ? \"No Feedback\" : assignmentSubmission.feedback}} </div>\r\n            <div> Feedback Recording:\r\n              <a target=\"_blank\" [href]=\"assignmentSubmission?.instructor_feedback_attachment\">\r\n                {{assignmentSubmission?.instructor_feedback_attachment_name}}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <div *ngFor=\"let button of buttons\">\r\n        <button *ngIf=\"button == 'close'\" type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close(button)\">Close</button>\r\n        <button *ngIf=\"button == 'discard'\" type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close(button)\">Discard Changes</button>\r\n        <button *ngIf=\"button == 'delete'\" type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close(button)\">Delete</button>\r\n        <button *ngIf=\"button == 'submit'\" type=\"button\" class=\"btn btn-success\" (click)=\"modal.close(button)\" [disabled]=\"!grade && grade !== 0\">Submit</button>\r\n        <button *ngIf=\"button == 'ok'\" type=\"button\" class=\"btn btn-primary\" (click)=\"modal.close(button)\">OK</button>\r\n      </div>\r\n\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-home',\r\n  templateUrl: './admin-home.component.html',\r\n  styleUrls: ['./admin-home.component.scss']\r\n})\r\nexport class AdminHomeComponent implements OnInit {\r\n\r\n  createTitle: string = \"Account Create\";\r\n  editTitle: string = \"Account Edit\";\r\n  deleteTitle: string = \"Account Delete\";\r\n  freelanceTitle: string = \"Freelance\";\r\n\r\n  createDescription: string = \"Create new user accounts by uploading .csv files.\";\r\n  editDescription: string = \"Edit existing account details such as name, school, and group.\";\r\n  deleteDescription: string = \"Delete existing user accounts to remove user access to this application.\";\r\n  freelanceDescription: string = \"Access the number of hours worked for freelance instuctors.\";\r\n\r\n  createLink: string = \"admin/account/create\";\r\n  editLink: string = \"admin/account/edit\";\r\n  deleteLink: string = \"admin/account/delete\";\r\n  freelanceLink: string = \"admin/freelance\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n\r\n<br>\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <app-cards [title]=\"createTitle\" [description]=\"createDescription\" [href]=\"createLink\"></app-cards>\r\n        </div>\r\n        <div class=\"col\">\r\n            <app-cards [title]=\"editTitle\" [description]=\"editDescription\" [href]=\"editLink\"></app-cards>\r\n        </div>\r\n        <div class=\"col\">\r\n            <app-cards [title]=\"deleteTitle\" [description]=\"deleteDescription\" [href]=\"deleteLink\"></app-cards>\r\n        </div>\r\n        <div class=\"col\">\r\n            <app-cards [title]=\"freelanceTitle\" [description]=\"freelanceDescription\" [href]=\"freelanceLink\"></app-cards>\r\n        </div>\r\n    </div>\r\n</div>","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {first} from 'rxjs/operators';\r\nimport {NgxCsvParser, NgxCSVParserError} from 'ngx-csv-parser';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {CrudService} from '../../../core/services/crud.service';\r\nimport {Account, Role} from '../../../../app/core/models/account';\r\n\r\n@Component({\r\n  selector: 'app-account-create',\r\n  templateUrl: './account-create.component.html',\r\n  styleUrls: ['./account-create.component.scss']\r\n})\r\nexport class AccountCreateComponent implements OnInit {\r\n\r\n  // @ViewChild(ConfirmModalComponent) confirmModalComponent: ConfirmModalComponent;\r\n  @ViewChild('file') file: ElementRef | undefined;\r\n  accountFile: File;\r\n  csvRecords: any[] = [];\r\n  @ViewChild('fileImportInput', { static: false }) fileImportInput: any;\r\n  errors: string[] = [];\r\n  isUploading = false;\r\n\r\n  constructor(\r\n    private toastrService: ToastrService,\r\n    private ngxCsvParser: NgxCsvParser,\r\n    private crudService: CrudService,\r\n  ) {}\r\n  async ngOnInit(): Promise<void> {\r\n    const singleAccount: Account = await this.crudService.readByDocId('accounts', '7hQyZTken7p6eSAR8MQB')\r\n      .pipe(first())\r\n      .toPromise();\r\n    // console.log(singleAccount);\r\n\r\n    const allAccounts: Account[] = await this.crudService.read('accounts').pipe(first()).toPromise();\r\n    // console.log(allAccounts.sort((a, b) => a.username.localeCompare(b.username)));\r\n\r\n    const testAccounts: Account[] = await this.crudService.read('accounts',\r\n      'role', '==', 'student',\r\n      'school', '!=', 'NUS',\r\n    ).pipe(first()).toPromise();\r\n    // console.log(testAccounts);\r\n\r\n    const testAccounts2: Account[] = await this.crudService.read('accounts',\r\n      'role', '==', 'student',\r\n      'school', '!=', 'NUS',\r\n      'first_name', '==', 'Carecci',\r\n    ).pipe(first()).toPromise();\r\n    // console.log(testAccounts2);\r\n    const deleteAccount: Account[] = await this.crudService.read('accounts',\r\n      'username', '==', 'student4'\r\n    ).pipe(first()).toPromise();\r\n    if (deleteAccount.length > 0) {\r\n      await this.crudService.delete('accounts', deleteAccount[0].docId);\r\n    }\r\n\r\n  }\r\n  onCloseModal(response: string): void {\r\n    // console.log(response);\r\n  }\r\n  async uploadFile(): Promise<void> {\r\n    if (this.accountFile) {\r\n      this.errors = [];\r\n      // column is not found at all\r\n      let missingColumns = ['username',\t'role', 'school',\t'school_instrument_level', 'first_name',\t'last_name',\t'password'];\r\n      this.isUploading = true;\r\n      // Parse the file you want to select for the operation along with the configuration\r\n      await this.ngxCsvParser.parse(this.accountFile, {header: true, delimiter: ','})\r\n        .pipe().subscribe(async (result: any) => {\r\n        // console.log('Result', result);\r\n        this.csvRecords = result;\r\n        if (this.csvRecords.length < 2) {\r\n            this.errors.push('Less than 2 rows of data (1 row for column header and 1 row for the actual account data)');\r\n        }\r\n        else {\r\n          for (const [key, value] of Object.entries(this.csvRecords[0])) {\r\n            missingColumns = missingColumns.filter(val => val !== key);\r\n          }\r\n          if (missingColumns.length > 0) {\r\n            this.errors.push('Missing columns headers: ' + Array.from(missingColumns).join(', '));\r\n          }\r\n        }\r\n        if (this.errors.length === 0) {\r\n          let i = 2;\r\n          for (const csvRecord of this.csvRecords) {\r\n            const accounts = await this.crudService.read('accounts', 'username', '==', csvRecord.username).pipe(first()).toPromise();\r\n            // console.log(accounts);\r\n            const account: Account = {\r\n              username: csvRecord.username,\r\n              role: csvRecord.role.toLowerCase(),\r\n              school: csvRecord.school.split(','),\r\n              school_instrument_level: csvRecord.school_instrument_level.split(','),\r\n              first_name: csvRecord.first_name,\r\n              last_name: csvRecord.last_name,\r\n              password: csvRecord.password,\r\n              first_login: true,\r\n              is_delete: false\r\n            };\r\n            // console.log(account);\r\n            // value in the column is empty even though it is required\r\n            const emptyColumns = [];\r\n            for (const [key, value] of Object.entries(account)) {\r\n              if (value === '' ||\r\n                ((key === 'school' || key === 'school_instrument_level')\r\n                  && account.role !== 'admin' && value.length === 1 && value[0] === '')) {\r\n                emptyColumns.push(key);\r\n              }\r\n            }\r\n            // console.log(emptyColumns);\r\n            if (emptyColumns.length > 0) {\r\n              this.errors.push('Row ' + i + ' has missing values for the following columns: ' + Array.from(emptyColumns).join(', '));\r\n            }\r\n            if (account.role !== Role.invalid &&  !['admin', 'instructor', 'student'].includes(account.role)) {\r\n              this.errors.push('Row ' + i + ' has illegal values for role column (Only admin, instructor or student is accepted)');\r\n            }\r\n            if (account.password.length > 0 && account.password.length < 5) {\r\n              this.errors.push('Row ' + i + ' does not meet the minimum length requirement for password (5)');\r\n            }\r\n            // Stop the creation/updating of ALL accounts as long as there is a problem with 1 of the account\r\n            if (this.errors.length === 0) {\r\n              if (accounts.length === 0) {\r\n                // console.log(account);\r\n                await this.crudService.create('accounts', account); // .then(r => {const ownerDocId = r; } );\r\n              } else {\r\n                await this.crudService.update('accounts', accounts[0].docId, account);\r\n              }\r\n            }\r\n            i++;\r\n          }\r\n          if (this.errors.length === 0) {\r\n            this.toastrService.success('Uploaded data to database successfully!', '', {positionClass: 'toast-top-center'});\r\n          }\r\n          else {\r\n            this.toastrService.error('Errors encountered uploading the file!', '', {positionClass: 'toast-top-center'});\r\n          }\r\n        }\r\n        else {\r\n          this.toastrService.error('Errors encountered uploading the file!', '', {positionClass: 'toast-top-center'});\r\n        }\r\n        this.isUploading = false;\r\n        }, (error: NgxCSVParserError) => {\r\n        // console.log('Error', error);\r\n        this.isUploading = false;\r\n        this.toastrService.error('Incorrect file format!', '', {positionClass: 'toast-top-center'});\r\n      });\r\n\r\n    } else {\r\n      this.toastrService.error('Please upload a file!', '', {positionClass: 'toast-top-center'});\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","<!--<app-header [role]=\"'admin'\"></app-header>-->\r\n<app-header></app-header>\r\n<div class=\"account-create-wrapper wrapper-padding\">\r\n  <h1 class=\"mb-3\">Account & Grouping Creation</h1>\r\n  <div class=\"mb-2\">Please upload a file with account data in accordance to the format provided in the sample .csv file below.\r\n     <div class=\"mt-2 form-text text-muted\" >\r\n      Sample file:<a [href]=\"'../../../assets/csv/accounts_sample.csv'\">\r\n         {{\"accounts_sample.csv\"}}\r\n       </a>\r\n    </div>\r\n  </div>\r\n\r\n<!--  <label class=\"btn primary-btn\">-->\r\n<!--    <i class=\"fa fa-image\"></i> Choose File-->\r\n<!--    <input #file type=\"file\" accept=\"text/csv\"  class=\"d-none\" [textContent]=\"'Choose File'\"/>-->\r\n<!--  </label>-->\r\n  <app-dropzone [label]=\"'Please drag and drop your attachment files for this assignment here.\r\n  (Accepted format: .pdf)'\"\r\n                [acceptedFileTypes] = \"'.csv'\"\r\n                [acceptMultipleFiles]=false (fileEmit)=\"accountFile = $event[0]\"></app-dropzone>\r\n<!--  <input #file class=\"mb-3 form-control\" accept=\".csv\" type=\"file\">-->\r\n  <div class=\"mt-3 mb-3\">\r\n    <button class=\"btn btn-info\" (click)=\"uploadFile()\">Upload</button>\r\n  </div>\r\n  <div *ngIf=\"isUploading\">\r\n    Uploading in process: <mat-progress-bar id=\"progress-bar\" mode=\"indeterminate\" class=\"mt-3 mb-3\"></mat-progress-bar>\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"errors.length > 0 && !isUploading\">\r\n    <mat-error class=\"mb-3\">Error<span *ngIf=\"errors.length > 1\">s</span>\r\n       encountered (No accounts were added to database): </mat-error>\r\n      <div *ngFor=\"let error of errors; let i = index\">\r\n        <mat-error>{{i + 1}}. {{error}}</mat-error>\r\n      </div>\r\n  </ng-container>\r\n\r\n<!--  <app-confirm-modal (responseEmit)=\"onCloseModal($event)\"></app-confirm-modal>-->\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cards',\r\n  templateUrl: './cards.component.html',\r\n  styleUrls: ['./cards.component.scss']\r\n})\r\nexport class CardsComponent implements OnInit {\r\n\r\n  @Input('title') public title: any;\r\n  @Input('description') public description: any;\r\n  @Input('imgsrc') public imgsrc: any;\r\n  @Input('href') public href: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <!-- <img [src]=\"imgsrc\" class=\"card-image-top\"><br> -->\r\n        <h2 class=\"card-title\">{{title}}</h2>\r\n        <h4 class=\"card-text\">{{description}}</h4>\r\n        <a [href]=\"href\" class=\"btn btn-primary stretched-link\">{{title}}</a>\r\n    </div>\r\n</div>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dropzone',\r\n  templateUrl: './dropzone.component.html',\r\n  styleUrls: ['./dropzone.component.scss']\r\n})\r\nexport class DropzoneComponent implements OnInit {\r\n  files: File[] = [];\r\n  @Input() acceptMultipleFiles;\r\n  @Input() label: string;\r\n  @Input() acceptedFileTypes: string; // .pdf,.mp4\r\n  @Output() fileEmit = new EventEmitter<any>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onChange(event: any): void {\r\n    if (!this.acceptMultipleFiles) {\r\n      this.files = [];\r\n    }\r\n    this.files.push(...event.addedFiles);\r\n    this.fileEmit.emit(this.files);\r\n  }\r\n\r\n  onRemove(event: any): void {\r\n    this.files.splice(this.files.indexOf(event), 1);\r\n  }\r\n}\r\n","<div class=\"dropzone-wrapper\">\r\n  <ngx-dropzone [multiple]=\"acceptMultipleFiles\" (change)=\"onChange($event)\" [accept]=\"acceptedFileTypes\">\r\n    <ngx-dropzone-label> {{label}}</ngx-dropzone-label>\r\n    <ngx-dropzone-preview *ngFor=\"let f of files\" [removable]=\"true\" (removed)=\"onRemove(f)\">\r\n      <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n    </ngx-dropzone-preview>\r\n  </ngx-dropzone>\r\n</div>\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, SecurityContext, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {first} from 'rxjs/operators';\r\nimport {ToastrService} from 'ngx-toastr';\r\n// import {pdfDefaultOptions} from 'ngx-extended-pdf-viewer';\r\nimport {HttpClient} from '@angular/common/http';\r\n// import { saveAs } from 'file-saver';\r\nimport {AngularFireStorage} from '@angular/fire/storage';\r\nimport {AssignmentSubmission} from '../../../core/models/assignment-submission';\r\nimport {Assignment} from '../../../core/models/assignment';\r\nimport {Account} from '../../../core/models/account';\r\nimport {VideojsRecordComponent} from '../../../shared/components/videojs-record/videojs-record.component';\r\nimport {NgxExtendedPdfViewerComponent} from 'ngx-extended-pdf-viewer';\r\nimport {CrudService} from '../../../core/services/crud.service';\r\nimport firebase from 'firebase';\r\nimport Timestamp = firebase.firestore.Timestamp;\r\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\r\nimport {ConfirmModalComponent} from '../../../shared/components/confirm-modal/confirm-modal.component';\r\n// import {VideoPlayerComponent} from '../../../shared/components/video-player/video-player.component';\r\n@Component({\r\n  selector: 'app-assignment-mark-individual',\r\n  templateUrl: './assignment-mark-individual.component.html',\r\n  styleUrls: ['./assignment-mark-individual.component.scss']\r\n})\r\nexport class AssignmentMarkIndividualComponent implements OnInit {\r\n\r\n  @ViewChild(ConfirmModalComponent) confirmModalComponent: ConfirmModalComponent;\r\n  @Input() assignmentSubmissionDocId: string;\r\n  assignmentSubmission: AssignmentSubmission;\r\n  assignment: Assignment;\r\n  student: Account;\r\n  @ViewChild('scoresheet') scoresheet: ElementRef;\r\n  @ViewChild('feedbackAttachment') feedbackAttachment: ElementRef;\r\n  recordedVideo: Blob;\r\n  @ViewChild(VideojsRecordComponent) videojsRecordComponent: VideojsRecordComponent;\r\n  // @ViewChild(VideoPlayerComponent) videoPlayerComponent: VideoPlayerComponent;\r\n  @ViewChild('videoInput') videoInput: ElementRef;\r\n  @ViewChild(NgxExtendedPdfViewerComponent) ngxExtendedPdfViewerComponent: NgxExtendedPdfViewerComponent;\r\n  pdfUrl: SafeResourceUrl;\r\n  videoUrl: SafeResourceUrl;\r\n  contentEditable = true;\r\n  selectedRecordingOption = 'Screen Recording';\r\n  @ViewChild('cameraVideojs') cameraVideojs;\r\n  @ViewChild('screenVideojs') screenVideojs;\r\n  isRecording = false;\r\n  isPaused = false;\r\n  isRecorded = false;\r\n  recordedOption = '';\r\n  constructor(\r\n    private router: Router,\r\n    private toastrService: ToastrService,\r\n    // private httpClient: HttpClient,\r\n    private afStorage: AngularFireStorage,\r\n    private crudService: CrudService,\r\n    private domSanitizer: DomSanitizer\r\n  ) {\r\n\r\n  }\r\n  async ngOnInit(): Promise<void> {\r\n    this.assignmentSubmission = await this.crudService.readByDocId(\r\n      'assignment_submissions', this.assignmentSubmissionDocId).pipe(first()).toPromise();\r\n    this.assignment = await this.crudService.readByDocId(\r\n      'assignments', this.assignmentSubmission.assignment_doc_id).pipe(first()).toPromise();\r\n    this.pdfUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.assignmentSubmission.student_attachment_scoresheet);\r\n    this.videoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.assignmentSubmission.student_attachment_recording);\r\n    // console.log(this.pdfUrl);\r\n    // console.log(this.videoUrl);\r\n    // this.pdfUrl = this.domSanitizer.sanitize(SecurityContext.RESOURCE_URL,\r\n    //   this.domSanitizer.bypassSecurityTrustResourceUrl(this.assignmentSubmission.student_attachment_scoresheet));\r\n    // console.log(this.pdfUrl);\r\n    this.student = await this.crudService.readByDocId(\r\n      'accounts', this.assignmentSubmission.student_doc_id).pipe(first()).toPromise();\r\n    // this.assignmentSubmission = await this.assignmentSubmissionService.getAssignmentSubmission(this.assignmentSubmissionDocId)\r\n    //   .pipe(first())\r\n    //   .toPromise();\r\n    // this.assignment = await this.assignmentService.getAssignment(this.assignmentSubmission.assignmentDocId)\r\n    //   .pipe(first())\r\n    //   .toPromise();\r\n    // this.student = await this.studentService.getStudent(this.assignmentSubmission.studentDocId)\r\n    //   .pipe(first())\r\n    //   .toPromise();\r\n    // this.scoresheet.nativeElement.click();\r\n\r\n    // tslint:disable-next-line:max-line-length\r\n    // this.httpClient.get('https://firebasestorage.googleapis.com/v0/b/synchrony-8287c.appspot.com/o/assignment_submissions%2FExercises%20for%20Binary%20Trees%20(Answer%20Key).pdf', {responseType: 'blob', headers: {Accept: 'application/pdf'}})\r\n    //   .subscribe(blob => {\r\n    //     saveAs(blob, 'download.pdf');\r\n    //   });\r\n\r\n    // this.srcObj = { url: 'https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf',\r\n    //   withCredentials: true\r\n    // };\r\n    // tslint:disable-next-line:max-line-length\r\n    // this.pdfUrl = 'https://firebasestorage.googleapis.com/v0/b/synchrony-8287c.appspot.com/o/assignment_submissions%2FExercises%20for%20Binary%20Trees%20(Answer%20Key).pdf?alt=media&token=6baeba04-90b0-45e6-8bbb-2e6b90c54abf';\r\n    // tslint:disable-next-line:max-line-length\r\n    // this.pdfUrl = 'https://firebasestorage.googleapis.com/v0/b/synchrony-8287c.appspot.com/o/assignment_submissions%2FExercises%20for%20Binary%20Trees%20(Answer%20Key).pdf?alt=media&token=e074eec1-85f5-4898-b057-734cfb405a2d';\r\n    // this.pdfUrl = 'https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf';\r\n    // this.pdfUrl = 'gs://synchrony-8287c.appspot.com/assignment_submissions/Exercises for Binary Trees (Answer Key).pdf';\r\n    // console.log(this.pdfUrl);\r\n    // this.downloadFile();\r\n  }\r\n  // public downloadFile(): void {\r\n  //   // let url = 'https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf';\r\n  //   let url = 'https://firebasestorage.googleapis.com/v0/b/synchrony-8287c.appspot.com/\r\n  //   o/assignment_submissions%2FExercises%20for%20Binary%20Trees%20(Answer%20Key).pdf?';\r\n  //   const xhr = new XMLHttpRequest();\r\n  //   xhr.responseType = 'blob';\r\n  //   xhr.onload = (event) => {\r\n  //     /* Create a new Blob object using the response\r\n  //     *  data of the onload object.\r\n  //     */\r\n  //     const blob = new Blob([xhr.response], { type: 'image/jpg' });\r\n  //     const a: any = document.createElement('a');\r\n  //     a.style = 'display: none';\r\n  //     document.body.appendChild(a);\r\n  //     url = window.URL.createObjectURL(blob);\r\n  //     a.href = url;\r\n  //     a.download = 'aaa.pdf';\r\n  //     a.click();\r\n  //     window.URL.revokeObjectURL(url);\r\n  //   };\r\n  //   xhr.open('GET', url);\r\n  //   xhr.send();\r\n  // }\r\n  onCloseModal(response: string): void {\r\n    // console.log(response);\r\n    if (response === 'discard') {\r\n      this.isRecording = true;\r\n      this.isRecorded = false;\r\n    }\r\n  }\r\n  async onFeedback(input: Array<any>): Promise<void>  {\r\n    const filename = this.assignment.name + ' - ' + this.student.last_name + ' ' + this.student.first_name + '\\'s Feedback.mp4';\r\n    const path = 'feedbacks/' + filename;\r\n    this.assignmentSubmission.instructor_feedback_attachment_name = filename;\r\n    const task = this.afStorage.upload(path, this.recordedVideo);\r\n    await task.then(async (result) => {\r\n      await result.ref.getDownloadURL().then(\r\n        async (downloadUrl) => {\r\n          // console.log(downloadUrl);\r\n          this.assignmentSubmission.instructor_feedback_attachment = downloadUrl;\r\n          this.assignmentSubmission.feedback = input[0];\r\n          this.assignmentSubmission.grade = input[1];\r\n          this.assignmentSubmission.feedback_datetime = Timestamp.fromDate(new Date());\r\n          await this.crudService.update('assignment_submissions', this.assignmentSubmission.docId, this.assignmentSubmission);\r\n          // this.assignmentSubmissionService.updateAssignmentSubmission(this.assignmentSubmission.docId, this.assignmentSubmission)\r\n          //   .then(r => console.log(r));\r\n          this.toastrService.success('Added feedback successfully!', '', {positionClass: 'toast-top-center'});\r\n          this.router.navigate(['instructor/assignment/mark']);\r\n          // console.log(this.assignmentSubmission);\r\n        });\r\n    });\r\n  }\r\n  onRecordClick(): void {\r\n    if (this.isRecorded) {\r\n      this.confirmModalComponent.open\r\n      ('Mark Assignment', 'Are you sure you want to record again? This will delete your previous recording.',\r\n        ['close', 'discard'], null, this.assignmentSubmission);\r\n    }\r\n    else {\r\n      this.videojsRecordComponent.startRecording();\r\n      this.isRecording = true;\r\n    }\r\n  }\r\n  startRecording(isRecorded: boolean): void {\r\n    // this.isRecording = true;\r\n    // If the user is re-recording and did not change the recording option, no nee to ask for sharing permissions again\r\n    if (isRecorded && this.selectedRecordingOption === this.recordedOption) {\r\n      this.selectedRecordingOption === 'Camera Recording' ?\r\n        this.cameraVideojs.startRerecording() : this.screenVideojs.startRerecording();\r\n    }\r\n    else {\r\n      this.selectedRecordingOption === 'Camera Recording' ?\r\n        this.cameraVideojs.startRecording() : this.screenVideojs.startRecording();\r\n    }\r\n    // this.player.record().start();\r\n  }\r\n  pauseRecording(): void {\r\n    this.isPaused = true;\r\n    this.selectedRecordingOption === 'Camera Recording' ?\r\n      this.cameraVideojs.pauseRecording() : this.screenVideojs.pauseRecording();\r\n    // this.player.record().pause();\r\n  }\r\n  resumeRecording(): void {\r\n    this.isPaused = false;\r\n    this.selectedRecordingOption === 'Camera Recording' ?\r\n      this.cameraVideojs.resumeRecording() : this.screenVideojs.resumeRecording();\r\n    // this.player.record().resume();\r\n  }\r\n  stopRecording(): void {\r\n    this.isPaused = false;\r\n    this.isRecording = false;\r\n    this.isRecorded = true;\r\n    this.selectedRecordingOption === 'Camera Recording' ?\r\n      this.cameraVideojs.stopRecording() : this.screenVideojs.stopRecording();\r\n    // this.player.record().stop();\r\n  }\r\n  submitFeedback(): void {\r\n    this.confirmModalComponent.open('Submit Feedback', '', ['close', 'submit'], null, this.assignmentSubmission);\r\n  }\r\n  updateFeedbackAttachment($event: any): void {\r\n    this.recordedVideo = $event;\r\n    this.isRecording = false;\r\n    this.isRecorded = true;\r\n    this.recordedOption = this.selectedRecordingOption;\r\n    this.feedbackAttachment.nativeElement.href = URL.createObjectURL($event);\r\n    this.feedbackAttachment.nativeElement.download = 'feedback.mp4';\r\n  }\r\n\r\n  onInstructionsClick(): void {\r\n    this.confirmModalComponent.open\r\n    ('Recording Instructions', '', ['ok'], null, this.assignmentSubmission);\r\n  }\r\n  onGoBackClick(): void {\r\n    this.router.navigate(['instructor/assignment/mark']);\r\n  }\r\n  // loadVideo(): void {\r\n  //   this.videoPlayerComponent.loadVideo(this.videoInput);\r\n  // }\r\n  //\r\n  // onLoadPdfClick($event: any): void {\r\n  //   this.ngxExtendedPdfViewerComponent.src = $event.target.files.item(0);\r\n  // }\r\n}\r\n","<div class=\"assignment-mark-individual-wrapper\">\r\n<!--  <span [contentEditable]=\"contentEditable\">mmm</span>-->\r\n  <h1 *ngIf=\"assignment && student\" class=\"mb-1\">Mark {{assignment.name}} for {{student.last_name + ' ' +student.first_name}}</h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"16px\" class=\"mb-3\">\r\n    <button class=\"btn btn-info\" (click)=\"onInstructionsClick()\">View Instructions</button>\r\n<!--    <label class=\"btn btn-primary mb-0\">-->\r\n<!--      <i class=\"fa fa-image\"></i> Load PDF-->\r\n<!--      <input #pdfInput type=\"file\" accept=\"application/pdf\"  class=\"d-none\"(change)=\"onLoadPdfClick($event)\" [textContent]=\"'Load Pdf'\"/>-->\r\n<!--    </label>-->\r\n<!--    <label class=\"btn btn-primary mb-0\">-->\r\n<!--      <i class=\"fa fa-image\"></i> Load video-->\r\n<!--      <input #videoInput type=\"file\" accept=\"video/*\"  class=\"d-none\"(change)=\"loadVideo()\" [textContent]=\"'Upload Video'\"/>-->\r\n<!--    </label>-->\r\n  </div>\r\n\r\n<!--    <div [ngClass]=\"{'invisible' : isRecording}\" class=\"form-text mb-1\" >-->\r\n<!--    Download the scoresheet and open it in the pdf viewer on the left:-->\r\n<!--    <a #scoresheet target=\"_blank\" [href]=\"assignmentSubmission?.student_attachment_scoresheet\">-->\r\n<!--      {{assignmentSubmission?.student_attachment_scoresheet_name}}-->\r\n<!--    </a>-->\r\n<!--  </div>-->\r\n<!--  <div [ngClass]=\"{'invisible' : isRecording}\" class=\"form-text mb-3\" >-->\r\n<!--    Download the video recording and open it in the video player on the right:-->\r\n<!--    <a #videoPlayer target=\"_blank\" [href]=\"assignmentSubmission?.student_attachment_recording\">-->\r\n<!--      {{assignmentSubmission?.student_attachment_recording_name}}-->\r\n<!--    </a>-->\r\n<!--    <p>Then, click on the grey button below to share your screen and the white circle record button to start recording</p>-->\r\n<!--  </div>-->\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"32px grid\" fxLayoutAlign=\"space-between\" class=\"mb-2 min-height\">\r\n    <ng-container *ngIf=\"pdfUrl\">\r\n      <embed fxLayout=\"column\" fxFlex=\"50\" fxFlex.lt-md=\"100\" class=\"h-100\"\r\n             [ngClass.lt-md]=\"'reduced-height'\" [src]=\"pdfUrl\">\r\n    </ng-container>\r\n\r\n<!--    <ngx-extended-pdf-viewer fxLayout=\"column\" fxFlex=\"50\" fxFlex.lt-md=\"100\" useBrowserLocale=\"true\" height=\"80vh\" [ngClass.lt-md]=\"'reduced-height'\"-->\r\n<!--                             [src]=\"pdfUrl.toString()\"-->\r\n<!--    ></ngx-extended-pdf-viewer>-->\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex=\"50\" fxFlex.lt-md=\"100\" class=\"h-95\">\r\n      <video [ngClass]=\"selectedRecordingOption == 'Camera Recording' ? 'video-camera': 'video-screen'\" controls [src]=\"videoUrl\"></video>\r\n      <app-videojs-record #cameraVideojs *ngIf=\"selectedRecordingOption == 'Camera Recording'\"\r\n                          class=\"h-100\"\r\n                          [selectedRecordingOption] = \"'Camera Recording'\"\r\n                          (startedRecordingEmit)=\"this.isRecording = true;\"\r\n                          (recordingEmit)=\"updateFeedbackAttachment($event)\"\r\n                          (feedbackEmit)=\"submitFeedback()\"></app-videojs-record>\r\n\r\n    </div>\r\n  </div>\r\n<!--  <div fxLayout=\"row\" fxLayoutAlign=\"center\">-->\r\n<!--    <button *ngIf=\"!isRecording\" class=\"btn btn-success mr-3\" (click)=\"onRecordClick()\">{{recorded ? 'Record Again' : 'Record'}}</button>-->\r\n<!--    <button *ngIf=\"isRecording\"  class=\"btn btn-danger mr-3\" (click)=\"stopRecording()\">Stop</button>-->\r\n<!--  </div>-->\r\n  <div *ngIf=\"!isRecording\" fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"w-100\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label> Select a recording option </mat-label>\r\n      <mat-select  [(value)]=\"selectedRecordingOption\" placeholder=\"Recording option\">\r\n        <mat-option [value]=\"'Screen Recording'\" >Screen Recording</mat-option>\r\n        <mat-option [value]=\"'Camera Recording'\">Camera Recording</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"w-100 mb-2\">\r\n    <button *ngIf=\"!isRecording\" type=\"button\" mdbBtn color=\"success\"\r\n            (click)=\"startRecording(isRecorded)\">\r\n      {{isRecorded ? 'Record again' : 'Record'}}\r\n    </button>\r\n    <button *ngIf=\"isRecording && !isPaused\" type=\"button\" mdbBtn color=\"warning\"\r\n            (click)=\"pauseRecording()\">Pause</button>\r\n    <button *ngIf=\"isRecording && isPaused\" type=\"button\" mdbBtn color=\"success\"\r\n            (click)=\"resumeRecording()\">Resume</button>\r\n    <button *ngIf=\"isRecording && !isPaused\" type=\"button\" mdbBtn color=\"danger\"\r\n            (click)=\"stopRecording()\">Stop</button>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n      <button *ngIf=\"!isRecording && isRecorded\" type=\"button\" mdbBtn color=\"info\" rounded=\"true\" (click)=\"submitFeedback()\" mdbWavesEffect>\r\n        Submit Feedback</button>\r\n    </div>\r\n\r\n  </div>\r\n  <div  fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"form-text mb-3\" ><!-- *ngIf=\"recorded\"-->\r\n<!--    <div fxLayout=\"column\" fxLayoutAlign=\"start\" class=\"go-back-section\" (click)=\"onGoBackClick()\">-->\r\n<!--      <mat-icon class=\"mr-1\">arrow_back</mat-icon>-->\r\n<!--      <span class=\"go-back-text\">Back</span>-->\r\n<!--    </div>-->\r\n    <app-videojs-record #screenVideojs *ngIf=\"selectedRecordingOption == 'Screen Recording'\" [selectedRecordingOption] = \"'Screen Recording'\"\r\n                        class = \"mb-3\" (startedRecordingEmit)=\"this.isRecording = true;\"\r\n                        (recordingEmit)=\"updateFeedbackAttachment($event)\"\r\n     (feedbackEmit)=\"submitFeedback()\"></app-videojs-record>\r\n  </div>\r\n  <div *ngIf=\"!isRecording\" fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"form-text mb-3\" [ngClass]=\"{'invisible' : !isRecorded}\" ><!-- *ngIf=\"recorded\"-->\r\n    Click <a #feedbackAttachment>&nbsp;here&nbsp;</a> to download the recording\r\n  </div>\r\n<!--  <div fxLayout=\"row\" fxLayoutAlign=\"center\">-->\r\n<!--    <button *ngIf=\"!isRecording && recorded\" type=\"button\" mdbBtn color=\"info\" rounded=\"true\" (click)=\"submitFeedback()\" mdbWavesEffect>-->\r\n<!--      Submit Feedback</button>-->\r\n<!--  </div>-->\r\n\r\n  <app-confirm-modal (responseEmit)=\"onCloseModal($event)\" (feedbackEmit)=\"onFeedback($event)\"></app-confirm-modal>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {first} from 'rxjs/operators';\r\nimport {Assignment} from \"../../../core/models/assignment\";\r\nimport {AssignmentSubmission} from \"../../../core/models/assignment-submission\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {CrudService} from \"../../../core/services/crud.service\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\n// import {AssignmentSubmission} from '../../../core/models/assignment-submission';\r\n// import {AssignmentSubmissionService} from '../../../core/services/assignment-submission.service';\r\n// import {ActivatedRoute, Router} from '@angular/router';\r\n// import {Assignment} from '../../../core/models/assignment';\r\n// import {AssignmentService} from '../../../core/services/assignment.service';\r\n\r\n@Component({\r\n  selector: 'app-assignment-feedback-individual',\r\n  templateUrl: './assignment-feedback-individual.component.html',\r\n  styleUrls: ['./assignment-feedback-individual.component.scss']\r\n})\r\nexport class AssignmentFeedbackIndividualComponent implements OnInit {\r\n  assignmentSubmission: AssignmentSubmission;\r\n  assignmentSubmissionDocId: string;\r\n  assignment: Assignment;\r\n  videoUrl: SafeResourceUrl;\r\n  constructor(\r\n    // private assignmentSubmissionService: AssignmentSubmissionService,\r\n    // private assignmentService: AssignmentService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private crudService: CrudService,\r\n    private domSanitizer: DomSanitizer,\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.activatedRoute.queryParams.subscribe(async params => {\r\n      this.assignmentSubmissionDocId = params.assignmentSubmissionDocId;\r\n      this.assignmentSubmission = await this.crudService.readByDocId(\r\n        'assignment_submissions', this.assignmentSubmissionDocId).pipe(first()).toPromise();\r\n      this.assignment = await this.crudService.readByDocId(\r\n        'assignments', this.assignmentSubmission.assignment_doc_id).pipe(first()).toPromise();\r\n      this.videoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.assignmentSubmission.instructor_feedback_attachment);\r\n      // console.log(this.videoUrl);\r\n      // this.assignmentSubmission = await this.assignmentSubmissionService.getAssignmentSubmission(this.assignmentSubmissionDocId)\r\n      //   .pipe(first())\r\n      //   .toPromise();\r\n      // this.assignment = await this.assignmentService.getAssignment(this.assignmentSubmission.assignmentDocId)\r\n      //   .pipe(first())\r\n      //   .toPromise();\r\n      // console.log(this.assignmentSubmission);\r\n    });\r\n\r\n  }\r\n  onGoBackClick(): void {\r\n    this.router.navigate(['student/assignment/view']);\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"assignment-feedback-individual-wrapper wrapper-padding max-width-section\">\r\n\r\n  <h1 *ngIf=\"assignment\" class=\"mb-3\">{{assignment.name}}'s Feedback</h1><br>\r\n  <div class='container'>\r\n    <div class='row'>\r\n      <div class='col'>\r\n        <div *ngIf=\"assignmentSubmission && (assignmentSubmission.student_attachment_scoresheet || assignmentSubmission.student_attachment_recording)\" class=\"form-text mb-3\" >\r\n          <h3 class=\"mb-3\"><b>My Submission</b></h3>\r\n          <div *ngIf=\"assignmentSubmission.student_attachment_recording\" class=\"form-text mb-3\" >\r\n            Music Score Sheet: <a [href]=\"assignmentSubmission.student_attachment_scoresheet\" target=\"_blank\">\r\n            {{assignmentSubmission.student_attachment_scoresheet_name}}</a>\r\n          </div>\r\n          <div *ngIf=\"assignmentSubmission.student_attachment_recording\" class=\"form-text mb-3\" >\r\n            Recording: <a [href]=\"assignmentSubmission.student_attachment_recording\" target=\"_blank\">\r\n            {{assignmentSubmission.student_attachment_recording_name}}</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class='col'>\r\n        <h3 class=\"mb-3\"><b>Instructor's feedback</b></h3>\r\n        <p *ngIf=\"assignmentSubmission\"class=\"mb-3\">{{assignmentSubmission.feedback | titlecase}}</p>\r\n        <h4>Score: {{assignmentSubmission.grade}}/100</h4>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <h3 class=\"mb-3\"><b>Attachments</b></h3>\r\n  <video controls [src]=\"videoUrl\" class=\"instructor-feedback-video\"></video>\r\n  <div *ngIf=\"assignmentSubmission && assignmentSubmission.instructor_feedback_attachment\" class=\"form-text mb-3\" >\r\n      Click to download: <a [href]=\"assignmentSubmission.instructor_feedback_attachment\">{{assignmentSubmission.instructor_feedback_attachment_name}}</a>\r\n  </div>\r\n  <div class=\"go-back-section\" (click)=\"onGoBackClick()\">\r\n    <mat-icon class=\"mr-1\">arrow_back</mat-icon>\r\n    <span class=\"go-back-text\">Back</span>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport { FormControl } from '@angular/forms';\r\nimport { exit } from 'process';\r\nimport { Assignment } from 'src/app/core/models/assignment';\r\nimport { CrudService } from 'src/app/core/services/crud.service';\r\nimport { Router } from '@angular/router';\r\nimport firebase from 'firebase';\r\nimport Timestamp = firebase.firestore.Timestamp;\r\n\r\n@Component({\r\n  selector: 'app-assignment-create',\r\n  templateUrl: './assignment-create.component.html',\r\n  styleUrls: ['./assignment-create.component.scss']\r\n})\r\n\r\nexport class AssignmentCreateComponent implements OnInit {\r\n\r\n  event!: Date | null;\r\n  newAssignmentForm!: FormGroup;\r\n  timeSelected!: any ;\r\n  schoolSelected!: string;\r\n  instrumentSelected!: any;\r\n  instrumentOptions: string[] = [];\r\n  schoolOptions!: string[];\r\n  sessionAccount!: any;\r\n  schoolInstrumentLevel!: string[];\r\n  school: any;\r\n  classGroups: string[] = [];\r\n  levelSelected: any;\r\n  levelOptions: string[] = [];\r\n  buttonTexts: string[] = [];\r\n  buttonText = '';\r\n  buttonRepeat = false;\r\n  files: File[] = [];\r\n  classUndefined = false;\r\n  assignmentDocID: string;\r\n  assignmentCreateDate: Timestamp;\r\n  assignmentDueDate: Timestamp;\r\n  schools: string[] = [];\r\n  timeUndefined = false;\r\n  isSubmitClicked = false;\r\n  fileNames: string[] = [];\r\n  dueDateError = false;\r\n  createAssignmentButtonClickable = false;\r\n  docIdAfterUpload = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private afStorage: AngularFireStorage,\r\n    private crudService: CrudService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n\r\n    // Populate school dropdown list\r\n    this.sessionAccount = JSON.parse(sessionStorage.getItem('account')!);\r\n    // console.log(this.sessionAccount);\r\n    this.schoolOptions = this.sessionAccount.school;\r\n    // console.log(this.schoolOptions);\r\n    this.schoolInstrumentLevel = this.sessionAccount.school_instrument_level;\r\n    // console.log(this.schoolInstrumentLevel);\r\n  }\r\n\r\n  initForm(): void{\r\n    this.newAssignmentForm = this.fb.group({\r\n      title: ['', Validators.required],\r\n      description: ['']\r\n    });\r\n    // console.log(this.loginForm);\r\n  }\r\n\r\n  get title(): FormControl{\r\n    return this.newAssignmentForm.get('title') as FormControl;\r\n  }\r\n\r\n  get description(): FormControl{\r\n    return this.newAssignmentForm.get('description') as FormControl;\r\n  }\r\n\r\n  captureEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n    this.event = event.value;\r\n  }\r\n\r\n  populateInstrumentOptions(){\r\n    // console.log('Instrument Function Triggered');\r\n    // Clear all subsequent options\r\n    this.instrumentOptions = [];\r\n    this.classGroups = [];\r\n    this.levelOptions = [];\r\n\r\n    for (const classGroup of this.schoolInstrumentLevel){\r\n      // Split classgroup to find school\r\n      this.school = classGroup.split('_')[0];\r\n      if (this.school == this.schoolSelected){\r\n        this.classGroups.push(classGroup);\r\n        if (!this.instrumentOptions.includes(classGroup.split('_')[1])){\r\n          this.instrumentOptions.push(classGroup.split('_')[1]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  populateLevelOptions(){\r\n    // Clear levelOptions\r\n    this.levelOptions = [];\r\n    for (const classGroup of this.classGroups){\r\n      this.levelOptions.push(classGroup.split('_')[2]);\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n\r\n    // Check if any of the parameters are undefined. If undefined, show error and no action is taken\r\n    if (this.schoolSelected === undefined || this.instrumentOptions === undefined || this.levelSelected === undefined){\r\n      this.classUndefined = true;\r\n    } else {\r\n      this.classUndefined = false;\r\n      // Capture the school,instrument,levels details\r\n      this.buttonText = this.schoolSelected + '_' + this.instrumentSelected + '_' + this.levelSelected;\r\n\r\n      // Validate if the same text has been put before\r\n      // console.log(this.buttonText);\r\n\r\n      if (this.buttonTexts.includes(this.buttonText)){\r\n        this.buttonRepeat = true;\r\n      } else {\r\n        this.buttonTexts.push(this.buttonText);\r\n\r\n        // Submit button is unclickable if there are no classes\r\n        if (this.buttonTexts.length > 0){\r\n          this.createAssignmentButtonClickable = true;\r\n        } else {\r\n          this.createAssignmentButtonClickable = false;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  removeButton(i: number){\r\n    this.buttonTexts.shift();\r\n    this.buttonRepeat = false;\r\n\r\n    // console.log(this.buttonTexts.length);\r\n    // Submit button is unclickable if there are no classes\r\n    if (this.buttonTexts.length == 0){\r\n      this.createAssignmentButtonClickable = false;\r\n    } else {\r\n      this.createAssignmentButtonClickable = true;\r\n    }\r\n\r\n  }\r\n\r\n  // Dropzone upload functions\r\n\r\n  onSelect(event: any) {\r\n    this.files.push(...event.addedFiles);\r\n  }\r\n\r\n  onRemove(event: any) {\r\n    this.files.splice(this.files.indexOf(event), 1);\r\n  }\r\n\r\n  upload(){\r\n    this.docIdAfterUpload = sessionStorage.getItem('assignment_docId');\r\n    let index = 0;\r\n    for (const ele of this.files){\r\n      // console.log(ele);\r\n      const location: string = 'assignment/' + this.docIdAfterUpload + '/' + this.fileNames[index];\r\n      this.afStorage.upload(location, ele);\r\n      index += 1;\r\n      // /* Notes: file directory, create if does not exist:\r\n      // under assignments/assignmentDocid*/\r\n      // var location:string = \"assignments/\" + this.assignment.assignmentid + \"/\" + this.assignment.student + \"/\"\r\n      // this.afStorage.upload( location + file_name, ele)\r\n      // .then(()=>this.updateAssignment())\r\n      // .catch(()=>this.toastr.error(\"Unable to Upload Assignment!\"))\r\n    }\r\n    alert('Assignment has been created!');\r\n    this.router.navigate(['/instructor/home']);\r\n  }\r\n\r\n\r\n  async createAssignment() {\r\n\r\n    // To trigger title check validation\r\n    this.isSubmitClicked = true;\r\n\r\n    // Retrieving Necessary information\r\n    // Creating assignment Create Time\r\n    this.assignmentCreateDate = Timestamp.fromDate(new Date());\r\n    // console.log('Assignment Time: ', this.assignmentCreateDate);\r\n\r\n    // Retrieve Assignment Due date\r\n    // Validation check for due date: Cannot be undefined\r\n    if (this.event == null) {\r\n      this.timeUndefined = true;\r\n      return;\r\n    }\r\n    this.assignmentDueDate = Timestamp.fromDate(new Date(this.event.getUTCFullYear(), this.event?.getMonth(),\r\n      this.event.getDate(), this.timeSelected.substring(0, 2), this.timeSelected.substring(2, 4)));\r\n    // console.log('Assignment Due Time:', this.assignmentDueDate);\r\n\r\n\r\n    // Due date validation\r\n    // Assignment cannot be due before current date\r\n\r\n    if (this.assignmentCreateDate > this.assignmentDueDate) {\r\n      this.dueDateError = true;\r\n      return;\r\n    } else {\r\n      this.dueDateError = false;\r\n    }\r\n\r\n    // console.log(this.dueDateError);\r\n\r\n    if (this.newAssignmentForm.status) {\r\n\r\n      // Retrieve instructor Account DocID\r\n      // console.log('DocID:', this.sessionAccount.docId);\r\n\r\n      // Retrieve description\r\n      // console.log('description:', this.newAssignmentForm.value.description);\r\n\r\n      // Retrieve assignment name\r\n      // console.log('title:', this.newAssignmentForm.value.title);\r\n\r\n      // Retrieve schools\r\n      // console.log(this.buttonTexts);\r\n      for (const buttonText of this.buttonTexts) {\r\n        // Retrieve schools and put in schools array\r\n        if (!this.schools.includes(buttonText.split('_')[0])) {\r\n          this.schools.push(buttonText.split('_')[0]);\r\n        }\r\n      }\r\n\r\n      // console.log('Schools:', this.schools);\r\n\r\n      // Get schoolInstrumentLevel\r\n      // console.log('schoolInstrumentLevel', this.buttonTexts);\r\n\r\n      // get file names\r\n      const i = 0;\r\n      for (let i = 0; i < this.files.length; i++) {\r\n        this.fileNames.push(this.files[i].name);\r\n      }\r\n      // console.log('file names:', this.fileNames);\r\n\r\n      // Pack all information into assignment class:\r\n\r\n      const finalAssignmentSubmission: Assignment = {\r\n        instructor_account_doc_id: this.sessionAccount.docId,\r\n        created_datetime: this.assignmentCreateDate,\r\n        description: this.newAssignmentForm.value.description,\r\n        due_datetime: this.assignmentDueDate,\r\n        name: this.newAssignmentForm.value.title,\r\n        school: this.schools,\r\n        school_instrument_level: this.buttonTexts,\r\n        file_names: this.fileNames\r\n      };\r\n\r\n      await this.crudService.create('assignments', finalAssignmentSubmission)\r\n        .then(function (docRef) {\r\n          // console.log('Document: ', docRef);\r\n          // console.log('Document', typeof (docRef));\r\n          sessionStorage.setItem('assignment_docId', docRef);\r\n        }).catch(() => console.log('Unable to Upload Assignment!'));\r\n\r\n      // console.log('no man\\'s land');\r\n\r\n      this.upload();\r\n\r\n    }\r\n  }\r\n}\r\n\r\n","<app-header></app-header>\r\n\r\n<div class = assignment_create_wrapper>\r\n  <div class=\"container\">\r\n    <br>\r\n    <h1>New Assignment</h1>\r\n    <br>\r\n    <form [formGroup]=\"newAssignmentForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n      <label for=\"title\"> Title: </label> <br>\r\n      <input type=\"text\" formControlName=\"title\"/>\r\n\r\n      <br>\r\n\r\n      <label for=\"due_date\"> Due Date: </label>\r\n      <mat-form-field>\r\n        <input matInput [matDatepicker]=\"picker\" placeholder=\"Select a Date:\"\r\n              (dateInput)=\"captureEvent('input', $event)\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n\r\n      <label for=\"due_time\"> Due Time: </label>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Select a time slot: </mat-label>\r\n        <mat-select [(value)]=\"timeSelected\">\r\n          <mat-option>None</mat-option>\r\n          <mat-option value=\"0800\">8:00am</mat-option>\r\n          <mat-option value=\"0830\">8:30am</mat-option>\r\n          <mat-option value=\"0900\">9:00am</mat-option>\r\n          <mat-option value=\"0930\">9:30am</mat-option>\r\n          <mat-option value=\"1000\">10:00am</mat-option>\r\n          <mat-option value=\"1030\">10:30am</mat-option>\r\n          <mat-option value=\"1100\">11:00am</mat-option>\r\n          <mat-option value=\"1130\">11:30am</mat-option>\r\n          <mat-option value=\"1200\">12:00am</mat-option>\r\n          <mat-option value=\"1230\">12:30am</mat-option>\r\n          <mat-option value=\"1300\">1:00pm</mat-option>\r\n          <mat-option value=\"1330\">1:30pm</mat-option>\r\n          <mat-option value=\"1400\">2:00pm</mat-option>\r\n          <mat-option value=\"1430\">2:30pm</mat-option>\r\n          <mat-option value=\"1500\">3:00pm</mat-option>\r\n          <mat-option value=\"1530\">3:30pm</mat-option>\r\n          <mat-option value=\"1600\">4:00pm</mat-option>\r\n          <mat-option value=\"1630\">4:30pm</mat-option>\r\n          <mat-option value=\"1700\">5:00pm</mat-option>\r\n          <mat-option value=\"1730\">5:30pm</mat-option>\r\n          <mat-option value=\"1800\">6:00pm</mat-option>\r\n          <mat-option value=\"1830\">6:30pm</mat-option>\r\n          <mat-option value=\"1900\">7:00pm</mat-option>\r\n          <mat-option value=\"1930\">7:30pm</mat-option>\r\n          <mat-option value=\"2000\">8:00pm</mat-option>\r\n          <mat-option value=\"2030\">8:30pm</mat-option>\r\n          <mat-option value=\"2100\">9:00pm</mat-option>\r\n          <mat-option value=\"2130\">9:30pm</mat-option>\r\n          <mat-option value=\"2200\">10:00pm</mat-option>\r\n          <mat-option value=\"2230\">10:30pm</mat-option>\r\n          <mat-option value=\"2300\">11:00pm</mat-option>\r\n          <mat-option value=\"2330\">11:30pm</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n      <label for=\"select_school\"> Select A School: </label>\r\n\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label> Select a school: </mat-label>\r\n        <mat-select [(value)]=\"schoolSelected\" (selectionChange) = \"populateInstrumentOptions()\">\r\n          <mat-option *ngFor=\"let schoolOption of schoolOptions\" [value]=\"schoolOption\">\r\n            {{schoolOption}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <label for = \"select_instrument\"> Select An Instrument </label>\r\n\r\n      <!-- <app-input-dropdown-select [instrumentOptions]=\"instrumentOptions\" (outputData)=\"getInstrumentOptions($event)\"></app-input-dropdown-select> -->\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Select an instrument:</mat-label>\r\n        <mat-select [(value)]=\"instrumentSelected\" (selectionChange) = \"populateLevelOptions()\">\r\n          <mat-option *ngFor=\"let instrumentOption of instrumentOptions\" [value]=\"instrumentOption\">\r\n            {{instrumentOption}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <label for = \"select_level\"> Select Level </label>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Select A Level:</mat-label>\r\n        <mat-select [(value)]=\"levelSelected\">\r\n          <mat-option *ngFor=\"let levelOption of levelOptions\" [value]=\"levelOption\">\r\n            {{levelOption}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <button class=\"badge\" *ngFor=\"let buttonText of buttonTexts; let i = index;\" (click)=\"removeButton(i)\">{{buttonText}}</button>\r\n\r\n      <mat-error *ngIf=\"buttonRepeat && !isSubmitClicked\">\r\n        Don't repeat the same class twice!\r\n      </mat-error>\r\n\r\n      <mat-error *ngIf=\"classUndefined\">\r\n        You must specify a school, instrument and level to add a class!\r\n      </mat-error>\r\n\r\n      <mat-error *ngIf=\"timeUndefined\">\r\n        Due date or due time has not been specified!\r\n      </mat-error>\r\n\r\n      <mat-error *ngIf=\"dueDateError\">\r\n        Your due date is set before today!\r\n      </mat-error>\r\n\r\n      <mat-error *ngIf=\"title.errors?.required && isSubmitClicked\">\r\n        Please insert an assignment title!\r\n      </mat-error>\r\n\r\n      <br><button type=\"submit\">Add Class</button>\r\n\r\n      <br>\r\n      <label for = \"description\"> Assignment Description: </label>\r\n      <br>\r\n      <textarea rows=\"4\" cols=\"80\" formControlName=\"description\"></textarea>\r\n\r\n      <br>\r\n      <button [disabled]=\"!createAssignmentButtonClickable\" class=\"create_assignment\" (click)=\"createAssignment()\">Create Assignment</button>\r\n    </form>\r\n\r\n    <!-- Dropzone -->\r\n    <br>\r\n    <div class=\"custom-dropzone\" ngx-dropzone (change)=\"onSelect($event)\" [accept]=\"'.pdf,.mp4'\">\r\n      <ngx-dropzone-label> Please drag and drop your attachment files for this assignment here.<br>(Accepted format: .pdf)</ngx-dropzone-label>\r\n      <ngx-dropzone-preview *ngFor=\"let f of files\" [removable]=\"true\" (removed)=\"onRemove(f)\">\r\n        <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n      </ngx-dropzone-preview>\r\n    </div>\r\n\r\n    <!-- <p>Date day: {{event?.getDate()}}</p> -->\r\n    <!-- There is a bug in the calendar, be sure to add +1 later on  -->\r\n    <!-- <p>Date month: {{event?.getMonth()}}</p>\r\n    <p>Date year: {{event?.getUTCFullYear()}}</p>\r\n    <p>Time selected: {{timeSelected}}</p>\r\n    <p>School selected: {{schoolSelected}}</p>\r\n    <p>Instrument selected: {{instrumentSelected}}</p>\r\n    <p>Level selected: {{levelSelected}}</p>\r\n    <p>Form Value: {{ newAssignmentForm.value | json }}</p>\r\n    <p>Form status: {{ newAssignmentForm.status | json }}</p> -->\r\n\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n// Shared\r\nimport { LoginComponent} from './ui/home/login/login.component';\r\nimport { UpdatePasswordComponent } from './ui/home/update_password/update-password/update-password.component';\r\nimport { CardsComponent } from './shared/components/cards/cards.component';\r\n\r\nimport { AccountCreateComponent} from './ui/admin/account-create/account-create.component';\r\nimport { AccountEditComponent} from './ui/admin/account-edit/account-edit.component';\r\nimport { AccountEditFormComponent } from './ui/admin/account-edit-form/account-edit-form.component';\r\nimport { AccountDeleteComponent } from './ui/admin/account-delete/account-delete.component';\r\nimport { FreelanceWageComponent } from './ui/admin/freelance-wage/freelance-wage.component';\r\nimport { AdminHomeComponent } from './ui/admin/admin-home/admin-home.component';\r\n// Instructor\r\nimport { InstructorHomeComponent } from './ui/instructor/instructor-home/instructor-home.component';\r\nimport { AssignmentCreateComponent } from './ui/instructor/assignment-create/assignment-create.component';\r\nimport { AssignmentEditComponent } from './ui/instructor/assignment-edit/assignment-edit.component';\r\nimport { AssignmentMarkComponent } from './ui/instructor/assignment-mark/assignment-mark.component';\r\nimport { AssignmentEditIndividualComponent } from './ui/instructor/assignment-edit-individual/assignment-edit-individual.component';\r\n// Student\r\nimport { StudentHomeComponent } from './ui/student/student-home/student-home.component';\r\nimport {AssignmentViewComponent} from \"./ui/student/assignment-view/assignment-view.component\";\r\nimport {AssignmentSubmitIndividualComponent} from \"./ui/student/assignment-submit-individual/assignment-submit-individual.component\";\r\nimport {AssignmentFeedbackIndividualComponent} from \"./ui/student/assignment-feedback-individual/assignment-feedback-individual.component\";\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  children: [\r\n    {\r\n      path: 'login',\r\n      pathMatch: 'full',\r\n      component: LoginComponent\r\n    },\r\n    {\r\n      path:'update_password',\r\n      pathMatch: 'full',\r\n      component: UpdatePasswordComponent\r\n    },\r\n    // Admin\r\n    {\r\n      path: 'admin/home',\r\n      pathMatch: 'full',\r\n      component: AdminHomeComponent\r\n    },\r\n    {\r\n      path: 'admin/account/create',\r\n      pathMatch: 'full',\r\n      component: AccountCreateComponent\r\n    },\r\n    {\r\n      path: 'admin/account/delete',\r\n      pathMatch: 'full',\r\n      component: AccountDeleteComponent\r\n    },\r\n    {\r\n      path: 'admin/account/edit',\r\n      pathMatch: 'full',\r\n      component: AccountEditComponent\r\n    },\r\n    {\r\n      path: 'admin/account/edit/form',\r\n      pathMatch: 'full',\r\n      component: AccountEditFormComponent\r\n    },\r\n    {\r\n      path: 'admin/freelance',\r\n      pathMatch: 'full',\r\n      component: FreelanceWageComponent\r\n    },\r\n    // Instructor\r\n    {\r\n      path: 'instructor/home',\r\n      pathMatch: 'full',\r\n      component: InstructorHomeComponent\r\n    },\r\n    {\r\n      path: 'instructor/assignment/create',\r\n      pathMatch: 'full',\r\n      component: AssignmentCreateComponent\r\n    },\r\n    {\r\n      path: 'instructor/assignment/edit',\r\n      pathMatch: 'full',\r\n      component: AssignmentEditComponent\r\n    },\r\n    {\r\n      path: 'instructor/assignment/edit/assignment/:docId',\r\n      pathMatch: 'full',\r\n      component: AssignmentEditIndividualComponent\r\n    },\r\n    {\r\n      path: 'instructor/assignment/mark',\r\n      pathMatch: 'full',\r\n      component: AssignmentMarkComponent\r\n    },\r\n    // Student\r\n    {\r\n      path: 'student/home',\r\n      pathMatch: 'full',\r\n      component: StudentHomeComponent\r\n    },\r\n    {\r\n      path: 'student/assignment/view',\r\n      pathMatch: 'full',\r\n      component: AssignmentViewComponent\r\n    },\r\n    {\r\n      path: 'student/assignment/submit',\r\n      pathMatch: 'full',\r\n      component: AssignmentSubmitIndividualComponent\r\n    },\r\n    {\r\n      path: 'student/assignment/feedback',\r\n      pathMatch: 'full',\r\n      component: AssignmentFeedbackIndividualComponent\r\n    },\r\n    // Shared\r\n    {\r\n      path: 'test/cards',\r\n      pathMatch: 'full',\r\n      component: CardsComponent\r\n    },\r\n    // Default\r\n    {\r\n      path: '**',\r\n      pathMatch: 'full',\r\n      component: LoginComponent\r\n    }\r\n  ]\r\n}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, Input, Output , EventEmitter } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatSelectChange } from '@angular/material/select';\r\n\r\n@Component({\r\n  selector: 'app-input-dropdown-select',\r\n  templateUrl: './input-dropdown-select.component.html',\r\n  styleUrls: ['./input-dropdown-select.component.scss']\r\n})\r\nexport class InputDropdownSelectComponent implements OnInit {\r\n\r\n  @Input('inputDataList') public inputDataList!: any;\r\n  @Input('name') public name!: any;\r\n\r\n  selectedData!: any;\r\n\r\n  @Output() public outputData = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    // empty\r\n  }\r\n\r\n  // Method: get the dropdown list values and prepare to sent to parent\r\n  selected_value(event: MatSelectChange): void {\r\n    this.selectedData = {\r\n      value: event.value,\r\n      // text: event.source.triggerValue\r\n    };\r\n    this.sentToParent();\r\n  }\r\n\r\n  // Method: sent data to the parent\r\n  public sentToParent(): void{\r\n    this.outputData.emit(this.selectedData);\r\n  }\r\n\r\n}\r\n\r\n/*\r\nexport class InputDropdownSelectComponent implements OnInit {\r\n\r\n  @Input('schools') public schools!:any;\r\n  @Input('groups') public groups!:any;\r\n  @Input('roles') public roles!:any;\r\n\r\n  inputData = new FormControl();\r\n  inputDataList!:any;\r\n  name!:string;\r\n\r\n  @Output() public outputData = new EventEmitter<any>()\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    //this.get_filter_options();\r\n    console.log(this.inputDataList)\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    //this.get_filter_options();\r\n  }\r\n\r\n    get_filter_options(){\r\n    if(this.roles!=null){\r\n      this.inputDataList = this.roles;\r\n      this.name = \"Roles\";\r\n    }\r\n    if(this.groups!=null){\r\n      this.inputDataList = this.groups;\r\n      this.name = \"Groups\";\r\n    }\r\n    if(this.schools!=null){\r\n      this.inputDataList = this.schools\r\n      this.name = \"Schools\";\r\n    }\r\n  }\r\n\r\n  // Method: get the dropdown list values and prepare to sent to parent\r\n  selected_value(event: MatSelectChange) {\r\n    this.selectedData = {\r\n      value: event.value,\r\n      //text: event.source.triggerValue\r\n    };\r\n    this.sentToParent()\r\n  }\r\n\r\n  // Method: sent data to the parent\r\n  public sentToParent(){\r\n    this.outputData.emit(this.selectedData)\r\n  }\r\n\r\n}\r\n*/\r\n","<mat-form-field appearance=\"fill\">\r\n<mat-label> {{name}} </mat-label>\r\n\r\n<!--\r\n<mat-select [formControl]=\"inputData\" (selectionChange)=\"selected_value($event)\" multiple>\r\n    <mat-option *ngFor=\"let ele of inputDataList\" [value]=\"ele\">{{ele}}</mat-option>\r\n</mat-select> -->\r\n\r\n<mat-select (selectionChange)=\"selected_value($event)\" [placeholder]=\"inputDataList\" multiple >\r\n<!--  [value]=\"inputDataList\"-->\r\n    <mat-option *ngFor=\"let ele of inputDataList\" [value]=\"ele\">{{ele}}</mat-option>\r\n</mat-select>\r\n\r\n</mat-form-field>\r\n\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {first} from \"rxjs/operators\";\r\nimport {AssignmentSubmission} from \"../../../core/models/assignment-submission\";\r\nimport {CrudService} from \"../../../core/services/crud.service\";\r\nimport {Account} from \"../../../core/models/account\";\r\nimport {TranslateService} from \"@ngx-translate/core\";\r\nimport {DatePipe} from \"@angular/common\";\r\nimport {Assignment} from \"../../../core/models/assignment\";\r\n\r\n@Component({\r\n  selector: 'app-assignment-mark',\r\n  templateUrl: './assignment-mark.component.html',\r\n  styleUrls: ['./assignment-mark.component.scss']\r\n})\r\nexport class AssignmentMarkComponent implements OnInit {\r\n  loggedInAccount: Account;\r\n  accountUsername!: '';\r\n  dataSource!: Array<AssignmentSubmission>;\r\n  displayedColumns: string[] = ['assignment_name', 'assignment_school_instrument_level', 'assignment_student_name', 'assignment_submission_status', 'assignment_feedback_status', 'action'];\r\n  actionType = 'assignmentMark';\r\n  // tableActions?: Array<TableAction> = [TableAction.assignment_mark, TableAction.assignment_instructor_feedback];\r\n  // tableColumns?: Array<TableColumn> = [ TableColumn.position, TableColumn.assignment_name2,\r\n  //   TableColumn.assignment_school, TableColumn.assignment_group, TableColumn.assignment_student_name,\r\n  //   TableColumn.assignment_submission_status, TableColumn.assignment_feedback_datetime, TableColumn.actions];\r\n  // // tableColumns?: Array<TableColumn> = [TableColumn.position, TableColumn.assignment_submission_assignment_name,\r\n  //   TableColumn.assignment_submission_student_name, TableColumn.assignment_submission_submission_status,\r\n  // TableColumn.assignment_submission_due_datetime, TableColumn.assignment_submission_feedback_datetime, TableColumn.actions];\r\n  // , TableColumn.assignment_student, TableColumn.assignment_status\r\n  //   , TableColumn.assignment_due_datetime, TableColumn.assignment_feedback_datetime, TableColumn.actions];\r\n  // filterActions?: Array<FilterAction> = [FilterAction.assignment_school, FilterAction.assignment_group, FilterAction.assignment_feedback];\r\n  assignmentSubmissions: Array<AssignmentSubmission>;\r\n  // instructorDocId = localStorage.getItem('activeDocId');\r\n  assignmentSubmissionDocId: '';\r\n  // @ViewChild(CommonTableComponent) commonTableComponent: CommonTableComponent;\r\n  schoolOptions: string[] = [];\r\n  instrumentOptions: string[] = [];\r\n  levelOptions: string[] = [];\r\n  feedbackStatusOptions: string[] = ['With Feedback', 'Without Feedback'];\r\n  selectedSchoolOptions: string[] = [];\r\n  selectedInstrumentOptions: string[] = [];\r\n  selectedLevelOptions: string[] = [];\r\n  selectedFeedbackStatusOptions: string[] = [];\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private crudService: CrudService,\r\n    private translateService: TranslateService,\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.loggedInAccount = JSON.parse(sessionStorage.getItem('account'));\r\n    // const dataSource = await this.crudService.read('assignment_submissions').pipe(first()).toPromise();\r\n    // console.log(dataSource);\r\n    this.translateService.use('en');\r\n    const datePipe = new DatePipe(this.translateService.currentLang);\r\n    const loggedInAccount = JSON.parse(sessionStorage.getItem('account'));\r\n    this.activatedRoute.queryParams.subscribe(async params => {\r\n      this.assignmentSubmissionDocId = params.assignmentSubmissionDocId;\r\n      this.assignmentSubmissions = await this.crudService.read('assignment_submissions',\r\n        'school_instrument_level', 'array-contains-any', loggedInAccount.school_instrument_level).pipe(first()).toPromise();\r\n      const filteredAssignmentSubmissions = [];\r\n      for (const assignmentSubmission of this.assignmentSubmissions) {\r\n\r\n        assignmentSubmission.assignment = await this.crudService.readByDocId(\r\n          'assignments', assignmentSubmission.assignment_doc_id).pipe(first()).toPromise();\r\n        if (assignmentSubmission.assignment == null || new Date() < assignmentSubmission.assignment.due_datetime.toDate()) { continue; }\r\n        assignmentSubmission.assignment_name = assignmentSubmission.assignment?.name;\r\n        assignmentSubmission.student = await this.crudService.readByDocId(\r\n          'accounts', assignmentSubmission.student_doc_id).pipe(first()).toPromise();\r\n        assignmentSubmission.student_name = assignmentSubmission.student.last_name + ' ' +\r\n          assignmentSubmission.student.first_name;\r\n        assignmentSubmission.submission_status = 'Last submitted on ' +\r\n          datePipe.transform(assignmentSubmission.submitted_datetime.toDate(), 'EEEE, MMMM d, y, h:mm:ss a');\r\n        assignmentSubmission.feedback_status = 'Not reviewed';\r\n        if (assignmentSubmission.feedback_datetime != null) {\r\n          assignmentSubmission.feedback_status = 'Last marked on ' +\r\n            datePipe.transform(assignmentSubmission.feedback_datetime.toDate(), 'EEEE, MMMM d, y, h:mm:ss a');\r\n        }\r\n        filteredAssignmentSubmissions.push(assignmentSubmission);\r\n      }\r\n      this.assignmentSubmissions = filteredAssignmentSubmissions;\r\n      this.dataSource = this.assignmentSubmissions;\r\n      this.updateSelectOptions();\r\n      // console.log(this.dataSource);\r\n    });\r\n  }\r\n  filterData($event: any, type: string): void {\r\n    // console.log($event.value);\r\n    switch (type) {\r\n      case 'School':\r\n        this.selectedSchoolOptions = $event.value;\r\n        break;\r\n      case 'Instrument':\r\n        this.selectedInstrumentOptions = $event.value;\r\n        break;\r\n      case 'Level':\r\n        this.selectedLevelOptions = $event.value;\r\n        break;\r\n      case 'Feedback Status':\r\n        this.selectedFeedbackStatusOptions = $event.value;\r\n        break;\r\n    }\r\n    const filteredAssignmentSubmissions: Array<AssignmentSubmission> = [];\r\n    for (const assignmentSubmission of this.assignmentSubmissions) {\r\n      for (const schoolInstrumentLevel of assignmentSubmission.school_instrument_level) {\r\n          const schoolInstrumentLevelArr = schoolInstrumentLevel.split('_');\r\n          const school = schoolInstrumentLevelArr[0];\r\n          const instrument = schoolInstrumentLevelArr[1];\r\n          const level = schoolInstrumentLevelArr[2];\r\n          if (\r\n            (this.selectedSchoolOptions.length === 0 || this.selectedSchoolOptions.includes(school)) &&\r\n            (this.selectedInstrumentOptions.length === 0 || this.selectedInstrumentOptions.includes(instrument)) &&\r\n            (this.selectedLevelOptions.length === 0 || this.selectedLevelOptions.includes(level)) &&\r\n            (this.selectedFeedbackStatusOptions.length === 0 ||\r\n              (this.selectedFeedbackStatusOptions.includes('With Feedback') && assignmentSubmission.feedback_status !== 'Not reviewed') ||\r\n              (this.selectedFeedbackStatusOptions.includes('Without Feedback') && assignmentSubmission.feedback_status === 'Not reviewed'))\r\n          ) {\r\n            filteredAssignmentSubmissions.push(assignmentSubmission);\r\n          }\r\n      }\r\n    }\r\n    this.dataSource = filteredAssignmentSubmissions;\r\n    this.updateSelectOptions();\r\n  }\r\n\r\n  private updateSelectOptions(): void {\r\n    this.schoolOptions = [];\r\n    this.instrumentOptions = [];\r\n    this.levelOptions = [];\r\n    for (const assignmentSubmission of this.assignmentSubmissions) {\r\n      for (const schoolInstrumentLevel of assignmentSubmission.school_instrument_level) {\r\n          const schoolInstrumentLevelArr = schoolInstrumentLevel.split('_');\r\n          const school = schoolInstrumentLevelArr[0];\r\n          const instrument = schoolInstrumentLevelArr[1];\r\n          const level = schoolInstrumentLevelArr[2];\r\n          if (!this.schoolOptions.includes(school)) {\r\n            this.schoolOptions.push(school);\r\n          }\r\n          if (!this.instrumentOptions.includes(instrument)) {\r\n            this.instrumentOptions.push(instrument);\r\n          }\r\n          if (!this.levelOptions.includes(level)) {\r\n            this.levelOptions.push(level);\r\n          }\r\n        }\r\n      }\r\n    }\r\n}\r\n","<app-header></app-header>\r\n<div class=\"assignment-mark-wrapper wrapper-padding max-width-section\">\r\n  <ng-container *ngIf=\"assignmentSubmissionDocId\">\r\n    <app-assignment-mark-individual [assignmentSubmissionDocId]=\"assignmentSubmissionDocId\"></app-assignment-mark-individual>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"!assignmentSubmissionDocId\">\r\n    <h1 class=\"mb-3\">Mark Assignment</h1>\r\n    <app-input-dropdown-select [inputDataList]=\"feedbackStatusOptions\" [name]=\"'Feedback Status'\"  (outputData)=\"filterData($event, 'Feedback Status')\"></app-input-dropdown-select>\r\n    <br>\r\n    <app-input-dropdown-select [inputDataList]=\"schoolOptions\" [name]=\"'School'\"  (outputData)=\"filterData($event, 'School')\"></app-input-dropdown-select>\r\n    <app-input-dropdown-select [inputDataList]=\"instrumentOptions\" [name]=\"'Instrument'\"  (outputData)=\"filterData($event, 'Instrument')\"></app-input-dropdown-select>\r\n    <app-input-dropdown-select [inputDataList]=\"levelOptions\" [name]=\"'Level'\"  (outputData)=\"filterData($event, 'Level')\"></app-input-dropdown-select>\r\n    <app-table [dataSource]=\"dataSource\" [displayedColumns]=\"displayedColumns\" [actionType]=\"actionType\"></app-table>\r\n    <!--    <app-search-filter [filterActions] = \"filterActions\"></app-search-filter>-->\r\n<!--    <app-common-table [tableActions]=\"tableActions\" [tableColumns]=\"tableColumns\" [assignmentSubmissions]=\"assignmentSubmissions\"></app-common-table>-->\r\n  </ng-container>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { Account } from 'src/app/core/models/account';\r\nimport { CrudService } from 'src/app/core/services/crud.service';\r\nimport { Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  // Variables only for update password page that are not applicable here\r\n  updatePasswordPage = false;\r\n  passwordMatch = true;\r\n\r\n  loginPage = true;\r\n  loginForm!: FormGroup;\r\n  isSubmitClicked = false;\r\n  isValidUsernamePasswordCombi = true;\r\n  role!: String;\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private crudservice: CrudService,\r\n    private router:Router\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize formbuilder\r\n    this.initForm();\r\n  }\r\n\r\n  initForm(): void{\r\n    this.loginForm = this.fb.group({\r\n      username:[\"\",Validators.required],\r\n      password:[\"\",Validators.required],\r\n      //Added to avoid error\r\n      newPassword:[\"\"]\r\n    })\r\n    // console.log(this.loginForm);\r\n  }\r\n\r\n  // Retrieve username\r\n  get username(): FormControl{\r\n    return this.loginForm.get('username') as FormControl;\r\n  }\r\n\r\n  //Added to avoid error\r\n  get newPassword():FormControl{\r\n    return this.loginForm.get('newPassword') as FormControl;\r\n  }\r\n\r\n  // Retrieve password\r\n  get password(): FormControl{\r\n    return this.loginForm.get('password') as FormControl;\r\n  }\r\n\r\n  // Functions\r\n\r\n  onSubmit(){\r\n\r\n    // Submit was clicked. Form validation will take place\r\n    this.isSubmitClicked = true;\r\n\r\n    // Validate account and password\r\n    if (this.loginForm.valid) {\r\n\r\n      // Calling firebase service\r\n      this.crudservice.read(\"accounts\",\"username\",\"==\",this.loginForm.value.username,\"password\",\"==\",this.loginForm.value.password).pipe(first()).subscribe(async (account:any) => {\r\n        // console.log(account);\r\n\r\n        if (account.length==0){\r\n          // username and password does not exist on the database\r\n          // console.log(\"Login denied\");\r\n          this.isValidUsernamePasswordCombi = false;\r\n        } else {\r\n          // Login is successful\r\n          // console.log(\"Login successful\");\r\n\r\n          // Remove password from object\r\n          delete account[0].password;\r\n\r\n          // Store account details as session\r\n          // console.log(account[0]);\r\n          //sessionStorage.setItem('account',account[0]);\r\n          sessionStorage.setItem('account', JSON.stringify(account[0]));\r\n\r\n          // Check if account has been deleted \r\n          if (account[0].is_delete){\r\n            alert(\"Account has been deactivated. Please seek the admin to reset your account\");\r\n            return;\r\n          }\r\n\r\n          // Check if user has logged in for the first time. If so, redirect to update password\r\n          if (account[0].first_login){\r\n            // If user has logged in for the first time, redirect to update password page\r\n            alert(\"You have logged in for the first time. You will be redirected to change your password\");\r\n            this.router.navigate([\"/update_password\"]);\r\n          } else {\r\n            // If user has logged in before, direct to web page based on role\r\n            this.role = account[0].role;\r\n            // console.log(this.role);\r\n\r\n            if (this.role==\"instructor\"){\r\n                // Redirect to instructor page\r\n                // console.log(\"teacher's page\");\r\n                this.router.navigate([\"instructor/home\"]);\r\n              } else if (this.role == \"student\"){\r\n                // Redirect to student page\r\n                // console.log(\"student's page\")\r\n                this.router.navigate([\"student/assignment/view\"]);\r\n              } else if (this.role == \"admin\"){\r\n                // console.log(\"admin page\");\r\n                this.router.navigate([\"admin/home\"]);\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}